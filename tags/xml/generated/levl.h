#pragma once
#pragma pack(push,1)
#include "../infiniteStructs.h"
#include <stdint.h>


/** 
  * This file was auto-generated with xml2h.py. DO NOT EDIT!!
  * Edit the XML files instead and regenerate this file.
  * Changes will not persist otherwise!
  */

// Generated from: hirt3/levl.xml

// Flag Definitions

// Field flags

#define FLAGS_DELETE_BIT (1<<0)
#define FLAGS_ADJUSTED_BIT (1<<1)
#define FLAGS_APPROXIMATED_POSITION_BIT (1<<2)


// Field placement_flags

#define PLACEMENT_FLAGS_NOT_AUTOMATICALLY (1<<0)
#define PLACEMENT_FLAGS_UNUSED0 (1<<1)
#define PLACEMENT_FLAGS_UNUSED1 (1<<2)
#define PLACEMENT_FLAGS_UNUSED2 (1<<3)
#define PLACEMENT_FLAGS_LOCK_TYPE_TO_ENV_OBJECT (1<<4)
#define PLACEMENT_FLAGS_LOCK_TRANSFORM_TO_ENV_OBJECT (1<<5)
#define PLACEMENT_FLAGS_NEVER_PLACED (1<<6)
#define PLACEMENT_FLAGS_LOCK_NAME_TO_ENV_OBJECT (1<<7)
#define PLACEMENT_FLAGS_CREATE_AT_REST (1<<8)
#define PLACEMENT_FLAGS_STORE_ORIENTATIONS (1<<9)
#define PLACEMENT_FLAGS_STARTUP (1<<10)
#define PLACEMENT_FLAGS_ATTACH_PHYSICALLY (1<<11)
#define PLACEMENT_FLAGS_ATTACH_WITH_SCALE (1<<12)
#define PLACEMENT_FLAGS_NO_PARENT_LIGHTING (1<<13)
#define PLACEMENT_FLAGS_DISABLE_OPPORTUNITY (1<<14)
#define PLACEMENT_FLAGS_SUBTRACT (1<<15)
#define PLACEMENT_FLAGS_OVERRIDE_CVW_LIGHTING (1<<16)
#define PLACEMENT_FLAGS_OVERRIDE_CVW_LIGHTING___DISABLE_CVW_FOR_THIS_PLACEMENT (1<<17)
#define PLACEMENT_FLAGS_CLIENT_ONLY_NO_RELEVANCY (1<<18)
#define PLACEMENT_FLAGS_NON_NETWORKED_COLLISION (1<<19)


// Field gravity_flags

#define GRAVITY_FLAGS_APPLY_OVERRIDE (1<<0)
#define GRAVITY_FLAGS_APPLY_TO_CHILDREN_ALSO (1<<1)


// Field script_flags

#define SCRIPT_FLAGS_SCRIPTS_DISABLED (1<<0)
#define SCRIPT_FLAGS_USE_OVERRIDE_LISTS (1<<1)
#define SCRIPT_FLAGS_SCRIPTS_ALWAYS_RUN (1<<2)


// Field transform_flags

#define TRANSFORM_FLAGS_MIRRORED (1<<0)


// Field Nav_Mesh_Flags

#define NAV_MESH_FLAGS_CHILDREN_INHERIT_NAVMESH_INTERACTION (1<<0)
#define NAV_MESH_FLAGS_NAVMESH_ALWAYS_LOADED (1<<1)


// Field flags_2

#define FLAGS_2_TRACKABLE (1<<0)
#define FLAGS_2_ENABLED_BY_DEFAULT (1<<1)
#define FLAGS_2_OUTLINE (1<<2)
#define FLAGS_2_IMMEDIATE_RESPONSE (1<<3)
#define FLAGS_2_FOLLOW_OFFSCREEN (1<<4)
#define FLAGS_2_DO_NOT_TRACK_CHILDREN (1<<5)
#define FLAGS_2_DO_NOT_OUTLINE_CHILDREN (1<<6)


// Field Layer_flags

#define LAYER_FLAGS_LAYER_IS_MAP_VARIANT (1<<0)


// Field association_types

#define ASSOCIATION_TYPES_AERIAL_VEHICLE_SPAWN_POINT (1<<0)
#define ASSOCIATION_TYPES_GROUND_VEHICLE_SPAWN_POINT (1<<1)


// Field active_change_colors

#define ACTIVE_CHANGE_COLORS_PRIMARY (1<<0)
#define ACTIVE_CHANGE_COLORS_SECONDARY (1<<1)
#define ACTIVE_CHANGE_COLORS_TERTIARY (1<<2)
#define ACTIVE_CHANGE_COLORS_QUATERNARY (1<<3)


// Field spawn_flags

#define SPAWN_FLAGS_UNIQUE_SPAWN (1<<0)
#define SPAWN_FLAGS_NOT_INITIALLY_PLACED (1<<1)
#define SPAWN_FLAGS_DEPRECATED (1<<2)
#define SPAWN_FLAGS_IS_SHORTCUT_OBJECT (1<<3)
#define SPAWN_FLAGS_CAN_SPAWN_ON_BIPEDS (1<<4)
#define SPAWN_FLAGS_DOES_NOT_RESPAWN (1<<5)
#define SPAWN_FLAGS_ABANDONMENT_TIMER_ALWAYS_ACTIVE (1<<6)
#define SPAWN_FLAGS_OVERRIDE_CANDY_MONITOR_DEFAULTS (1<<7)
#define SPAWN_FLAGS_TRACKED_BY_CANDY_MONITOR (1<<8)


// Field teleporter_passability

#define TELEPORTER_PASSABILITY_DISALLOW_PLAYERS (1<<0)
#define TELEPORTER_PASSABILITY_ALLOW_LIGHT_LAND_VEHICLES (1<<1)
#define TELEPORTER_PASSABILITY_ALLOW_HEAVY_LAND_VEHICLES (1<<2)
#define TELEPORTER_PASSABILITY_ALLOW_FLYING_VEHICLES (1<<3)
#define TELEPORTER_PASSABILITY_ALLOW_PROJECTILES (1<<4)


// Field Spawn_Point_Flags

#define SPAWN_POINT_FLAGS_NEVER_SPAWN_IN_VEHICLE (1<<0)


// Field Multiplayer_Property_Flags

#define MULTIPLAYER_PROPERTY_FLAGS_DENY_SPAWN_POINTS (1<<0)
#define MULTIPLAYER_PROPERTY_FLAGS_APPLY_SPAWN_ZONE_PROPERTIES_TO_OPPOSING_TEAMS (1<<1)
#define MULTIPLAYER_PROPERTY_FLAGS_APPLY_SPAWN_ZONE_PROPERTIES_TO_INITIAL_SPAWN (1<<2)
#define MULTIPLAYER_PROPERTY_FLAGS_WEAPONPAD_INITIALLY_DISABLED (1<<3)
#define MULTIPLAYER_PROPERTY_FLAGS_IGNORE_SPAWN_ZONE_FALLOFF_FUNCTION (1<<4)


// Field MapZones

#define MAPZONES_ZERO (1<<0)
#define MAPZONES_ONE (1<<1)
#define MAPZONES_TWO (1<<2)
#define MAPZONES_THREE (1<<3)
#define MAPZONES_FOUR (1<<4)
#define MAPZONES_FIVE (1<<5)
#define MAPZONES_SIX (1<<6)
#define MAPZONES_SEVEN (1<<7)


// Field MapZoneConfigurations

#define MAPZONECONFIGURATIONS_ALPHA (1<<0)
#define MAPZONECONFIGURATIONS_BRAVO (1<<1)
#define MAPZONECONFIGURATIONS_CHARLIE (1<<2)
#define MAPZONECONFIGURATIONS_DELTA (1<<3)
#define MAPZONECONFIGURATIONS_ECHO (1<<4)
#define MAPZONECONFIGURATIONS_FOXTROT (1<<5)
#define MAPZONECONFIGURATIONS_GOLF (1<<6)
#define MAPZONECONFIGURATIONS_HOTEL (1<<7)


// Field placement_flags_2

#define PLACEMENT_FLAGS_2_NOT_AUTOMATICALLY (1<<0)
#define PLACEMENT_FLAGS_2_UNUSED0 (1<<1)
#define PLACEMENT_FLAGS_2_UNUSED1 (1<<2)
#define PLACEMENT_FLAGS_2_UNUSED2 (1<<3)
#define PLACEMENT_FLAGS_2_LOCK_TYPE_TO_ENV_OBJECT (1<<4)
#define PLACEMENT_FLAGS_2_LOCK_TRANSFORM_TO_ENV_OBJECT (1<<5)
#define PLACEMENT_FLAGS_2_NEVER_PLACED (1<<6)
#define PLACEMENT_FLAGS_2_LOCK_NAME_TO_ENV_OBJECT (1<<7)
#define PLACEMENT_FLAGS_2_CREATE_AT_REST (1<<8)
#define PLACEMENT_FLAGS_2_STORE_ORIENTATIONS (1<<9)
#define PLACEMENT_FLAGS_2_STARTUP (1<<10)
#define PLACEMENT_FLAGS_2_ATTACH_PHYSICALLY (1<<11)
#define PLACEMENT_FLAGS_2_ATTACH_WITH_SCALE (1<<12)
#define PLACEMENT_FLAGS_2_NO_PARENT_LIGHTING (1<<13)
#define PLACEMENT_FLAGS_2_DISABLE_OPPORTUNITY (1<<14)
#define PLACEMENT_FLAGS_2_SUBTRACT (1<<15)
#define PLACEMENT_FLAGS_2_OVERRIDE_CVW_LIGHTING (1<<16)
#define PLACEMENT_FLAGS_2_OVERRIDE_CVW_LIGHTING___DISABLE_CVW_FOR_THIS_PLACEMENT (1<<17)
#define PLACEMENT_FLAGS_2_CLIENT_ONLY_NO_RELEVANCY (1<<18)
#define PLACEMENT_FLAGS_2_NON_NETWORKED_COLLISION (1<<19)


// Field gravity_flags_2

#define GRAVITY_FLAGS_2_APPLY_OVERRIDE (1<<0)
#define GRAVITY_FLAGS_2_APPLY_TO_CHILDREN_ALSO (1<<1)


// Field script_flags_2

#define SCRIPT_FLAGS_2_SCRIPTS_DISABLED (1<<0)
#define SCRIPT_FLAGS_2_USE_OVERRIDE_LISTS (1<<1)
#define SCRIPT_FLAGS_2_SCRIPTS_ALWAYS_RUN (1<<2)


// Field transform_flags_2

#define TRANSFORM_FLAGS_2_MIRRORED (1<<0)


// Field Nav_Mesh_Flags_2

#define NAV_MESH_FLAGS_2_CHILDREN_INHERIT_NAVMESH_INTERACTION (1<<0)
#define NAV_MESH_FLAGS_2_NAVMESH_ALWAYS_LOADED (1<<1)


// Field flags_3

#define FLAGS_3_TRACKABLE (1<<0)
#define FLAGS_3_ENABLED_BY_DEFAULT (1<<1)
#define FLAGS_3_OUTLINE (1<<2)
#define FLAGS_3_IMMEDIATE_RESPONSE (1<<3)
#define FLAGS_3_FOLLOW_OFFSCREEN (1<<4)
#define FLAGS_3_DO_NOT_TRACK_CHILDREN (1<<5)
#define FLAGS_3_DO_NOT_OUTLINE_CHILDREN (1<<6)


// Field Layer_flags_2

#define LAYER_FLAGS_2_LAYER_IS_MAP_VARIANT (1<<0)


// Field association_types_2

#define ASSOCIATION_TYPES_2_AERIAL_VEHICLE_SPAWN_POINT (1<<0)
#define ASSOCIATION_TYPES_2_GROUND_VEHICLE_SPAWN_POINT (1<<1)


// Field active_change_colors_2

#define ACTIVE_CHANGE_COLORS_2_PRIMARY (1<<0)
#define ACTIVE_CHANGE_COLORS_2_SECONDARY (1<<1)
#define ACTIVE_CHANGE_COLORS_2_TERTIARY (1<<2)
#define ACTIVE_CHANGE_COLORS_2_QUATERNARY (1<<3)


// Field flags_4

#define FLAGS_4_DEAD (1<<0)
#define FLAGS_4_OPENED (1<<1)
#define FLAGS_4_NOT_ENTERABLE_BY_PLAYER (1<<2)


// Field spawn_flags_2

#define SPAWN_FLAGS_2_UNIQUE_SPAWN (1<<0)
#define SPAWN_FLAGS_2_NOT_INITIALLY_PLACED (1<<1)
#define SPAWN_FLAGS_2_DEPRECATED (1<<2)
#define SPAWN_FLAGS_2_IS_SHORTCUT_OBJECT (1<<3)
#define SPAWN_FLAGS_2_CAN_SPAWN_ON_BIPEDS (1<<4)
#define SPAWN_FLAGS_2_DOES_NOT_RESPAWN (1<<5)
#define SPAWN_FLAGS_2_ABANDONMENT_TIMER_ALWAYS_ACTIVE (1<<6)
#define SPAWN_FLAGS_2_OVERRIDE_CANDY_MONITOR_DEFAULTS (1<<7)
#define SPAWN_FLAGS_2_TRACKED_BY_CANDY_MONITOR (1<<8)


// Field teleporter_passability_2

#define TELEPORTER_PASSABILITY_2_DISALLOW_PLAYERS (1<<0)
#define TELEPORTER_PASSABILITY_2_ALLOW_LIGHT_LAND_VEHICLES (1<<1)
#define TELEPORTER_PASSABILITY_2_ALLOW_HEAVY_LAND_VEHICLES (1<<2)
#define TELEPORTER_PASSABILITY_2_ALLOW_FLYING_VEHICLES (1<<3)
#define TELEPORTER_PASSABILITY_2_ALLOW_PROJECTILES (1<<4)


// Field Spawn_Point_Flags_2

#define SPAWN_POINT_FLAGS_2_NEVER_SPAWN_IN_VEHICLE (1<<0)


// Field Multiplayer_Property_Flags_2

#define MULTIPLAYER_PROPERTY_FLAGS_2_DENY_SPAWN_POINTS (1<<0)
#define MULTIPLAYER_PROPERTY_FLAGS_2_APPLY_SPAWN_ZONE_PROPERTIES_TO_OPPOSING_TEAMS (1<<1)
#define MULTIPLAYER_PROPERTY_FLAGS_2_APPLY_SPAWN_ZONE_PROPERTIES_TO_INITIAL_SPAWN (1<<2)
#define MULTIPLAYER_PROPERTY_FLAGS_2_WEAPONPAD_INITIALLY_DISABLED (1<<3)
#define MULTIPLAYER_PROPERTY_FLAGS_2_IGNORE_SPAWN_ZONE_FALLOFF_FUNCTION (1<<4)


// Field MapZones_2

#define MAPZONES_2_ZERO (1<<0)
#define MAPZONES_2_ONE (1<<1)
#define MAPZONES_2_TWO (1<<2)
#define MAPZONES_2_THREE (1<<3)
#define MAPZONES_2_FOUR (1<<4)
#define MAPZONES_2_FIVE (1<<5)
#define MAPZONES_2_SIX (1<<6)
#define MAPZONES_2_SEVEN (1<<7)


// Field MapZoneConfigurations_2

#define MAPZONECONFIGURATIONS_2_ALPHA (1<<0)
#define MAPZONECONFIGURATIONS_2_BRAVO (1<<1)
#define MAPZONECONFIGURATIONS_2_CHARLIE (1<<2)
#define MAPZONECONFIGURATIONS_2_DELTA (1<<3)
#define MAPZONECONFIGURATIONS_2_ECHO (1<<4)
#define MAPZONECONFIGURATIONS_2_FOXTROT (1<<5)
#define MAPZONECONFIGURATIONS_2_GOLF (1<<6)
#define MAPZONECONFIGURATIONS_2_HOTEL (1<<7)


// Field placement_flags_3

#define PLACEMENT_FLAGS_3_NOT_AUTOMATICALLY (1<<0)
#define PLACEMENT_FLAGS_3_UNUSED0 (1<<1)
#define PLACEMENT_FLAGS_3_UNUSED1 (1<<2)
#define PLACEMENT_FLAGS_3_UNUSED2 (1<<3)
#define PLACEMENT_FLAGS_3_LOCK_TYPE_TO_ENV_OBJECT (1<<4)
#define PLACEMENT_FLAGS_3_LOCK_TRANSFORM_TO_ENV_OBJECT (1<<5)
#define PLACEMENT_FLAGS_3_NEVER_PLACED (1<<6)
#define PLACEMENT_FLAGS_3_LOCK_NAME_TO_ENV_OBJECT (1<<7)
#define PLACEMENT_FLAGS_3_CREATE_AT_REST (1<<8)
#define PLACEMENT_FLAGS_3_STORE_ORIENTATIONS (1<<9)
#define PLACEMENT_FLAGS_3_STARTUP (1<<10)
#define PLACEMENT_FLAGS_3_ATTACH_PHYSICALLY (1<<11)
#define PLACEMENT_FLAGS_3_ATTACH_WITH_SCALE (1<<12)
#define PLACEMENT_FLAGS_3_NO_PARENT_LIGHTING (1<<13)
#define PLACEMENT_FLAGS_3_DISABLE_OPPORTUNITY (1<<14)
#define PLACEMENT_FLAGS_3_SUBTRACT (1<<15)
#define PLACEMENT_FLAGS_3_OVERRIDE_CVW_LIGHTING (1<<16)
#define PLACEMENT_FLAGS_3_OVERRIDE_CVW_LIGHTING___DISABLE_CVW_FOR_THIS_PLACEMENT (1<<17)
#define PLACEMENT_FLAGS_3_CLIENT_ONLY_NO_RELEVANCY (1<<18)
#define PLACEMENT_FLAGS_3_NON_NETWORKED_COLLISION (1<<19)


// Field gravity_flags_3

#define GRAVITY_FLAGS_3_APPLY_OVERRIDE (1<<0)
#define GRAVITY_FLAGS_3_APPLY_TO_CHILDREN_ALSO (1<<1)


// Field script_flags_3

#define SCRIPT_FLAGS_3_SCRIPTS_DISABLED (1<<0)
#define SCRIPT_FLAGS_3_USE_OVERRIDE_LISTS (1<<1)
#define SCRIPT_FLAGS_3_SCRIPTS_ALWAYS_RUN (1<<2)


// Field transform_flags_3

#define TRANSFORM_FLAGS_3_MIRRORED (1<<0)


// Field Nav_Mesh_Flags_3

#define NAV_MESH_FLAGS_3_CHILDREN_INHERIT_NAVMESH_INTERACTION (1<<0)
#define NAV_MESH_FLAGS_3_NAVMESH_ALWAYS_LOADED (1<<1)


// Field flags_5

#define FLAGS_5_TRACKABLE (1<<0)
#define FLAGS_5_ENABLED_BY_DEFAULT (1<<1)
#define FLAGS_5_OUTLINE (1<<2)
#define FLAGS_5_IMMEDIATE_RESPONSE (1<<3)
#define FLAGS_5_FOLLOW_OFFSCREEN (1<<4)
#define FLAGS_5_DO_NOT_TRACK_CHILDREN (1<<5)
#define FLAGS_5_DO_NOT_OUTLINE_CHILDREN (1<<6)


// Field Layer_flags_3

#define LAYER_FLAGS_3_LAYER_IS_MAP_VARIANT (1<<0)


// Field association_types_3

#define ASSOCIATION_TYPES_3_AERIAL_VEHICLE_SPAWN_POINT (1<<0)
#define ASSOCIATION_TYPES_3_GROUND_VEHICLE_SPAWN_POINT (1<<1)


// Field active_change_colors_3

#define ACTIVE_CHANGE_COLORS_3_PRIMARY (1<<0)
#define ACTIVE_CHANGE_COLORS_3_SECONDARY (1<<1)
#define ACTIVE_CHANGE_COLORS_3_TERTIARY (1<<2)
#define ACTIVE_CHANGE_COLORS_3_QUATERNARY (1<<3)


// Field flags_6

#define FLAGS_6_DEAD (1<<0)
#define FLAGS_6_OPENED (1<<1)
#define FLAGS_6_NOT_ENTERABLE_BY_PLAYER (1<<2)


// Field spawn_flags_3

#define SPAWN_FLAGS_3_UNIQUE_SPAWN (1<<0)
#define SPAWN_FLAGS_3_NOT_INITIALLY_PLACED (1<<1)
#define SPAWN_FLAGS_3_DEPRECATED (1<<2)
#define SPAWN_FLAGS_3_IS_SHORTCUT_OBJECT (1<<3)
#define SPAWN_FLAGS_3_CAN_SPAWN_ON_BIPEDS (1<<4)
#define SPAWN_FLAGS_3_DOES_NOT_RESPAWN (1<<5)
#define SPAWN_FLAGS_3_ABANDONMENT_TIMER_ALWAYS_ACTIVE (1<<6)
#define SPAWN_FLAGS_3_OVERRIDE_CANDY_MONITOR_DEFAULTS (1<<7)
#define SPAWN_FLAGS_3_TRACKED_BY_CANDY_MONITOR (1<<8)


// Field teleporter_passability_3

#define TELEPORTER_PASSABILITY_3_DISALLOW_PLAYERS (1<<0)
#define TELEPORTER_PASSABILITY_3_ALLOW_LIGHT_LAND_VEHICLES (1<<1)
#define TELEPORTER_PASSABILITY_3_ALLOW_HEAVY_LAND_VEHICLES (1<<2)
#define TELEPORTER_PASSABILITY_3_ALLOW_FLYING_VEHICLES (1<<3)
#define TELEPORTER_PASSABILITY_3_ALLOW_PROJECTILES (1<<4)


// Field Spawn_Point_Flags_3

#define SPAWN_POINT_FLAGS_3_NEVER_SPAWN_IN_VEHICLE (1<<0)


// Field Multiplayer_Property_Flags_3

#define MULTIPLAYER_PROPERTY_FLAGS_3_DENY_SPAWN_POINTS (1<<0)
#define MULTIPLAYER_PROPERTY_FLAGS_3_APPLY_SPAWN_ZONE_PROPERTIES_TO_OPPOSING_TEAMS (1<<1)
#define MULTIPLAYER_PROPERTY_FLAGS_3_APPLY_SPAWN_ZONE_PROPERTIES_TO_INITIAL_SPAWN (1<<2)
#define MULTIPLAYER_PROPERTY_FLAGS_3_WEAPONPAD_INITIALLY_DISABLED (1<<3)
#define MULTIPLAYER_PROPERTY_FLAGS_3_IGNORE_SPAWN_ZONE_FALLOFF_FUNCTION (1<<4)


// Field MapZones_3

#define MAPZONES_3_ZERO (1<<0)
#define MAPZONES_3_ONE (1<<1)
#define MAPZONES_3_TWO (1<<2)
#define MAPZONES_3_THREE (1<<3)
#define MAPZONES_3_FOUR (1<<4)
#define MAPZONES_3_FIVE (1<<5)
#define MAPZONES_3_SIX (1<<6)
#define MAPZONES_3_SEVEN (1<<7)


// Field MapZoneConfigurations_3

#define MAPZONECONFIGURATIONS_3_ALPHA (1<<0)
#define MAPZONECONFIGURATIONS_3_BRAVO (1<<1)
#define MAPZONECONFIGURATIONS_3_CHARLIE (1<<2)
#define MAPZONECONFIGURATIONS_3_DELTA (1<<3)
#define MAPZONECONFIGURATIONS_3_ECHO (1<<4)
#define MAPZONECONFIGURATIONS_3_FOXTROT (1<<5)
#define MAPZONECONFIGURATIONS_3_GOLF (1<<6)
#define MAPZONECONFIGURATIONS_3_HOTEL (1<<7)


// Field placement_flags_4

#define PLACEMENT_FLAGS_4_NOT_AUTOMATICALLY (1<<0)
#define PLACEMENT_FLAGS_4_UNUSED0 (1<<1)
#define PLACEMENT_FLAGS_4_UNUSED1 (1<<2)
#define PLACEMENT_FLAGS_4_UNUSED2 (1<<3)
#define PLACEMENT_FLAGS_4_LOCK_TYPE_TO_ENV_OBJECT (1<<4)
#define PLACEMENT_FLAGS_4_LOCK_TRANSFORM_TO_ENV_OBJECT (1<<5)
#define PLACEMENT_FLAGS_4_NEVER_PLACED (1<<6)
#define PLACEMENT_FLAGS_4_LOCK_NAME_TO_ENV_OBJECT (1<<7)
#define PLACEMENT_FLAGS_4_CREATE_AT_REST (1<<8)
#define PLACEMENT_FLAGS_4_STORE_ORIENTATIONS (1<<9)
#define PLACEMENT_FLAGS_4_STARTUP (1<<10)
#define PLACEMENT_FLAGS_4_ATTACH_PHYSICALLY (1<<11)
#define PLACEMENT_FLAGS_4_ATTACH_WITH_SCALE (1<<12)
#define PLACEMENT_FLAGS_4_NO_PARENT_LIGHTING (1<<13)
#define PLACEMENT_FLAGS_4_DISABLE_OPPORTUNITY (1<<14)
#define PLACEMENT_FLAGS_4_SUBTRACT (1<<15)
#define PLACEMENT_FLAGS_4_OVERRIDE_CVW_LIGHTING (1<<16)
#define PLACEMENT_FLAGS_4_OVERRIDE_CVW_LIGHTING___DISABLE_CVW_FOR_THIS_PLACEMENT (1<<17)
#define PLACEMENT_FLAGS_4_CLIENT_ONLY_NO_RELEVANCY (1<<18)
#define PLACEMENT_FLAGS_4_NON_NETWORKED_COLLISION (1<<19)


// Field gravity_flags_4

#define GRAVITY_FLAGS_4_APPLY_OVERRIDE (1<<0)
#define GRAVITY_FLAGS_4_APPLY_TO_CHILDREN_ALSO (1<<1)


// Field script_flags_4

#define SCRIPT_FLAGS_4_SCRIPTS_DISABLED (1<<0)
#define SCRIPT_FLAGS_4_USE_OVERRIDE_LISTS (1<<1)
#define SCRIPT_FLAGS_4_SCRIPTS_ALWAYS_RUN (1<<2)


// Field transform_flags_4

#define TRANSFORM_FLAGS_4_MIRRORED (1<<0)


// Field Nav_Mesh_Flags_4

#define NAV_MESH_FLAGS_4_CHILDREN_INHERIT_NAVMESH_INTERACTION (1<<0)
#define NAV_MESH_FLAGS_4_NAVMESH_ALWAYS_LOADED (1<<1)


// Field flags_7

#define FLAGS_7_TRACKABLE (1<<0)
#define FLAGS_7_ENABLED_BY_DEFAULT (1<<1)
#define FLAGS_7_OUTLINE (1<<2)
#define FLAGS_7_IMMEDIATE_RESPONSE (1<<3)
#define FLAGS_7_FOLLOW_OFFSCREEN (1<<4)
#define FLAGS_7_DO_NOT_TRACK_CHILDREN (1<<5)
#define FLAGS_7_DO_NOT_OUTLINE_CHILDREN (1<<6)


// Field Layer_flags_4

#define LAYER_FLAGS_4_LAYER_IS_MAP_VARIANT (1<<0)


// Field association_types_4

#define ASSOCIATION_TYPES_4_AERIAL_VEHICLE_SPAWN_POINT (1<<0)
#define ASSOCIATION_TYPES_4_GROUND_VEHICLE_SPAWN_POINT (1<<1)


// Field equipment_flags

#define EQUIPMENT_FLAGS_OBSOLETE0 (1<<0)
#define EQUIPMENT_FLAGS_OBSOLETE1 (1<<1)
#define EQUIPMENT_FLAGS_DOES_ACCELERATE_MOVES_DUE_TO_EXPLOSIONS (1<<2)


// Field spawn_flags_4

#define SPAWN_FLAGS_4_UNIQUE_SPAWN (1<<0)
#define SPAWN_FLAGS_4_NOT_INITIALLY_PLACED (1<<1)
#define SPAWN_FLAGS_4_DEPRECATED (1<<2)
#define SPAWN_FLAGS_4_IS_SHORTCUT_OBJECT (1<<3)
#define SPAWN_FLAGS_4_CAN_SPAWN_ON_BIPEDS (1<<4)
#define SPAWN_FLAGS_4_DOES_NOT_RESPAWN (1<<5)
#define SPAWN_FLAGS_4_ABANDONMENT_TIMER_ALWAYS_ACTIVE (1<<6)
#define SPAWN_FLAGS_4_OVERRIDE_CANDY_MONITOR_DEFAULTS (1<<7)
#define SPAWN_FLAGS_4_TRACKED_BY_CANDY_MONITOR (1<<8)


// Field teleporter_passability_4

#define TELEPORTER_PASSABILITY_4_DISALLOW_PLAYERS (1<<0)
#define TELEPORTER_PASSABILITY_4_ALLOW_LIGHT_LAND_VEHICLES (1<<1)
#define TELEPORTER_PASSABILITY_4_ALLOW_HEAVY_LAND_VEHICLES (1<<2)
#define TELEPORTER_PASSABILITY_4_ALLOW_FLYING_VEHICLES (1<<3)
#define TELEPORTER_PASSABILITY_4_ALLOW_PROJECTILES (1<<4)


// Field Spawn_Point_Flags_4

#define SPAWN_POINT_FLAGS_4_NEVER_SPAWN_IN_VEHICLE (1<<0)


// Field Multiplayer_Property_Flags_4

#define MULTIPLAYER_PROPERTY_FLAGS_4_DENY_SPAWN_POINTS (1<<0)
#define MULTIPLAYER_PROPERTY_FLAGS_4_APPLY_SPAWN_ZONE_PROPERTIES_TO_OPPOSING_TEAMS (1<<1)
#define MULTIPLAYER_PROPERTY_FLAGS_4_APPLY_SPAWN_ZONE_PROPERTIES_TO_INITIAL_SPAWN (1<<2)
#define MULTIPLAYER_PROPERTY_FLAGS_4_WEAPONPAD_INITIALLY_DISABLED (1<<3)
#define MULTIPLAYER_PROPERTY_FLAGS_4_IGNORE_SPAWN_ZONE_FALLOFF_FUNCTION (1<<4)


// Field MapZones_4

#define MAPZONES_4_ZERO (1<<0)
#define MAPZONES_4_ONE (1<<1)
#define MAPZONES_4_TWO (1<<2)
#define MAPZONES_4_THREE (1<<3)
#define MAPZONES_4_FOUR (1<<4)
#define MAPZONES_4_FIVE (1<<5)
#define MAPZONES_4_SIX (1<<6)
#define MAPZONES_4_SEVEN (1<<7)


// Field MapZoneConfigurations_4

#define MAPZONECONFIGURATIONS_4_ALPHA (1<<0)
#define MAPZONECONFIGURATIONS_4_BRAVO (1<<1)
#define MAPZONECONFIGURATIONS_4_CHARLIE (1<<2)
#define MAPZONECONFIGURATIONS_4_DELTA (1<<3)
#define MAPZONECONFIGURATIONS_4_ECHO (1<<4)
#define MAPZONECONFIGURATIONS_4_FOXTROT (1<<5)
#define MAPZONECONFIGURATIONS_4_GOLF (1<<6)
#define MAPZONECONFIGURATIONS_4_HOTEL (1<<7)


// Field placement_flags_5

#define PLACEMENT_FLAGS_5_NOT_AUTOMATICALLY (1<<0)
#define PLACEMENT_FLAGS_5_UNUSED0 (1<<1)
#define PLACEMENT_FLAGS_5_UNUSED1 (1<<2)
#define PLACEMENT_FLAGS_5_UNUSED2 (1<<3)
#define PLACEMENT_FLAGS_5_LOCK_TYPE_TO_ENV_OBJECT (1<<4)
#define PLACEMENT_FLAGS_5_LOCK_TRANSFORM_TO_ENV_OBJECT (1<<5)
#define PLACEMENT_FLAGS_5_NEVER_PLACED (1<<6)
#define PLACEMENT_FLAGS_5_LOCK_NAME_TO_ENV_OBJECT (1<<7)
#define PLACEMENT_FLAGS_5_CREATE_AT_REST (1<<8)
#define PLACEMENT_FLAGS_5_STORE_ORIENTATIONS (1<<9)
#define PLACEMENT_FLAGS_5_STARTUP (1<<10)
#define PLACEMENT_FLAGS_5_ATTACH_PHYSICALLY (1<<11)
#define PLACEMENT_FLAGS_5_ATTACH_WITH_SCALE (1<<12)
#define PLACEMENT_FLAGS_5_NO_PARENT_LIGHTING (1<<13)
#define PLACEMENT_FLAGS_5_DISABLE_OPPORTUNITY (1<<14)
#define PLACEMENT_FLAGS_5_SUBTRACT (1<<15)
#define PLACEMENT_FLAGS_5_OVERRIDE_CVW_LIGHTING (1<<16)
#define PLACEMENT_FLAGS_5_OVERRIDE_CVW_LIGHTING___DISABLE_CVW_FOR_THIS_PLACEMENT (1<<17)
#define PLACEMENT_FLAGS_5_CLIENT_ONLY_NO_RELEVANCY (1<<18)
#define PLACEMENT_FLAGS_5_NON_NETWORKED_COLLISION (1<<19)


// Field gravity_flags_5

#define GRAVITY_FLAGS_5_APPLY_OVERRIDE (1<<0)
#define GRAVITY_FLAGS_5_APPLY_TO_CHILDREN_ALSO (1<<1)


// Field script_flags_5

#define SCRIPT_FLAGS_5_SCRIPTS_DISABLED (1<<0)
#define SCRIPT_FLAGS_5_USE_OVERRIDE_LISTS (1<<1)
#define SCRIPT_FLAGS_5_SCRIPTS_ALWAYS_RUN (1<<2)


// Field transform_flags_5

#define TRANSFORM_FLAGS_5_MIRRORED (1<<0)


// Field Nav_Mesh_Flags_5

#define NAV_MESH_FLAGS_5_CHILDREN_INHERIT_NAVMESH_INTERACTION (1<<0)
#define NAV_MESH_FLAGS_5_NAVMESH_ALWAYS_LOADED (1<<1)


// Field flags_8

#define FLAGS_8_TRACKABLE (1<<0)
#define FLAGS_8_ENABLED_BY_DEFAULT (1<<1)
#define FLAGS_8_OUTLINE (1<<2)
#define FLAGS_8_IMMEDIATE_RESPONSE (1<<3)
#define FLAGS_8_FOLLOW_OFFSCREEN (1<<4)
#define FLAGS_8_DO_NOT_TRACK_CHILDREN (1<<5)
#define FLAGS_8_DO_NOT_OUTLINE_CHILDREN (1<<6)


// Field Layer_flags_5

#define LAYER_FLAGS_5_LAYER_IS_MAP_VARIANT (1<<0)


// Field association_types_5

#define ASSOCIATION_TYPES_5_AERIAL_VEHICLE_SPAWN_POINT (1<<0)
#define ASSOCIATION_TYPES_5_GROUND_VEHICLE_SPAWN_POINT (1<<1)


// Field active_change_colors_4

#define ACTIVE_CHANGE_COLORS_4_PRIMARY (1<<0)
#define ACTIVE_CHANGE_COLORS_4_SECONDARY (1<<1)
#define ACTIVE_CHANGE_COLORS_4_TERTIARY (1<<2)
#define ACTIVE_CHANGE_COLORS_4_QUATERNARY (1<<3)


// Field spawn_flags_5

#define SPAWN_FLAGS_5_UNIQUE_SPAWN (1<<0)
#define SPAWN_FLAGS_5_NOT_INITIALLY_PLACED (1<<1)
#define SPAWN_FLAGS_5_DEPRECATED (1<<2)
#define SPAWN_FLAGS_5_IS_SHORTCUT_OBJECT (1<<3)
#define SPAWN_FLAGS_5_CAN_SPAWN_ON_BIPEDS (1<<4)
#define SPAWN_FLAGS_5_DOES_NOT_RESPAWN (1<<5)
#define SPAWN_FLAGS_5_ABANDONMENT_TIMER_ALWAYS_ACTIVE (1<<6)
#define SPAWN_FLAGS_5_OVERRIDE_CANDY_MONITOR_DEFAULTS (1<<7)
#define SPAWN_FLAGS_5_TRACKED_BY_CANDY_MONITOR (1<<8)


// Field teleporter_passability_5

#define TELEPORTER_PASSABILITY_5_DISALLOW_PLAYERS (1<<0)
#define TELEPORTER_PASSABILITY_5_ALLOW_LIGHT_LAND_VEHICLES (1<<1)
#define TELEPORTER_PASSABILITY_5_ALLOW_HEAVY_LAND_VEHICLES (1<<2)
#define TELEPORTER_PASSABILITY_5_ALLOW_FLYING_VEHICLES (1<<3)
#define TELEPORTER_PASSABILITY_5_ALLOW_PROJECTILES (1<<4)


// Field Spawn_Point_Flags_5

#define SPAWN_POINT_FLAGS_5_NEVER_SPAWN_IN_VEHICLE (1<<0)


// Field Multiplayer_Property_Flags_5

#define MULTIPLAYER_PROPERTY_FLAGS_5_DENY_SPAWN_POINTS (1<<0)
#define MULTIPLAYER_PROPERTY_FLAGS_5_APPLY_SPAWN_ZONE_PROPERTIES_TO_OPPOSING_TEAMS (1<<1)
#define MULTIPLAYER_PROPERTY_FLAGS_5_APPLY_SPAWN_ZONE_PROPERTIES_TO_INITIAL_SPAWN (1<<2)
#define MULTIPLAYER_PROPERTY_FLAGS_5_WEAPONPAD_INITIALLY_DISABLED (1<<3)
#define MULTIPLAYER_PROPERTY_FLAGS_5_IGNORE_SPAWN_ZONE_FALLOFF_FUNCTION (1<<4)


// Field MapZones_5

#define MAPZONES_5_ZERO (1<<0)
#define MAPZONES_5_ONE (1<<1)
#define MAPZONES_5_TWO (1<<2)
#define MAPZONES_5_THREE (1<<3)
#define MAPZONES_5_FOUR (1<<4)
#define MAPZONES_5_FIVE (1<<5)
#define MAPZONES_5_SIX (1<<6)
#define MAPZONES_5_SEVEN (1<<7)


// Field MapZoneConfigurations_5

#define MAPZONECONFIGURATIONS_5_ALPHA (1<<0)
#define MAPZONECONFIGURATIONS_5_BRAVO (1<<1)
#define MAPZONECONFIGURATIONS_5_CHARLIE (1<<2)
#define MAPZONECONFIGURATIONS_5_DELTA (1<<3)
#define MAPZONECONFIGURATIONS_5_ECHO (1<<4)
#define MAPZONECONFIGURATIONS_5_FOXTROT (1<<5)
#define MAPZONECONFIGURATIONS_5_GOLF (1<<6)
#define MAPZONECONFIGURATIONS_5_HOTEL (1<<7)


// Field flags_9

#define FLAGS_9_CAN_CHANGE_ONLY_ONCE (1<<0)


// Field placement_flags_6

#define PLACEMENT_FLAGS_6_NOT_AUTOMATICALLY (1<<0)
#define PLACEMENT_FLAGS_6_UNUSED0 (1<<1)
#define PLACEMENT_FLAGS_6_UNUSED1 (1<<2)
#define PLACEMENT_FLAGS_6_UNUSED2 (1<<3)
#define PLACEMENT_FLAGS_6_LOCK_TYPE_TO_ENV_OBJECT (1<<4)
#define PLACEMENT_FLAGS_6_LOCK_TRANSFORM_TO_ENV_OBJECT (1<<5)
#define PLACEMENT_FLAGS_6_NEVER_PLACED (1<<6)
#define PLACEMENT_FLAGS_6_LOCK_NAME_TO_ENV_OBJECT (1<<7)
#define PLACEMENT_FLAGS_6_CREATE_AT_REST (1<<8)
#define PLACEMENT_FLAGS_6_STORE_ORIENTATIONS (1<<9)
#define PLACEMENT_FLAGS_6_STARTUP (1<<10)
#define PLACEMENT_FLAGS_6_ATTACH_PHYSICALLY (1<<11)
#define PLACEMENT_FLAGS_6_ATTACH_WITH_SCALE (1<<12)
#define PLACEMENT_FLAGS_6_NO_PARENT_LIGHTING (1<<13)
#define PLACEMENT_FLAGS_6_DISABLE_OPPORTUNITY (1<<14)
#define PLACEMENT_FLAGS_6_SUBTRACT (1<<15)
#define PLACEMENT_FLAGS_6_OVERRIDE_CVW_LIGHTING (1<<16)
#define PLACEMENT_FLAGS_6_OVERRIDE_CVW_LIGHTING___DISABLE_CVW_FOR_THIS_PLACEMENT (1<<17)
#define PLACEMENT_FLAGS_6_CLIENT_ONLY_NO_RELEVANCY (1<<18)
#define PLACEMENT_FLAGS_6_NON_NETWORKED_COLLISION (1<<19)


// Field gravity_flags_6

#define GRAVITY_FLAGS_6_APPLY_OVERRIDE (1<<0)
#define GRAVITY_FLAGS_6_APPLY_TO_CHILDREN_ALSO (1<<1)


// Field script_flags_6

#define SCRIPT_FLAGS_6_SCRIPTS_DISABLED (1<<0)
#define SCRIPT_FLAGS_6_USE_OVERRIDE_LISTS (1<<1)
#define SCRIPT_FLAGS_6_SCRIPTS_ALWAYS_RUN (1<<2)


// Field transform_flags_6

#define TRANSFORM_FLAGS_6_MIRRORED (1<<0)


// Field Nav_Mesh_Flags_6

#define NAV_MESH_FLAGS_6_CHILDREN_INHERIT_NAVMESH_INTERACTION (1<<0)
#define NAV_MESH_FLAGS_6_NAVMESH_ALWAYS_LOADED (1<<1)


// Field flags_10

#define FLAGS_10_TRACKABLE (1<<0)
#define FLAGS_10_ENABLED_BY_DEFAULT (1<<1)
#define FLAGS_10_OUTLINE (1<<2)
#define FLAGS_10_IMMEDIATE_RESPONSE (1<<3)
#define FLAGS_10_FOLLOW_OFFSCREEN (1<<4)
#define FLAGS_10_DO_NOT_TRACK_CHILDREN (1<<5)
#define FLAGS_10_DO_NOT_OUTLINE_CHILDREN (1<<6)


// Field Layer_flags_6

#define LAYER_FLAGS_6_LAYER_IS_MAP_VARIANT (1<<0)


// Field association_types_6

#define ASSOCIATION_TYPES_6_AERIAL_VEHICLE_SPAWN_POINT (1<<0)
#define ASSOCIATION_TYPES_6_GROUND_VEHICLE_SPAWN_POINT (1<<1)


// Field active_change_colors_5

#define ACTIVE_CHANGE_COLORS_5_PRIMARY (1<<0)
#define ACTIVE_CHANGE_COLORS_5_SECONDARY (1<<1)
#define ACTIVE_CHANGE_COLORS_5_TERTIARY (1<<2)
#define ACTIVE_CHANGE_COLORS_5_QUATERNARY (1<<3)


// Field flags_11

#define FLAGS_11_INITIALLY_OPEN_10 (1<<0)
#define FLAGS_11_INITIALLY_OFF_00 (1<<1)
#define FLAGS_11_CAN_CHANGE_ONLY_ONCE (1<<2)
#define FLAGS_11_POSITION_REVERSED (1<<3)
#define FLAGS_11_NOT_USABLE_FROM_ANY_SIDE (1<<4)
#define FLAGS_11_CLOSES_WITHOUT_POWER (1<<5)


// Field flags_12

#define FLAGS_12_DOES_NOT_OPERATE_AUTOMATICALLY (1<<0)
#define FLAGS_12_ONE_SIDED (1<<1)
#define FLAGS_12_NEVER_APPEARS_LOCKED (1<<2)
#define FLAGS_12_OPENED_BY_MELEE_ATTACK (1<<3)
#define FLAGS_12_ONE_SIDED_FOR_PLAYER (1<<4)
#define FLAGS_12_DOES_NOT_CLOSE_AUTOMATICALLY (1<<5)
#define FLAGS_12_IGNORES_PLAYER (1<<6)
#define FLAGS_12_IGNORES_AI (1<<7)


// Field spawn_flags_6

#define SPAWN_FLAGS_6_UNIQUE_SPAWN (1<<0)
#define SPAWN_FLAGS_6_NOT_INITIALLY_PLACED (1<<1)
#define SPAWN_FLAGS_6_DEPRECATED (1<<2)
#define SPAWN_FLAGS_6_IS_SHORTCUT_OBJECT (1<<3)
#define SPAWN_FLAGS_6_CAN_SPAWN_ON_BIPEDS (1<<4)
#define SPAWN_FLAGS_6_DOES_NOT_RESPAWN (1<<5)
#define SPAWN_FLAGS_6_ABANDONMENT_TIMER_ALWAYS_ACTIVE (1<<6)
#define SPAWN_FLAGS_6_OVERRIDE_CANDY_MONITOR_DEFAULTS (1<<7)
#define SPAWN_FLAGS_6_TRACKED_BY_CANDY_MONITOR (1<<8)


// Field teleporter_passability_6

#define TELEPORTER_PASSABILITY_6_DISALLOW_PLAYERS (1<<0)
#define TELEPORTER_PASSABILITY_6_ALLOW_LIGHT_LAND_VEHICLES (1<<1)
#define TELEPORTER_PASSABILITY_6_ALLOW_HEAVY_LAND_VEHICLES (1<<2)
#define TELEPORTER_PASSABILITY_6_ALLOW_FLYING_VEHICLES (1<<3)
#define TELEPORTER_PASSABILITY_6_ALLOW_PROJECTILES (1<<4)


// Field Spawn_Point_Flags_6

#define SPAWN_POINT_FLAGS_6_NEVER_SPAWN_IN_VEHICLE (1<<0)


// Field Multiplayer_Property_Flags_6

#define MULTIPLAYER_PROPERTY_FLAGS_6_DENY_SPAWN_POINTS (1<<0)
#define MULTIPLAYER_PROPERTY_FLAGS_6_APPLY_SPAWN_ZONE_PROPERTIES_TO_OPPOSING_TEAMS (1<<1)
#define MULTIPLAYER_PROPERTY_FLAGS_6_APPLY_SPAWN_ZONE_PROPERTIES_TO_INITIAL_SPAWN (1<<2)
#define MULTIPLAYER_PROPERTY_FLAGS_6_WEAPONPAD_INITIALLY_DISABLED (1<<3)
#define MULTIPLAYER_PROPERTY_FLAGS_6_IGNORE_SPAWN_ZONE_FALLOFF_FUNCTION (1<<4)


// Field MapZones_6

#define MAPZONES_6_ZERO (1<<0)
#define MAPZONES_6_ONE (1<<1)
#define MAPZONES_6_TWO (1<<2)
#define MAPZONES_6_THREE (1<<3)
#define MAPZONES_6_FOUR (1<<4)
#define MAPZONES_6_FIVE (1<<5)
#define MAPZONES_6_SIX (1<<6)
#define MAPZONES_6_SEVEN (1<<7)


// Field MapZoneConfigurations_6

#define MAPZONECONFIGURATIONS_6_ALPHA (1<<0)
#define MAPZONECONFIGURATIONS_6_BRAVO (1<<1)
#define MAPZONECONFIGURATIONS_6_CHARLIE (1<<2)
#define MAPZONECONFIGURATIONS_6_DELTA (1<<3)
#define MAPZONECONFIGURATIONS_6_ECHO (1<<4)
#define MAPZONECONFIGURATIONS_6_FOXTROT (1<<5)
#define MAPZONECONFIGURATIONS_6_GOLF (1<<6)
#define MAPZONECONFIGURATIONS_6_HOTEL (1<<7)


// Field placement_flags_7

#define PLACEMENT_FLAGS_7_NOT_AUTOMATICALLY (1<<0)
#define PLACEMENT_FLAGS_7_UNUSED0 (1<<1)
#define PLACEMENT_FLAGS_7_UNUSED1 (1<<2)
#define PLACEMENT_FLAGS_7_UNUSED2 (1<<3)
#define PLACEMENT_FLAGS_7_LOCK_TYPE_TO_ENV_OBJECT (1<<4)
#define PLACEMENT_FLAGS_7_LOCK_TRANSFORM_TO_ENV_OBJECT (1<<5)
#define PLACEMENT_FLAGS_7_NEVER_PLACED (1<<6)
#define PLACEMENT_FLAGS_7_LOCK_NAME_TO_ENV_OBJECT (1<<7)
#define PLACEMENT_FLAGS_7_CREATE_AT_REST (1<<8)
#define PLACEMENT_FLAGS_7_STORE_ORIENTATIONS (1<<9)
#define PLACEMENT_FLAGS_7_STARTUP (1<<10)
#define PLACEMENT_FLAGS_7_ATTACH_PHYSICALLY (1<<11)
#define PLACEMENT_FLAGS_7_ATTACH_WITH_SCALE (1<<12)
#define PLACEMENT_FLAGS_7_NO_PARENT_LIGHTING (1<<13)
#define PLACEMENT_FLAGS_7_DISABLE_OPPORTUNITY (1<<14)
#define PLACEMENT_FLAGS_7_SUBTRACT (1<<15)
#define PLACEMENT_FLAGS_7_OVERRIDE_CVW_LIGHTING (1<<16)
#define PLACEMENT_FLAGS_7_OVERRIDE_CVW_LIGHTING___DISABLE_CVW_FOR_THIS_PLACEMENT (1<<17)
#define PLACEMENT_FLAGS_7_CLIENT_ONLY_NO_RELEVANCY (1<<18)
#define PLACEMENT_FLAGS_7_NON_NETWORKED_COLLISION (1<<19)


// Field gravity_flags_7

#define GRAVITY_FLAGS_7_APPLY_OVERRIDE (1<<0)
#define GRAVITY_FLAGS_7_APPLY_TO_CHILDREN_ALSO (1<<1)


// Field script_flags_7

#define SCRIPT_FLAGS_7_SCRIPTS_DISABLED (1<<0)
#define SCRIPT_FLAGS_7_USE_OVERRIDE_LISTS (1<<1)
#define SCRIPT_FLAGS_7_SCRIPTS_ALWAYS_RUN (1<<2)


// Field transform_flags_7

#define TRANSFORM_FLAGS_7_MIRRORED (1<<0)


// Field Nav_Mesh_Flags_7

#define NAV_MESH_FLAGS_7_CHILDREN_INHERIT_NAVMESH_INTERACTION (1<<0)
#define NAV_MESH_FLAGS_7_NAVMESH_ALWAYS_LOADED (1<<1)


// Field flags_13

#define FLAGS_13_TRACKABLE (1<<0)
#define FLAGS_13_ENABLED_BY_DEFAULT (1<<1)
#define FLAGS_13_OUTLINE (1<<2)
#define FLAGS_13_IMMEDIATE_RESPONSE (1<<3)
#define FLAGS_13_FOLLOW_OFFSCREEN (1<<4)
#define FLAGS_13_DO_NOT_TRACK_CHILDREN (1<<5)
#define FLAGS_13_DO_NOT_OUTLINE_CHILDREN (1<<6)


// Field Layer_flags_7

#define LAYER_FLAGS_7_LAYER_IS_MAP_VARIANT (1<<0)


// Field association_types_7

#define ASSOCIATION_TYPES_7_AERIAL_VEHICLE_SPAWN_POINT (1<<0)
#define ASSOCIATION_TYPES_7_GROUND_VEHICLE_SPAWN_POINT (1<<1)


// Field active_change_colors_6

#define ACTIVE_CHANGE_COLORS_6_PRIMARY (1<<0)
#define ACTIVE_CHANGE_COLORS_6_SECONDARY (1<<1)
#define ACTIVE_CHANGE_COLORS_6_TERTIARY (1<<2)
#define ACTIVE_CHANGE_COLORS_6_QUATERNARY (1<<3)


// Field flags_14

#define FLAGS_14_INITIALLY_OPEN_10 (1<<0)
#define FLAGS_14_INITIALLY_OFF_00 (1<<1)
#define FLAGS_14_CAN_CHANGE_ONLY_ONCE (1<<2)
#define FLAGS_14_POSITION_REVERSED (1<<3)
#define FLAGS_14_NOT_USABLE_FROM_ANY_SIDE (1<<4)
#define FLAGS_14_CLOSES_WITHOUT_POWER (1<<5)


// Field placement_flags_8

#define PLACEMENT_FLAGS_8_NOT_AUTOMATICALLY (1<<0)
#define PLACEMENT_FLAGS_8_UNUSED0 (1<<1)
#define PLACEMENT_FLAGS_8_UNUSED1 (1<<2)
#define PLACEMENT_FLAGS_8_UNUSED2 (1<<3)
#define PLACEMENT_FLAGS_8_LOCK_TYPE_TO_ENV_OBJECT (1<<4)
#define PLACEMENT_FLAGS_8_LOCK_TRANSFORM_TO_ENV_OBJECT (1<<5)
#define PLACEMENT_FLAGS_8_NEVER_PLACED (1<<6)
#define PLACEMENT_FLAGS_8_LOCK_NAME_TO_ENV_OBJECT (1<<7)
#define PLACEMENT_FLAGS_8_CREATE_AT_REST (1<<8)
#define PLACEMENT_FLAGS_8_STORE_ORIENTATIONS (1<<9)
#define PLACEMENT_FLAGS_8_STARTUP (1<<10)
#define PLACEMENT_FLAGS_8_ATTACH_PHYSICALLY (1<<11)
#define PLACEMENT_FLAGS_8_ATTACH_WITH_SCALE (1<<12)
#define PLACEMENT_FLAGS_8_NO_PARENT_LIGHTING (1<<13)
#define PLACEMENT_FLAGS_8_DISABLE_OPPORTUNITY (1<<14)
#define PLACEMENT_FLAGS_8_SUBTRACT (1<<15)
#define PLACEMENT_FLAGS_8_OVERRIDE_CVW_LIGHTING (1<<16)
#define PLACEMENT_FLAGS_8_OVERRIDE_CVW_LIGHTING___DISABLE_CVW_FOR_THIS_PLACEMENT (1<<17)
#define PLACEMENT_FLAGS_8_CLIENT_ONLY_NO_RELEVANCY (1<<18)
#define PLACEMENT_FLAGS_8_NON_NETWORKED_COLLISION (1<<19)


// Field gravity_flags_8

#define GRAVITY_FLAGS_8_APPLY_OVERRIDE (1<<0)
#define GRAVITY_FLAGS_8_APPLY_TO_CHILDREN_ALSO (1<<1)


// Field script_flags_8

#define SCRIPT_FLAGS_8_SCRIPTS_DISABLED (1<<0)
#define SCRIPT_FLAGS_8_USE_OVERRIDE_LISTS (1<<1)
#define SCRIPT_FLAGS_8_SCRIPTS_ALWAYS_RUN (1<<2)


// Field transform_flags_8

#define TRANSFORM_FLAGS_8_MIRRORED (1<<0)


// Field Nav_Mesh_Flags_8

#define NAV_MESH_FLAGS_8_CHILDREN_INHERIT_NAVMESH_INTERACTION (1<<0)
#define NAV_MESH_FLAGS_8_NAVMESH_ALWAYS_LOADED (1<<1)


// Field flags_15

#define FLAGS_15_TRACKABLE (1<<0)
#define FLAGS_15_ENABLED_BY_DEFAULT (1<<1)
#define FLAGS_15_OUTLINE (1<<2)
#define FLAGS_15_IMMEDIATE_RESPONSE (1<<3)
#define FLAGS_15_FOLLOW_OFFSCREEN (1<<4)
#define FLAGS_15_DO_NOT_TRACK_CHILDREN (1<<5)
#define FLAGS_15_DO_NOT_OUTLINE_CHILDREN (1<<6)


// Field Layer_flags_8

#define LAYER_FLAGS_8_LAYER_IS_MAP_VARIANT (1<<0)


// Field association_types_8

#define ASSOCIATION_TYPES_8_AERIAL_VEHICLE_SPAWN_POINT (1<<0)
#define ASSOCIATION_TYPES_8_GROUND_VEHICLE_SPAWN_POINT (1<<1)


// Field active_change_colors_7

#define ACTIVE_CHANGE_COLORS_7_PRIMARY (1<<0)
#define ACTIVE_CHANGE_COLORS_7_SECONDARY (1<<1)
#define ACTIVE_CHANGE_COLORS_7_TERTIARY (1<<2)
#define ACTIVE_CHANGE_COLORS_7_QUATERNARY (1<<3)


// Field flags_16

#define FLAGS_16_INITIALLY_OPEN_10 (1<<0)
#define FLAGS_16_INITIALLY_OFF_00 (1<<1)
#define FLAGS_16_CAN_CHANGE_ONLY_ONCE (1<<2)
#define FLAGS_16_POSITION_REVERSED (1<<3)
#define FLAGS_16_NOT_USABLE_FROM_ANY_SIDE (1<<4)
#define FLAGS_16_CLOSES_WITHOUT_POWER (1<<5)


// Field flags_17

#define FLAGS_17_USABLE_FROM_BOTH_SIDES (1<<0)


// Field spawn_flags_7

#define SPAWN_FLAGS_7_UNIQUE_SPAWN (1<<0)
#define SPAWN_FLAGS_7_NOT_INITIALLY_PLACED (1<<1)
#define SPAWN_FLAGS_7_DEPRECATED (1<<2)
#define SPAWN_FLAGS_7_IS_SHORTCUT_OBJECT (1<<3)
#define SPAWN_FLAGS_7_CAN_SPAWN_ON_BIPEDS (1<<4)
#define SPAWN_FLAGS_7_DOES_NOT_RESPAWN (1<<5)
#define SPAWN_FLAGS_7_ABANDONMENT_TIMER_ALWAYS_ACTIVE (1<<6)
#define SPAWN_FLAGS_7_OVERRIDE_CANDY_MONITOR_DEFAULTS (1<<7)
#define SPAWN_FLAGS_7_TRACKED_BY_CANDY_MONITOR (1<<8)


// Field teleporter_passability_7

#define TELEPORTER_PASSABILITY_7_DISALLOW_PLAYERS (1<<0)
#define TELEPORTER_PASSABILITY_7_ALLOW_LIGHT_LAND_VEHICLES (1<<1)
#define TELEPORTER_PASSABILITY_7_ALLOW_HEAVY_LAND_VEHICLES (1<<2)
#define TELEPORTER_PASSABILITY_7_ALLOW_FLYING_VEHICLES (1<<3)
#define TELEPORTER_PASSABILITY_7_ALLOW_PROJECTILES (1<<4)


// Field Spawn_Point_Flags_7

#define SPAWN_POINT_FLAGS_7_NEVER_SPAWN_IN_VEHICLE (1<<0)


// Field Multiplayer_Property_Flags_7

#define MULTIPLAYER_PROPERTY_FLAGS_7_DENY_SPAWN_POINTS (1<<0)
#define MULTIPLAYER_PROPERTY_FLAGS_7_APPLY_SPAWN_ZONE_PROPERTIES_TO_OPPOSING_TEAMS (1<<1)
#define MULTIPLAYER_PROPERTY_FLAGS_7_APPLY_SPAWN_ZONE_PROPERTIES_TO_INITIAL_SPAWN (1<<2)
#define MULTIPLAYER_PROPERTY_FLAGS_7_WEAPONPAD_INITIALLY_DISABLED (1<<3)
#define MULTIPLAYER_PROPERTY_FLAGS_7_IGNORE_SPAWN_ZONE_FALLOFF_FUNCTION (1<<4)


// Field MapZones_7

#define MAPZONES_7_ZERO (1<<0)
#define MAPZONES_7_ONE (1<<1)
#define MAPZONES_7_TWO (1<<2)
#define MAPZONES_7_THREE (1<<3)
#define MAPZONES_7_FOUR (1<<4)
#define MAPZONES_7_FIVE (1<<5)
#define MAPZONES_7_SIX (1<<6)
#define MAPZONES_7_SEVEN (1<<7)


// Field MapZoneConfigurations_7

#define MAPZONECONFIGURATIONS_7_ALPHA (1<<0)
#define MAPZONECONFIGURATIONS_7_BRAVO (1<<1)
#define MAPZONECONFIGURATIONS_7_CHARLIE (1<<2)
#define MAPZONECONFIGURATIONS_7_DELTA (1<<3)
#define MAPZONECONFIGURATIONS_7_ECHO (1<<4)
#define MAPZONECONFIGURATIONS_7_FOXTROT (1<<5)
#define MAPZONECONFIGURATIONS_7_GOLF (1<<6)
#define MAPZONECONFIGURATIONS_7_HOTEL (1<<7)


// Field placement_flags_9

#define PLACEMENT_FLAGS_9_NOT_AUTOMATICALLY (1<<0)
#define PLACEMENT_FLAGS_9_UNUSED0 (1<<1)
#define PLACEMENT_FLAGS_9_UNUSED1 (1<<2)
#define PLACEMENT_FLAGS_9_UNUSED2 (1<<3)
#define PLACEMENT_FLAGS_9_LOCK_TYPE_TO_ENV_OBJECT (1<<4)
#define PLACEMENT_FLAGS_9_LOCK_TRANSFORM_TO_ENV_OBJECT (1<<5)
#define PLACEMENT_FLAGS_9_NEVER_PLACED (1<<6)
#define PLACEMENT_FLAGS_9_LOCK_NAME_TO_ENV_OBJECT (1<<7)
#define PLACEMENT_FLAGS_9_CREATE_AT_REST (1<<8)
#define PLACEMENT_FLAGS_9_STORE_ORIENTATIONS (1<<9)
#define PLACEMENT_FLAGS_9_STARTUP (1<<10)
#define PLACEMENT_FLAGS_9_ATTACH_PHYSICALLY (1<<11)
#define PLACEMENT_FLAGS_9_ATTACH_WITH_SCALE (1<<12)
#define PLACEMENT_FLAGS_9_NO_PARENT_LIGHTING (1<<13)
#define PLACEMENT_FLAGS_9_DISABLE_OPPORTUNITY (1<<14)
#define PLACEMENT_FLAGS_9_SUBTRACT (1<<15)
#define PLACEMENT_FLAGS_9_OVERRIDE_CVW_LIGHTING (1<<16)
#define PLACEMENT_FLAGS_9_OVERRIDE_CVW_LIGHTING___DISABLE_CVW_FOR_THIS_PLACEMENT (1<<17)
#define PLACEMENT_FLAGS_9_CLIENT_ONLY_NO_RELEVANCY (1<<18)
#define PLACEMENT_FLAGS_9_NON_NETWORKED_COLLISION (1<<19)


// Field gravity_flags_9

#define GRAVITY_FLAGS_9_APPLY_OVERRIDE (1<<0)
#define GRAVITY_FLAGS_9_APPLY_TO_CHILDREN_ALSO (1<<1)


// Field script_flags_9

#define SCRIPT_FLAGS_9_SCRIPTS_DISABLED (1<<0)
#define SCRIPT_FLAGS_9_USE_OVERRIDE_LISTS (1<<1)
#define SCRIPT_FLAGS_9_SCRIPTS_ALWAYS_RUN (1<<2)


// Field transform_flags_9

#define TRANSFORM_FLAGS_9_MIRRORED (1<<0)


// Field Nav_Mesh_Flags_9

#define NAV_MESH_FLAGS_9_CHILDREN_INHERIT_NAVMESH_INTERACTION (1<<0)
#define NAV_MESH_FLAGS_9_NAVMESH_ALWAYS_LOADED (1<<1)


// Field flags_18

#define FLAGS_18_TRACKABLE (1<<0)
#define FLAGS_18_ENABLED_BY_DEFAULT (1<<1)
#define FLAGS_18_OUTLINE (1<<2)
#define FLAGS_18_IMMEDIATE_RESPONSE (1<<3)
#define FLAGS_18_FOLLOW_OFFSCREEN (1<<4)
#define FLAGS_18_DO_NOT_TRACK_CHILDREN (1<<5)
#define FLAGS_18_DO_NOT_OUTLINE_CHILDREN (1<<6)


// Field Layer_flags_9

#define LAYER_FLAGS_9_LAYER_IS_MAP_VARIANT (1<<0)


// Field association_types_9

#define ASSOCIATION_TYPES_9_AERIAL_VEHICLE_SPAWN_POINT (1<<0)
#define ASSOCIATION_TYPES_9_GROUND_VEHICLE_SPAWN_POINT (1<<1)


// Field active_change_colors_8

#define ACTIVE_CHANGE_COLORS_8_PRIMARY (1<<0)
#define ACTIVE_CHANGE_COLORS_8_SECONDARY (1<<1)
#define ACTIVE_CHANGE_COLORS_8_TERTIARY (1<<2)
#define ACTIVE_CHANGE_COLORS_8_QUATERNARY (1<<3)


// Field flags_19

#define FLAGS_19_INITIALLY_OPEN_10 (1<<0)
#define FLAGS_19_INITIALLY_OFF_00 (1<<1)
#define FLAGS_19_CAN_CHANGE_ONLY_ONCE (1<<2)
#define FLAGS_19_POSITION_REVERSED (1<<3)
#define FLAGS_19_NOT_USABLE_FROM_ANY_SIDE (1<<4)
#define FLAGS_19_CLOSES_WITHOUT_POWER (1<<5)


// Field flags_20

#define FLAGS_20_USABLE_FROM_FRONT_ONLY (1<<0)


// Field spawn_flags_8

#define SPAWN_FLAGS_8_UNIQUE_SPAWN (1<<0)
#define SPAWN_FLAGS_8_NOT_INITIALLY_PLACED (1<<1)
#define SPAWN_FLAGS_8_DEPRECATED (1<<2)
#define SPAWN_FLAGS_8_IS_SHORTCUT_OBJECT (1<<3)
#define SPAWN_FLAGS_8_CAN_SPAWN_ON_BIPEDS (1<<4)
#define SPAWN_FLAGS_8_DOES_NOT_RESPAWN (1<<5)
#define SPAWN_FLAGS_8_ABANDONMENT_TIMER_ALWAYS_ACTIVE (1<<6)
#define SPAWN_FLAGS_8_OVERRIDE_CANDY_MONITOR_DEFAULTS (1<<7)
#define SPAWN_FLAGS_8_TRACKED_BY_CANDY_MONITOR (1<<8)


// Field teleporter_passability_8

#define TELEPORTER_PASSABILITY_8_DISALLOW_PLAYERS (1<<0)
#define TELEPORTER_PASSABILITY_8_ALLOW_LIGHT_LAND_VEHICLES (1<<1)
#define TELEPORTER_PASSABILITY_8_ALLOW_HEAVY_LAND_VEHICLES (1<<2)
#define TELEPORTER_PASSABILITY_8_ALLOW_FLYING_VEHICLES (1<<3)
#define TELEPORTER_PASSABILITY_8_ALLOW_PROJECTILES (1<<4)


// Field Spawn_Point_Flags_8

#define SPAWN_POINT_FLAGS_8_NEVER_SPAWN_IN_VEHICLE (1<<0)


// Field Multiplayer_Property_Flags_8

#define MULTIPLAYER_PROPERTY_FLAGS_8_DENY_SPAWN_POINTS (1<<0)
#define MULTIPLAYER_PROPERTY_FLAGS_8_APPLY_SPAWN_ZONE_PROPERTIES_TO_OPPOSING_TEAMS (1<<1)
#define MULTIPLAYER_PROPERTY_FLAGS_8_APPLY_SPAWN_ZONE_PROPERTIES_TO_INITIAL_SPAWN (1<<2)
#define MULTIPLAYER_PROPERTY_FLAGS_8_WEAPONPAD_INITIALLY_DISABLED (1<<3)
#define MULTIPLAYER_PROPERTY_FLAGS_8_IGNORE_SPAWN_ZONE_FALLOFF_FUNCTION (1<<4)


// Field MapZones_8

#define MAPZONES_8_ZERO (1<<0)
#define MAPZONES_8_ONE (1<<1)
#define MAPZONES_8_TWO (1<<2)
#define MAPZONES_8_THREE (1<<3)
#define MAPZONES_8_FOUR (1<<4)
#define MAPZONES_8_FIVE (1<<5)
#define MAPZONES_8_SIX (1<<6)
#define MAPZONES_8_SEVEN (1<<7)


// Field MapZoneConfigurations_8

#define MAPZONECONFIGURATIONS_8_ALPHA (1<<0)
#define MAPZONECONFIGURATIONS_8_BRAVO (1<<1)
#define MAPZONECONFIGURATIONS_8_CHARLIE (1<<2)
#define MAPZONECONFIGURATIONS_8_DELTA (1<<3)
#define MAPZONECONFIGURATIONS_8_ECHO (1<<4)
#define MAPZONECONFIGURATIONS_8_FOXTROT (1<<5)
#define MAPZONECONFIGURATIONS_8_GOLF (1<<6)
#define MAPZONECONFIGURATIONS_8_HOTEL (1<<7)


// Field placement_flags_10

#define PLACEMENT_FLAGS_10_NOT_AUTOMATICALLY (1<<0)
#define PLACEMENT_FLAGS_10_UNUSED0 (1<<1)
#define PLACEMENT_FLAGS_10_UNUSED1 (1<<2)
#define PLACEMENT_FLAGS_10_UNUSED2 (1<<3)
#define PLACEMENT_FLAGS_10_LOCK_TYPE_TO_ENV_OBJECT (1<<4)
#define PLACEMENT_FLAGS_10_LOCK_TRANSFORM_TO_ENV_OBJECT (1<<5)
#define PLACEMENT_FLAGS_10_NEVER_PLACED (1<<6)
#define PLACEMENT_FLAGS_10_LOCK_NAME_TO_ENV_OBJECT (1<<7)
#define PLACEMENT_FLAGS_10_CREATE_AT_REST (1<<8)
#define PLACEMENT_FLAGS_10_STORE_ORIENTATIONS (1<<9)
#define PLACEMENT_FLAGS_10_STARTUP (1<<10)
#define PLACEMENT_FLAGS_10_ATTACH_PHYSICALLY (1<<11)
#define PLACEMENT_FLAGS_10_ATTACH_WITH_SCALE (1<<12)
#define PLACEMENT_FLAGS_10_NO_PARENT_LIGHTING (1<<13)
#define PLACEMENT_FLAGS_10_DISABLE_OPPORTUNITY (1<<14)
#define PLACEMENT_FLAGS_10_SUBTRACT (1<<15)
#define PLACEMENT_FLAGS_10_OVERRIDE_CVW_LIGHTING (1<<16)
#define PLACEMENT_FLAGS_10_OVERRIDE_CVW_LIGHTING___DISABLE_CVW_FOR_THIS_PLACEMENT (1<<17)
#define PLACEMENT_FLAGS_10_CLIENT_ONLY_NO_RELEVANCY (1<<18)
#define PLACEMENT_FLAGS_10_NON_NETWORKED_COLLISION (1<<19)


// Field gravity_flags_10

#define GRAVITY_FLAGS_10_APPLY_OVERRIDE (1<<0)
#define GRAVITY_FLAGS_10_APPLY_TO_CHILDREN_ALSO (1<<1)


// Field script_flags_10

#define SCRIPT_FLAGS_10_SCRIPTS_DISABLED (1<<0)
#define SCRIPT_FLAGS_10_USE_OVERRIDE_LISTS (1<<1)
#define SCRIPT_FLAGS_10_SCRIPTS_ALWAYS_RUN (1<<2)


// Field transform_flags_10

#define TRANSFORM_FLAGS_10_MIRRORED (1<<0)


// Field Nav_Mesh_Flags_10

#define NAV_MESH_FLAGS_10_CHILDREN_INHERIT_NAVMESH_INTERACTION (1<<0)
#define NAV_MESH_FLAGS_10_NAVMESH_ALWAYS_LOADED (1<<1)


// Field flags_21

#define FLAGS_21_TRACKABLE (1<<0)
#define FLAGS_21_ENABLED_BY_DEFAULT (1<<1)
#define FLAGS_21_OUTLINE (1<<2)
#define FLAGS_21_IMMEDIATE_RESPONSE (1<<3)
#define FLAGS_21_FOLLOW_OFFSCREEN (1<<4)
#define FLAGS_21_DO_NOT_TRACK_CHILDREN (1<<5)
#define FLAGS_21_DO_NOT_OUTLINE_CHILDREN (1<<6)


// Field Layer_flags_10

#define LAYER_FLAGS_10_LAYER_IS_MAP_VARIANT (1<<0)


// Field association_types_10

#define ASSOCIATION_TYPES_10_AERIAL_VEHICLE_SPAWN_POINT (1<<0)
#define ASSOCIATION_TYPES_10_GROUND_VEHICLE_SPAWN_POINT (1<<1)


// Field active_change_colors_9

#define ACTIVE_CHANGE_COLORS_9_PRIMARY (1<<0)
#define ACTIVE_CHANGE_COLORS_9_SECONDARY (1<<1)
#define ACTIVE_CHANGE_COLORS_9_TERTIARY (1<<2)
#define ACTIVE_CHANGE_COLORS_9_QUATERNARY (1<<3)


// Field flags_22

#define FLAGS_22_DEAD (1<<0)
#define FLAGS_22_OPENED (1<<1)
#define FLAGS_22_NOT_ENTERABLE_BY_PLAYER (1<<2)


// Field placement_flags_11

#define PLACEMENT_FLAGS_11_NOT_AUTOMATICALLY (1<<0)
#define PLACEMENT_FLAGS_11_UNUSED0 (1<<1)
#define PLACEMENT_FLAGS_11_UNUSED1 (1<<2)
#define PLACEMENT_FLAGS_11_UNUSED2 (1<<3)
#define PLACEMENT_FLAGS_11_LOCK_TYPE_TO_ENV_OBJECT (1<<4)
#define PLACEMENT_FLAGS_11_LOCK_TRANSFORM_TO_ENV_OBJECT (1<<5)
#define PLACEMENT_FLAGS_11_NEVER_PLACED (1<<6)
#define PLACEMENT_FLAGS_11_LOCK_NAME_TO_ENV_OBJECT (1<<7)
#define PLACEMENT_FLAGS_11_CREATE_AT_REST (1<<8)
#define PLACEMENT_FLAGS_11_STORE_ORIENTATIONS (1<<9)
#define PLACEMENT_FLAGS_11_STARTUP (1<<10)
#define PLACEMENT_FLAGS_11_ATTACH_PHYSICALLY (1<<11)
#define PLACEMENT_FLAGS_11_ATTACH_WITH_SCALE (1<<12)
#define PLACEMENT_FLAGS_11_NO_PARENT_LIGHTING (1<<13)
#define PLACEMENT_FLAGS_11_DISABLE_OPPORTUNITY (1<<14)
#define PLACEMENT_FLAGS_11_SUBTRACT (1<<15)
#define PLACEMENT_FLAGS_11_OVERRIDE_CVW_LIGHTING (1<<16)
#define PLACEMENT_FLAGS_11_OVERRIDE_CVW_LIGHTING___DISABLE_CVW_FOR_THIS_PLACEMENT (1<<17)
#define PLACEMENT_FLAGS_11_CLIENT_ONLY_NO_RELEVANCY (1<<18)
#define PLACEMENT_FLAGS_11_NON_NETWORKED_COLLISION (1<<19)


// Field gravity_flags_11

#define GRAVITY_FLAGS_11_APPLY_OVERRIDE (1<<0)
#define GRAVITY_FLAGS_11_APPLY_TO_CHILDREN_ALSO (1<<1)


// Field script_flags_11

#define SCRIPT_FLAGS_11_SCRIPTS_DISABLED (1<<0)
#define SCRIPT_FLAGS_11_USE_OVERRIDE_LISTS (1<<1)
#define SCRIPT_FLAGS_11_SCRIPTS_ALWAYS_RUN (1<<2)


// Field transform_flags_11

#define TRANSFORM_FLAGS_11_MIRRORED (1<<0)


// Field Nav_Mesh_Flags_11

#define NAV_MESH_FLAGS_11_CHILDREN_INHERIT_NAVMESH_INTERACTION (1<<0)
#define NAV_MESH_FLAGS_11_NAVMESH_ALWAYS_LOADED (1<<1)


// Field flags_23

#define FLAGS_23_TRACKABLE (1<<0)
#define FLAGS_23_ENABLED_BY_DEFAULT (1<<1)
#define FLAGS_23_OUTLINE (1<<2)
#define FLAGS_23_IMMEDIATE_RESPONSE (1<<3)
#define FLAGS_23_FOLLOW_OFFSCREEN (1<<4)
#define FLAGS_23_DO_NOT_TRACK_CHILDREN (1<<5)
#define FLAGS_23_DO_NOT_OUTLINE_CHILDREN (1<<6)


// Field Layer_flags_11

#define LAYER_FLAGS_11_LAYER_IS_MAP_VARIANT (1<<0)


// Field association_types_11

#define ASSOCIATION_TYPES_11_AERIAL_VEHICLE_SPAWN_POINT (1<<0)
#define ASSOCIATION_TYPES_11_GROUND_VEHICLE_SPAWN_POINT (1<<1)


// Field spawn_flags_9

#define SPAWN_FLAGS_9_UNIQUE_SPAWN (1<<0)
#define SPAWN_FLAGS_9_NOT_INITIALLY_PLACED (1<<1)
#define SPAWN_FLAGS_9_DEPRECATED (1<<2)
#define SPAWN_FLAGS_9_IS_SHORTCUT_OBJECT (1<<3)
#define SPAWN_FLAGS_9_CAN_SPAWN_ON_BIPEDS (1<<4)
#define SPAWN_FLAGS_9_DOES_NOT_RESPAWN (1<<5)
#define SPAWN_FLAGS_9_ABANDONMENT_TIMER_ALWAYS_ACTIVE (1<<6)
#define SPAWN_FLAGS_9_OVERRIDE_CANDY_MONITOR_DEFAULTS (1<<7)
#define SPAWN_FLAGS_9_TRACKED_BY_CANDY_MONITOR (1<<8)


// Field teleporter_passability_9

#define TELEPORTER_PASSABILITY_9_DISALLOW_PLAYERS (1<<0)
#define TELEPORTER_PASSABILITY_9_ALLOW_LIGHT_LAND_VEHICLES (1<<1)
#define TELEPORTER_PASSABILITY_9_ALLOW_HEAVY_LAND_VEHICLES (1<<2)
#define TELEPORTER_PASSABILITY_9_ALLOW_FLYING_VEHICLES (1<<3)
#define TELEPORTER_PASSABILITY_9_ALLOW_PROJECTILES (1<<4)


// Field Spawn_Point_Flags_9

#define SPAWN_POINT_FLAGS_9_NEVER_SPAWN_IN_VEHICLE (1<<0)


// Field Multiplayer_Property_Flags_9

#define MULTIPLAYER_PROPERTY_FLAGS_9_DENY_SPAWN_POINTS (1<<0)
#define MULTIPLAYER_PROPERTY_FLAGS_9_APPLY_SPAWN_ZONE_PROPERTIES_TO_OPPOSING_TEAMS (1<<1)
#define MULTIPLAYER_PROPERTY_FLAGS_9_APPLY_SPAWN_ZONE_PROPERTIES_TO_INITIAL_SPAWN (1<<2)
#define MULTIPLAYER_PROPERTY_FLAGS_9_WEAPONPAD_INITIALLY_DISABLED (1<<3)
#define MULTIPLAYER_PROPERTY_FLAGS_9_IGNORE_SPAWN_ZONE_FALLOFF_FUNCTION (1<<4)


// Field MapZones_9

#define MAPZONES_9_ZERO (1<<0)
#define MAPZONES_9_ONE (1<<1)
#define MAPZONES_9_TWO (1<<2)
#define MAPZONES_9_THREE (1<<3)
#define MAPZONES_9_FOUR (1<<4)
#define MAPZONES_9_FIVE (1<<5)
#define MAPZONES_9_SIX (1<<6)
#define MAPZONES_9_SEVEN (1<<7)


// Field MapZoneConfigurations_9

#define MAPZONECONFIGURATIONS_9_ALPHA (1<<0)
#define MAPZONECONFIGURATIONS_9_BRAVO (1<<1)
#define MAPZONECONFIGURATIONS_9_CHARLIE (1<<2)
#define MAPZONECONFIGURATIONS_9_DELTA (1<<3)
#define MAPZONECONFIGURATIONS_9_ECHO (1<<4)
#define MAPZONECONFIGURATIONS_9_FOXTROT (1<<5)
#define MAPZONECONFIGURATIONS_9_GOLF (1<<6)
#define MAPZONECONFIGURATIONS_9_HOTEL (1<<7)


// Field placement_flags_12

#define PLACEMENT_FLAGS_12_NOT_AUTOMATICALLY (1<<0)
#define PLACEMENT_FLAGS_12_UNUSED0 (1<<1)
#define PLACEMENT_FLAGS_12_UNUSED1 (1<<2)
#define PLACEMENT_FLAGS_12_UNUSED2 (1<<3)
#define PLACEMENT_FLAGS_12_LOCK_TYPE_TO_ENV_OBJECT (1<<4)
#define PLACEMENT_FLAGS_12_LOCK_TRANSFORM_TO_ENV_OBJECT (1<<5)
#define PLACEMENT_FLAGS_12_NEVER_PLACED (1<<6)
#define PLACEMENT_FLAGS_12_LOCK_NAME_TO_ENV_OBJECT (1<<7)
#define PLACEMENT_FLAGS_12_CREATE_AT_REST (1<<8)
#define PLACEMENT_FLAGS_12_STORE_ORIENTATIONS (1<<9)
#define PLACEMENT_FLAGS_12_STARTUP (1<<10)
#define PLACEMENT_FLAGS_12_ATTACH_PHYSICALLY (1<<11)
#define PLACEMENT_FLAGS_12_ATTACH_WITH_SCALE (1<<12)
#define PLACEMENT_FLAGS_12_NO_PARENT_LIGHTING (1<<13)
#define PLACEMENT_FLAGS_12_DISABLE_OPPORTUNITY (1<<14)
#define PLACEMENT_FLAGS_12_SUBTRACT (1<<15)
#define PLACEMENT_FLAGS_12_OVERRIDE_CVW_LIGHTING (1<<16)
#define PLACEMENT_FLAGS_12_OVERRIDE_CVW_LIGHTING___DISABLE_CVW_FOR_THIS_PLACEMENT (1<<17)
#define PLACEMENT_FLAGS_12_CLIENT_ONLY_NO_RELEVANCY (1<<18)
#define PLACEMENT_FLAGS_12_NON_NETWORKED_COLLISION (1<<19)


// Field gravity_flags_12

#define GRAVITY_FLAGS_12_APPLY_OVERRIDE (1<<0)
#define GRAVITY_FLAGS_12_APPLY_TO_CHILDREN_ALSO (1<<1)


// Field script_flags_12

#define SCRIPT_FLAGS_12_SCRIPTS_DISABLED (1<<0)
#define SCRIPT_FLAGS_12_USE_OVERRIDE_LISTS (1<<1)
#define SCRIPT_FLAGS_12_SCRIPTS_ALWAYS_RUN (1<<2)


// Field transform_flags_12

#define TRANSFORM_FLAGS_12_MIRRORED (1<<0)


// Field Nav_Mesh_Flags_12

#define NAV_MESH_FLAGS_12_CHILDREN_INHERIT_NAVMESH_INTERACTION (1<<0)
#define NAV_MESH_FLAGS_12_NAVMESH_ALWAYS_LOADED (1<<1)


// Field flags_24

#define FLAGS_24_TRACKABLE (1<<0)
#define FLAGS_24_ENABLED_BY_DEFAULT (1<<1)
#define FLAGS_24_OUTLINE (1<<2)
#define FLAGS_24_IMMEDIATE_RESPONSE (1<<3)
#define FLAGS_24_FOLLOW_OFFSCREEN (1<<4)
#define FLAGS_24_DO_NOT_TRACK_CHILDREN (1<<5)
#define FLAGS_24_DO_NOT_OUTLINE_CHILDREN (1<<6)


// Field Layer_flags_12

#define LAYER_FLAGS_12_LAYER_IS_MAP_VARIANT (1<<0)


// Field association_types_12

#define ASSOCIATION_TYPES_12_AERIAL_VEHICLE_SPAWN_POINT (1<<0)
#define ASSOCIATION_TYPES_12_GROUND_VEHICLE_SPAWN_POINT (1<<1)


// Field active_change_colors_10

#define ACTIVE_CHANGE_COLORS_10_PRIMARY (1<<0)
#define ACTIVE_CHANGE_COLORS_10_SECONDARY (1<<1)
#define ACTIVE_CHANGE_COLORS_10_TERTIARY (1<<2)
#define ACTIVE_CHANGE_COLORS_10_QUATERNARY (1<<3)


// Field spawn_flags_10

#define SPAWN_FLAGS_10_UNIQUE_SPAWN (1<<0)
#define SPAWN_FLAGS_10_NOT_INITIALLY_PLACED (1<<1)
#define SPAWN_FLAGS_10_DEPRECATED (1<<2)
#define SPAWN_FLAGS_10_IS_SHORTCUT_OBJECT (1<<3)
#define SPAWN_FLAGS_10_CAN_SPAWN_ON_BIPEDS (1<<4)
#define SPAWN_FLAGS_10_DOES_NOT_RESPAWN (1<<5)
#define SPAWN_FLAGS_10_ABANDONMENT_TIMER_ALWAYS_ACTIVE (1<<6)
#define SPAWN_FLAGS_10_OVERRIDE_CANDY_MONITOR_DEFAULTS (1<<7)
#define SPAWN_FLAGS_10_TRACKED_BY_CANDY_MONITOR (1<<8)


// Field teleporter_passability_10

#define TELEPORTER_PASSABILITY_10_DISALLOW_PLAYERS (1<<0)
#define TELEPORTER_PASSABILITY_10_ALLOW_LIGHT_LAND_VEHICLES (1<<1)
#define TELEPORTER_PASSABILITY_10_ALLOW_HEAVY_LAND_VEHICLES (1<<2)
#define TELEPORTER_PASSABILITY_10_ALLOW_FLYING_VEHICLES (1<<3)
#define TELEPORTER_PASSABILITY_10_ALLOW_PROJECTILES (1<<4)


// Field Spawn_Point_Flags_10

#define SPAWN_POINT_FLAGS_10_NEVER_SPAWN_IN_VEHICLE (1<<0)


// Field Multiplayer_Property_Flags_10

#define MULTIPLAYER_PROPERTY_FLAGS_10_DENY_SPAWN_POINTS (1<<0)
#define MULTIPLAYER_PROPERTY_FLAGS_10_APPLY_SPAWN_ZONE_PROPERTIES_TO_OPPOSING_TEAMS (1<<1)
#define MULTIPLAYER_PROPERTY_FLAGS_10_APPLY_SPAWN_ZONE_PROPERTIES_TO_INITIAL_SPAWN (1<<2)
#define MULTIPLAYER_PROPERTY_FLAGS_10_WEAPONPAD_INITIALLY_DISABLED (1<<3)
#define MULTIPLAYER_PROPERTY_FLAGS_10_IGNORE_SPAWN_ZONE_FALLOFF_FUNCTION (1<<4)


// Field MapZones_10

#define MAPZONES_10_ZERO (1<<0)
#define MAPZONES_10_ONE (1<<1)
#define MAPZONES_10_TWO (1<<2)
#define MAPZONES_10_THREE (1<<3)
#define MAPZONES_10_FOUR (1<<4)
#define MAPZONES_10_FIVE (1<<5)
#define MAPZONES_10_SIX (1<<6)
#define MAPZONES_10_SEVEN (1<<7)


// Field MapZoneConfigurations_10

#define MAPZONECONFIGURATIONS_10_ALPHA (1<<0)
#define MAPZONECONFIGURATIONS_10_BRAVO (1<<1)
#define MAPZONECONFIGURATIONS_10_CHARLIE (1<<2)
#define MAPZONECONFIGURATIONS_10_DELTA (1<<3)
#define MAPZONECONFIGURATIONS_10_ECHO (1<<4)
#define MAPZONECONFIGURATIONS_10_FOXTROT (1<<5)
#define MAPZONECONFIGURATIONS_10_GOLF (1<<6)
#define MAPZONECONFIGURATIONS_10_HOTEL (1<<7)


// Field placement_flags_13

#define PLACEMENT_FLAGS_13_NOT_AUTOMATICALLY (1<<0)
#define PLACEMENT_FLAGS_13_UNUSED0 (1<<1)
#define PLACEMENT_FLAGS_13_UNUSED1 (1<<2)
#define PLACEMENT_FLAGS_13_UNUSED2 (1<<3)
#define PLACEMENT_FLAGS_13_LOCK_TYPE_TO_ENV_OBJECT (1<<4)
#define PLACEMENT_FLAGS_13_LOCK_TRANSFORM_TO_ENV_OBJECT (1<<5)
#define PLACEMENT_FLAGS_13_NEVER_PLACED (1<<6)
#define PLACEMENT_FLAGS_13_LOCK_NAME_TO_ENV_OBJECT (1<<7)
#define PLACEMENT_FLAGS_13_CREATE_AT_REST (1<<8)
#define PLACEMENT_FLAGS_13_STORE_ORIENTATIONS (1<<9)
#define PLACEMENT_FLAGS_13_STARTUP (1<<10)
#define PLACEMENT_FLAGS_13_ATTACH_PHYSICALLY (1<<11)
#define PLACEMENT_FLAGS_13_ATTACH_WITH_SCALE (1<<12)
#define PLACEMENT_FLAGS_13_NO_PARENT_LIGHTING (1<<13)
#define PLACEMENT_FLAGS_13_DISABLE_OPPORTUNITY (1<<14)
#define PLACEMENT_FLAGS_13_SUBTRACT (1<<15)
#define PLACEMENT_FLAGS_13_OVERRIDE_CVW_LIGHTING (1<<16)
#define PLACEMENT_FLAGS_13_OVERRIDE_CVW_LIGHTING___DISABLE_CVW_FOR_THIS_PLACEMENT (1<<17)
#define PLACEMENT_FLAGS_13_CLIENT_ONLY_NO_RELEVANCY (1<<18)
#define PLACEMENT_FLAGS_13_NON_NETWORKED_COLLISION (1<<19)


// Field gravity_flags_13

#define GRAVITY_FLAGS_13_APPLY_OVERRIDE (1<<0)
#define GRAVITY_FLAGS_13_APPLY_TO_CHILDREN_ALSO (1<<1)


// Field script_flags_13

#define SCRIPT_FLAGS_13_SCRIPTS_DISABLED (1<<0)
#define SCRIPT_FLAGS_13_USE_OVERRIDE_LISTS (1<<1)
#define SCRIPT_FLAGS_13_SCRIPTS_ALWAYS_RUN (1<<2)


// Field transform_flags_13

#define TRANSFORM_FLAGS_13_MIRRORED (1<<0)


// Field Nav_Mesh_Flags_13

#define NAV_MESH_FLAGS_13_CHILDREN_INHERIT_NAVMESH_INTERACTION (1<<0)
#define NAV_MESH_FLAGS_13_NAVMESH_ALWAYS_LOADED (1<<1)


// Field flags_25

#define FLAGS_25_TRACKABLE (1<<0)
#define FLAGS_25_ENABLED_BY_DEFAULT (1<<1)
#define FLAGS_25_OUTLINE (1<<2)
#define FLAGS_25_IMMEDIATE_RESPONSE (1<<3)
#define FLAGS_25_FOLLOW_OFFSCREEN (1<<4)
#define FLAGS_25_DO_NOT_TRACK_CHILDREN (1<<5)
#define FLAGS_25_DO_NOT_OUTLINE_CHILDREN (1<<6)


// Field Layer_flags_13

#define LAYER_FLAGS_13_LAYER_IS_MAP_VARIANT (1<<0)


// Field association_types_13

#define ASSOCIATION_TYPES_13_AERIAL_VEHICLE_SPAWN_POINT (1<<0)
#define ASSOCIATION_TYPES_13_GROUND_VEHICLE_SPAWN_POINT (1<<1)


// Field Flags

#define FLAGS_SUBTRACT (1<<0)
#define FLAGS_ONALLBSPS (1<<1)


// Field Flags_2

#define FLAGS_2_START_DISABLED (1<<0)


// Field Flags_3

#define FLAGS_3_START_DISABLED (1<<0)


// Field placement_flags_14

#define PLACEMENT_FLAGS_14_SUBTRACT (1<<0)
#define PLACEMENT_FLAGS_14_ON_ALL_BSPS (1<<1)


// Field flags_26

#define FLAGS_26_DONT_CREATE_AUTOMATICALLY (1<<0)
#define FLAGS_26_MOVEMENT_RADIUS_CONTROLS_LOOP_START_STOP (1<<1)
#define FLAGS_26_TAG_PROCESSED (1<<2)


// Field flags_27

#define FLAGS_27_DONT_CREATE_AUTOMATICALLY (1<<0)
#define FLAGS_27_LOOP (1<<1)
#define FLAGS_27_MUTE (1<<2)
#define FLAGS_27_SUBTRACTED (1<<3)
#define FLAGS_27_DYNAMIC_SCALING (1<<4)
#define FLAGS_27_ON_ALL_BSPS (1<<5)


// Field value

#define VALUE_VALUE (1<<0)


// Field Flags_4

#define FLAGS_4_DO_NOT_NEST_UNDER_BSP_AUTO_HLOD (1<<0)


// Field Mode

#define MODE_ADVANCED (1<<0)


// Field Flags_5

#define FLAGS_5_DISABLE_VOLUME (1<<0)
#define FLAGS_5_SNAP_WIND_DIRECTION_TO_LOCAL_COORDINATES (1<<1)
#define FLAGS_5_USE_NOISE_GUSTING (1<<2)
#define FLAGS_5_USE_IN_WIND_SIMULATION (1<<3)
#define FLAGS_5_OVERWRITE_WIND_VALUES_INSIDE_THE_VOLUME (1<<4)


// Field flags_28

#define FLAGS_28_DECORATOR (1<<0)
#define FLAGS_28_PREFAB_PLACEMENT (1<<1)
#define FLAGS_28_CRATE (1<<2)
#define FLAGS_28_SCENERY (1<<3)
#define FLAGS_28_MACHINE (1<<4)
#define FLAGS_28_SPAWN_POINT (1<<5)
#define FLAGS_28_LIGHT (1<<6)
#define FLAGS_28_EFFECT_PLACEMENT (1<<7)


// Field Should_Use_Direction_Vector

#define SHOULD_USE_DIRECTION_VECTOR_USE_DIRECTION_VECTOR (1<<0)


// Field Volume_Flavors

#define VOLUME_FLAVORS_FORTIFICATION (1<<0)
#define VOLUME_FLAVORS_HIGH_GROUND (1<<1)
#define VOLUME_FLAVORS_FLEE_HIDE (1<<2)
#define VOLUME_FLAVORS_LOW_PRIORITY (1<<3)
#define VOLUME_FLAVORS_NO_DRIVE (1<<4)
#define VOLUME_FLAVORS_WANDER (1<<5)
#define VOLUME_FLAVORS_DAMAGE (1<<6)
#define VOLUME_FLAVORS_PATH_AVOIDANCE (1<<7)
#define VOLUME_FLAVORS_DISALLOW_FRIENDLY_FOLLOWERS (1<<8)


// Field Flags_6

#define FLAGS_6_SUBTRACT (1<<0)


// Field Flags_7

#define FLAGS_7_LOOP_ANIMATION (1<<0)
#define FLAGS_7_SUBTRACT (1<<1)


// Field Flags_8

#define FLAGS_8_SUBTRACT (1<<0)


// Field Encounter_Zone_Flags

#define ENCOUNTER_ZONE_FLAGS_DRIVABLE_ZONE (1<<0)
#define ENCOUNTER_ZONE_FLAGS_USE_INITIAL_ACTOR_COUNT_AS_MAX_ASSIGNMENT_LIMIT (1<<1)
#define ENCOUNTER_ZONE_FLAGS_PLAYER_RAISES_RELEVANCE (1<<2)
#define ENCOUNTER_ZONE_FLAGS_PLAYER_LOWERS_RELEVANCE (1<<3)
#define ENCOUNTER_ZONE_FLAGS_BLIND (1<<4)
#define ENCOUNTER_ZONE_FLAGS_DEAF (1<<5)
#define ENCOUNTER_ZONE_FLAGS_BRAINDEAD (1<<6)
#define ENCOUNTER_ZONE_FLAGS_MAGIC_PLAYER_SIGHT (1<<7)
#define ENCOUNTER_ZONE_FLAGS_SUBTRACT (1<<8)
#define ENCOUNTER_ZONE_FLAGS_DONT_AUTO_ASSIGN_SQUAD_SPAWNERS (1<<9)


// Field Flags_9

#define FLAGS_9_INVERT (1<<0)
#define FLAGS_9_LATCHTOTRUE (1<<1)
#define FLAGS_9_LATCHTOFALSE (1<<2)


// Field Vehicle_Compare_Condition

#define VEHICLE_COMPARE_CONDITION_HAS_VEHICLE (1<<0)


// Field Composite_Flags

#define COMPOSITE_FLAGS_RESPECTS_INITIAL_PLACEMENT (1<<0)


// Field Vehicle_Compare_Condition_2

#define VEHICLE_COMPARE_CONDITION_2_HAS_VEHICLE (1<<0)


// Field Flags_10

#define FLAGS_10_SUBTRACT (1<<0)


// Field Flags_11

#define FLAGS_11_INVERT (1<<0)
#define FLAGS_11_LATCHTOTRUE (1<<1)
#define FLAGS_11_LATCHTOFALSE (1<<2)


// Field Vehicle_Compare_Condition_3

#define VEHICLE_COMPARE_CONDITION_3_HAS_VEHICLE (1<<0)


// Field Flags_12

#define FLAGS_12_SUBTRACT (1<<0)
#define FLAGS_12_USE_INITIAL_ACTOR_COUNT_AS_MAX_ASSIGNMENT_LIMIT (1<<1)


// Field Flags_13

#define FLAGS_13_USE_SPAWNER_POSITION_AND_ORIENTATION_FOR_SHIP (1<<0)


// Field Use_Spawner_Direction_as_Destination_Direction

#define USE_SPAWNER_DIRECTION_AS_DESTINATION_DIRECTION_ENABLED (1<<0)


// Field Use_Spawner_Direction_as_Destination_Direction_2

#define USE_SPAWNER_DIRECTION_AS_DESTINATION_DIRECTION_2_ENABLED (1<<0)


// Field Flags_14

#define FLAGS_14_SUBTRACT (1<<0)
#define FLAGS_14_DISABLE_SPAWN_EFFECT (1<<1)
#define FLAGS_14_UNRECRUITABLE (1<<2)


// Field Reinforcement_Point_Flags

#define REINFORCEMENT_POINT_FLAGS_SUBTRACT (1<<0)


// Field Flags_15

#define FLAGS_15_RUNS_ON_SERVER (1<<0)
#define FLAGS_15_RUNS_ON_CLIENT (1<<1)
#define FLAGS_15_CALLBACK_PER_PLAYER_VIEW (1<<2)


// Field Flags_16

#define FLAGS_16_LOCK_MAP_MENU_WHILE_ACTIVE (1<<0)


// Field Flags_17

#define FLAGS_17_INITIALLY_ACTIVE (1<<0)
#define FLAGS_17_IS_NOT_IN_VEHICLE (1<<1)
#define FLAGS_17_IS_IN_VEHICLE (1<<2)
#define FLAGS_17_CINEMATIC_COMPOSITION_START (1<<3)
#define FLAGS_17_CINEMATIC_COMPOSITION_END (1<<4)


// Field Flags_18

#define FLAGS_18_INITIALLY_ACTIVE (1<<0)
#define FLAGS_18_IS_NOT_IN_VEHICLE (1<<1)
#define FLAGS_18_IS_IN_VEHICLE (1<<2)
#define FLAGS_18_CINEMATIC_COMPOSITION_START (1<<3)
#define FLAGS_18_CINEMATIC_COMPOSITION_END (1<<4)


// Field Flags_19

#define FLAGS_19_COMPOSITIONS_FINISHED (1<<0)
#define FLAGS_19_NARRATIVE_SEQUENCES_FINISHED (1<<1)
#define FLAGS_19_IS_IN_VEHICLE (1<<2)
#define FLAGS_19_IS_NOT_IN_VEHICLE (1<<3)
#define FLAGS_19_MOVE_TO_FINISHED (1<<4)
#define FLAGS_19_CINEMATIC_COMPOSITION_START (1<<5)
#define FLAGS_19_CINEMATIC_COMPOSITION_END (1<<6)


// Field Flags_20

#define FLAGS_20_COMPOSITIONS_FINISHED (1<<0)
#define FLAGS_20_NARRATIVE_SEQUENCES_FINISHED (1<<1)
#define FLAGS_20_IS_IN_VEHICLE (1<<2)
#define FLAGS_20_IS_NOT_IN_VEHICLE (1<<3)
#define FLAGS_20_MOVE_TO_FINISHED (1<<4)
#define FLAGS_20_CINEMATIC_COMPOSITION_START (1<<5)
#define FLAGS_20_CINEMATIC_COMPOSITION_END (1<<6)


// Field Flags_21

#define FLAGS_21_LOCK_NARRATIVE_MOMENT_ACTIVATION (1<<0)
#define FLAGS_21_DEV_ONLY_DISABLED (1<<1)
#define FLAGS_21_ONLY_ONCE_AND_GLOBAL (1<<2)
#define FLAGS_21_NON_GLOBAL (1<<3)
#define FLAGS_21_GLOBAL (1<<4)


// Field Flags_22

#define FLAGS_22_RETURN_TO_GAMEPLAY (1<<0)
#define FLAGS_22_CLONE_BLEND_IN_PROPERTIES (1<<1)
#define FLAGS_22_USE_DIRECTOR_CAMERA (1<<2)
#define FLAGS_22_STOP_UPDATING_PREVIOUS_CAMERA (1<<3)
#define FLAGS_22_ACTIVATED_BY_OTHER_COMPONENT (1<<4)


// Field Flags_23

#define FLAGS_23_GAZE_IS_LOOK_AT_TARGET (1<<0)
#define FLAGS_23_GAZE_LOCK_PITCH (1<<1)
#define FLAGS_23_GAZE_LOCK_YAW (1<<2)
#define FLAGS_23_CLAMPED_TO_GAZE (1<<3)
#define FLAGS_23_GAZE_DISALLOW_ROTATING (1<<4)
#define FLAGS_23_GAZE_PREFER_SLIDE_OVER_ROTATION (1<<5)


// Field Flags_24

#define FLAGS_24_IGNORE_HORIZONTAL_DIFFERENCES (1<<0)
#define FLAGS_24_IGNORE_VERTICAL_DIFFERENCES (1<<1)


// Field Flags_25

#define FLAGS_25_GAZE_IS_LOOK_AT_TARGET (1<<0)
#define FLAGS_25_GAZE_LOCK_PITCH (1<<1)
#define FLAGS_25_GAZE_LOCK_YAW (1<<2)
#define FLAGS_25_CLAMPED_TO_GAZE (1<<3)
#define FLAGS_25_GAZE_DISALLOW_ROTATING (1<<4)
#define FLAGS_25_GAZE_PREFER_SLIDE_OVER_ROTATION (1<<5)


// Field Flags_26

#define FLAGS_26_RETURN_TO_GAMEPLAY (1<<0)
#define FLAGS_26_CLONE_BLEND_IN_PROPERTIES (1<<1)
#define FLAGS_26_IMMEDIATELY_AFFECT_AIM (1<<2)
#define FLAGS_26_GAZE_IS_LOOK_AT_TARGET (1<<3)
#define FLAGS_26_GAZE_LOCK_PITCH (1<<4)
#define FLAGS_26_GAZE_LOCK_YAW (1<<5)
#define FLAGS_26_CLAMPED_TO_GAZE (1<<6)
#define FLAGS_26_USE_DIRECTOR_CAMERA (1<<7)
#define FLAGS_26_STOP_UPDATING_PREVIOUS_CAMERA (1<<8)


// Field Flags_27

#define FLAGS_27_RETURN_TO_GAMEPLAY (1<<0)
#define FLAGS_27_CLONE_BLEND_IN_PROPERTIES (1<<1)
#define FLAGS_27_IMMEDIATELY_AFFECT_AIM (1<<2)
#define FLAGS_27_GAZE_IS_LOOK_AT_TARGET (1<<3)
#define FLAGS_27_GAZE_LOCK_PITCH (1<<4)
#define FLAGS_27_GAZE_LOCK_YAW (1<<5)
#define FLAGS_27_CLAMPED_TO_GAZE (1<<6)
#define FLAGS_27_USE_DIRECTOR_CAMERA (1<<7)
#define FLAGS_27_STOP_UPDATING_PREVIOUS_CAMERA (1<<8)


// Field Flags_28

#define FLAGS_28_IGNORE_HORIZONTAL_DIFFERENCES (1<<0)
#define FLAGS_28_IGNORE_VERTICAL_DIFFERENCES (1<<1)


// Field Flags_29

#define FLAGS_29_RETURN_TO_GAMEPLAY (1<<0)
#define FLAGS_29_CLONE_BLEND_IN_PROPERTIES (1<<1)
#define FLAGS_29_IMMEDIATELY_AFFECT_AIM (1<<2)
#define FLAGS_29_GAZE_IS_LOOK_AT_TARGET (1<<3)
#define FLAGS_29_GAZE_LOCK_PITCH (1<<4)
#define FLAGS_29_GAZE_LOCK_YAW (1<<5)
#define FLAGS_29_CLAMPED_TO_GAZE (1<<6)
#define FLAGS_29_USE_DIRECTOR_CAMERA (1<<7)
#define FLAGS_29_STOP_UPDATING_PREVIOUS_CAMERA (1<<8)


// Field Flags_30

#define FLAGS_30_RETURN_TO_GAMEPLAY (1<<0)
#define FLAGS_30_CLONE_BLEND_IN_PROPERTIES (1<<1)
#define FLAGS_30_IMMEDIATELY_AFFECT_AIM (1<<2)
#define FLAGS_30_GAZE_IS_LOOK_AT_TARGET (1<<3)
#define FLAGS_30_GAZE_LOCK_PITCH (1<<4)
#define FLAGS_30_GAZE_LOCK_YAW (1<<5)
#define FLAGS_30_CLAMPED_TO_GAZE (1<<6)
#define FLAGS_30_USE_DIRECTOR_CAMERA (1<<7)
#define FLAGS_30_STOP_UPDATING_PREVIOUS_CAMERA (1<<8)


// Field Flags_31

#define FLAGS_31_KEEP_PLAYING_ON_DEACTIVATE (1<<0)
#define FLAGS_31_DISABLE_PREVIOUS_CAGE_CAMERA (1<<1)
#define FLAGS_31_OVERRIDE_COMPOSITION_CAGE_BLEND_TIMES (1<<2)
#define FLAGS_31_DO_NOT_UPDATE_ANCHOR (1<<3)


// Field Flags_32

#define FLAGS_32_INACTIVE (1<<0)
#define FLAGS_32_BRAIN_DEAD (1<<1)
#define FLAGS_32_INVISIBLE (1<<2)
#define FLAGS_32_PLAY_FIGHTING (1<<3)


// Field Flags_33

#define FLAGS_33_KEYFRAMED_WITH_VELOCITY (1<<0)
#define FLAGS_33_KEYFRAMED_WITH_TIME (1<<1)
#define FLAGS_33_AIM_TOWARDS (1<<2)


// Field Flags_34

#define FLAGS_34_ALTER_PLAYER_MOVEMENT_SPEED (1<<0)
#define FLAGS_34_MODIFY_ANIMATION_MODE (1<<1)
#define FLAGS_34_MAKE_PLAYER_INVULNERABLE (1<<2)
#define FLAGS_34_CROUCH_DISABLED (1<<3)
#define FLAGS_34_JUMP_DISABLED (1<<4)
#define FLAGS_34_CLAMBER_DISABLED (1<<5)
#define FLAGS_34_GRAPPLE_HOOK_DISABLED (1<<6)
#define FLAGS_34_SPRINT_DISABLED (1<<7)
#define FLAGS_34_SLIDE_DISABLED (1<<8)
#define FLAGS_34_SHIELD_EFFECTS_DISABLED (1<<9)
#define FLAGS_34_MOTION_TRACKER_DISABLED (1<<10)
#define FLAGS_34_PLAYER_DIRECTIONAL_DAMAGE_INDICATOR_DISABLED (1<<11)
#define FLAGS_34_PLAYER_SHIELD_HUD_DISABLED (1<<12)
#define FLAGS_34_NO_MELEE_DAMAGE (1<<13)
#define FLAGS_34_NO_MELEE_KNOCKBACK (1<<14)
#define FLAGS_34_NO_WEAPON_DAMAGE (1<<15)
#define FLAGS_34_NO_GRENADE_DAMAGE (1<<16)
#define FLAGS_34_NO_GRENADE_KNOCKBACK (1<<17)
#define FLAGS_34_INFINITE_AMMO (1<<18)
#define FLAGS_34_BOTTOMLESS_CLIP (1<<19)
#define FLAGS_34_WEAPONS_DISABLED (1<<20)
#define FLAGS_34_GRENADES_DISABLED (1<<21)


// Field Flags_35

#define FLAGS_35_KEYFRAMED_WITH_VELOCITY (1<<0)
#define FLAGS_35_KEYFRAMED_WITH_TIME (1<<1)
#define FLAGS_35_AIM_TOWARDS (1<<2)


// Field Flags_36

#define FLAGS_36_DISABLE_ALL_HUD (1<<0)
#define FLAGS_36_DISABLE_MESSAGES (1<<1)
#define FLAGS_36_DISABLE_RADAR (1<<2)
#define FLAGS_36_DISABLE_WEAPON_RETICLE (1<<3)
#define FLAGS_36_DISABLE_SHIELD_BAR (1<<4)
#define FLAGS_36_DISABLE_WEAPON (1<<5)
#define FLAGS_36_DISABLE_ABILITY (1<<6)
#define FLAGS_36_DISABLE_NAVPOINTS (1<<7)
#define FLAGS_36_DISABLE_TOAST_COMMENDATIONS (1<<8)
#define FLAGS_36_DISABLE_FANFARES (1<<9)
#define FLAGS_36_DISABLE_MEDAL_POST (1<<10)
#define FLAGS_36_DISABLE_PLAYER_NAVPOINTS (1<<11)
#define FLAGS_36_DISABLE_TRACKING_NAVPOINTS (1<<12)
#define FLAGS_36_DISABLE_MANAGED_ENGINE_NAVPOINTS (1<<13)
#define FLAGS_36_DISABLE_OBJECT_DISPENSER_NAVPOINTS (1<<14)
#define FLAGS_36_DISABLE_LOCK_ON_NAVPOINTS (1<<15)
#define FLAGS_36_DISABLE_SCRIPTED_NAVPOINTS (1<<16)
#define FLAGS_36_DISABLE_WEAPON_MESSAGING (1<<17)
#define FLAGS_36_DISABLE_HUD_WIRES (1<<18)
#define FLAGS_36_DISABLE_SPLASH_BANNER (1<<19)
#define FLAGS_36_DISABLE_SPLASH_BANNER_AND_OBJECTIVE_TRACKER (1<<20)


// Field Flags_37

#define FLAGS_37_ORIENT_TOWARDS_PLAYER_CAMERA (1<<0)
#define FLAGS_37_ORIENT_NO_PITCH (1<<1)
#define FLAGS_37_ORIENT_NO_YAW (1<<2)
#define FLAGS_37_COLOR_CURVE_IS_HSV (1<<3)
#define FLAGS_37_GAZE_IS_LOOK_AT_TARGET (1<<4)
#define FLAGS_37_GAZE_LOCK_PITCH (1<<5)
#define FLAGS_37_GAZE_LOCK_YAW (1<<6)
#define FLAGS_37_CLAMPED_TO_GAZE (1<<7)


// Field Flags_38

#define FLAGS_38_IGNORE_HORIZONTAL_DIFFERENCES (1<<0)
#define FLAGS_38_IGNORE_VERTICAL_DIFFERENCES (1<<1)


// Field Flags_39

#define FLAGS_39_ORIENT_TOWARDS_PLAYER_CAMERA (1<<0)
#define FLAGS_39_ORIENT_NO_PITCH (1<<1)
#define FLAGS_39_ORIENT_NO_YAW (1<<2)
#define FLAGS_39_COLOR_CURVE_IS_HSV (1<<3)
#define FLAGS_39_GAZE_IS_LOOK_AT_TARGET (1<<4)
#define FLAGS_39_GAZE_LOCK_PITCH (1<<5)
#define FLAGS_39_GAZE_LOCK_YAW (1<<6)
#define FLAGS_39_CLAMPED_TO_GAZE (1<<7)


// Field Flags_40

#define FLAGS_40_MOVE_TO_KEYFRAMED_WITH_VELOCITY (1<<0)
#define FLAGS_40_MOVE_TO_KEYFRAMED_WITH_TIME (1<<1)
#define FLAGS_40_MOVE_TO_INPUT_BASED (1<<2)
#define FLAGS_40_AIM_TOWARDS (1<<3)
#define FLAGS_40_MOVE_UNTIL_COMPOSITION_PLAYS (1<<4)
#define FLAGS_40_COMPOSITION_3RD_TO_3RD (1<<5)
#define FLAGS_40_COMPOSITION_1ST_TO_1ST (1<<6)
#define FLAGS_40_COMPOSITION_1ST_TO_3RD_NO_PLAYER (1<<7)
#define FLAGS_40_TURN_HUD_OFF (1<<8)
#define FLAGS_40_TURN_HUD_ON (1<<9)
#define FLAGS_40_DONT_WAIT_FOR_HUD (1<<10)
#define FLAGS_40_SEQUENTIAL (1<<11)
#define FLAGS_40_ACTIVATE_CAMERA_ON_HUD_OFF (1<<12)
#define FLAGS_40_TRANSITION_OUT_WHEN_COMPOSITION_FINISHED (1<<13)
#define FLAGS_40_FORCE_DEACTIVATE (1<<14)
#define FLAGS_40_FINISH_AFTER_HUD_OFF (1<<15)
#define FLAGS_40_TRANSITION_OUT_TRIGGER_ON_EVENT (1<<16)


// Field flags_29

#define FLAGS_29_IGNORE_BIPEDS (1<<0)
#define FLAGS_29_IGNORE_VEHICLES (1<<1)
#define FLAGS_29_IGNORE_CAMERA (1<<2)
#define FLAGS_29_IGNORE_HUGE_VEHICLES (1<<3)


// Field runtime_flags

#define RUNTIME_FLAGS_IGNORE_CAMERA (1<<0)


// Field flags_30

#define FLAGS_30_DONT_KILL_IMMEDIATELY (1<<0)
#define FLAGS_30_ONLY_KILL_PLAYERS (1<<1)
#define FLAGS_30_DONT_KILL_IMMEDIATELY_AND_DONT_APPLY_TO_AIR_VEHICLES (1<<2)
#define FLAGS_30_TELEPORT_VEHICLES (1<<3)
#define FLAGS_30_PREVENT_SPAWN_IN_VEHICLE (1<<4)
#define FLAGS_30_ONLY_KILL_GAME_OBJECTS (1<<5)
#define FLAGS_30_DONT_APPLY_TO_AIR_VEHICLES (1<<6)


// Field placement_flags_15

#define PLACEMENT_FLAGS_15_KIT_SUBTRACT (1<<0)
#define PLACEMENT_FLAGS_15_TAG_PROCESSED (1<<1)
#define PLACEMENT_FLAGS_15_ON_ALL_BSPS (1<<2)


// Field zone_config_flags

#define ZONE_CONFIG_FLAGS_INHERIT_BASE_AIR (1<<0)


// Field flags_31

#define FLAGS_31_DO_NOT_USE_MASK (1<<0)
#define FLAGS_31_IS_A_DOOR (1<<1)
#define FLAGS_31_CENTRE_OPENING (1<<2)
#define FLAGS_31_AFFECTS_SHAPE (1<<3)
#define FLAGS_31_AFFECTS_TRANSMISSIVITY (1<<4)
#define FLAGS_31_RAY_CAST_THRU (1<<5)
#define FLAGS_31_KIT_SUBTRACT (1<<6)
#define FLAGS_31_ON_ALL_BSPS (1<<7)
#define FLAGS_31_CHECK_PORTAL_IS_GEO_BLOCKED (1<<8)


// Field flags_32

#define FLAGS_32_FORCE_PLANAR (1<<0)
#define FLAGS_32_PROJECT_UVS (1<<1)


// Field flags_33

#define FLAGS_33_UNUSED (1<<0)
#define FLAGS_33_BLIND (1<<1)
#define FLAGS_33_DEAF (1<<2)
#define FLAGS_33_BRAINDEAD (1<<3)
#define FLAGS_33_INITIALLY_PLACED (1<<4)
#define FLAGS_33_UNITS_NOT_ENTERABLE_BY_PLAYER (1<<5)
#define FLAGS_33_FIRETEAM_ABSORBER (1<<6)
#define FLAGS_33_SQUAD_IS_RUNTIMEDO_NOT_USE (1<<7)
#define FLAGS_33_NO_WAVE_SPAWN (1<<8)
#define FLAGS_33_SQUAD_IS_MUSKETEER (1<<9)


// Field difficulty_flags

#define DIFFICULTY_FLAGS_EASY (1<<0)
#define DIFFICULTY_FLAGS_NORMAL (1<<1)
#define DIFFICULTY_FLAGS_HEROIC (1<<2)
#define DIFFICULTY_FLAGS_LEGENDARY (1<<3)


// Field flags_34

#define FLAGS_34_SINGLE_USE (1<<0)


// Field flags_35

#define FLAGS_35_NO_VERTICAL_OFFSET_FOR_FLYING (1<<0)


// Field difficulty_flags_2

#define DIFFICULTY_FLAGS_2_EASY (1<<0)
#define DIFFICULTY_FLAGS_2_NORMAL (1<<1)
#define DIFFICULTY_FLAGS_2_HEROIC (1<<2)
#define DIFFICULTY_FLAGS_2_LEGENDARY (1<<3)


// Field flags_36

#define FLAGS_36_INFECTION_FORM_EXPLODE (1<<0)
#define FLAGS_36_N_A (1<<1)
#define FLAGS_36_ALWAYS_PLACE (1<<2)
#define FLAGS_36_INITIALLY_HIDDEN (1<<3)
#define FLAGS_36_VEHICLE_DESTROYED_WHEN_NO_DRIVER (1<<4)
#define FLAGS_36_VEHICLE_OPEN (1<<5)
#define FLAGS_36_ACTOR_SURFACE_EMERGE (1<<6)
#define FLAGS_36_ACTOR_SURFACE_EMERGE_AUTO (1<<7)
#define FLAGS_36_ACTOR_SURFACE_EMERGE_UPWARDS (1<<8)


// Field flags_37

#define FLAGS_37_SINGLE_USE (1<<0)


// Field difficulty_flags_3

#define DIFFICULTY_FLAGS_3_EASY (1<<0)
#define DIFFICULTY_FLAGS_3_NORMAL (1<<1)
#define DIFFICULTY_FLAGS_3_HEROIC (1<<2)
#define DIFFICULTY_FLAGS_3_LEGENDARY (1<<3)


// Field difficulty_flags_4

#define DIFFICULTY_FLAGS_4_EASY (1<<0)
#define DIFFICULTY_FLAGS_4_NORMAL (1<<1)
#define DIFFICULTY_FLAGS_4_HEROIC (1<<2)
#define DIFFICULTY_FLAGS_4_LEGENDARY (1<<3)


// Field difficulty_flags_5

#define DIFFICULTY_FLAGS_5_EASY (1<<0)
#define DIFFICULTY_FLAGS_5_NORMAL (1<<1)
#define DIFFICULTY_FLAGS_5_HEROIC (1<<2)
#define DIFFICULTY_FLAGS_5_LEGENDARY (1<<3)


// Field difficulty_flags_6

#define DIFFICULTY_FLAGS_6_EASY (1<<0)
#define DIFFICULTY_FLAGS_6_NORMAL (1<<1)
#define DIFFICULTY_FLAGS_6_HEROIC (1<<2)
#define DIFFICULTY_FLAGS_6_LEGENDARY (1<<3)


// Field difficulty_flags_7

#define DIFFICULTY_FLAGS_7_EASY (1<<0)
#define DIFFICULTY_FLAGS_7_NORMAL (1<<1)
#define DIFFICULTY_FLAGS_7_HEROIC (1<<2)
#define DIFFICULTY_FLAGS_7_LEGENDARY (1<<3)


// Field flags_38

#define FLAGS_38_SINGLE_USE (1<<0)


// Field difficulty_flags_8

#define DIFFICULTY_FLAGS_8_EASY (1<<0)
#define DIFFICULTY_FLAGS_8_NORMAL (1<<1)
#define DIFFICULTY_FLAGS_8_HEROIC (1<<2)
#define DIFFICULTY_FLAGS_8_LEGENDARY (1<<3)


// Field difficulty_flags_9

#define DIFFICULTY_FLAGS_9_EASY (1<<0)
#define DIFFICULTY_FLAGS_9_NORMAL (1<<1)
#define DIFFICULTY_FLAGS_9_HEROIC (1<<2)
#define DIFFICULTY_FLAGS_9_LEGENDARY (1<<3)


// Field difficulty_flags_10

#define DIFFICULTY_FLAGS_10_EASY (1<<0)
#define DIFFICULTY_FLAGS_10_NORMAL (1<<1)
#define DIFFICULTY_FLAGS_10_HEROIC (1<<2)
#define DIFFICULTY_FLAGS_10_LEGENDARY (1<<3)


// Field difficulty_flags_11

#define DIFFICULTY_FLAGS_11_EASY (1<<0)
#define DIFFICULTY_FLAGS_11_NORMAL (1<<1)
#define DIFFICULTY_FLAGS_11_HEROIC (1<<2)
#define DIFFICULTY_FLAGS_11_LEGENDARY (1<<3)


// Field difficulty_flags_12

#define DIFFICULTY_FLAGS_12_EASY (1<<0)
#define DIFFICULTY_FLAGS_12_NORMAL (1<<1)
#define DIFFICULTY_FLAGS_12_HEROIC (1<<2)
#define DIFFICULTY_FLAGS_12_LEGENDARY (1<<3)


// Field flags_39

#define FLAGS_39_SINGLE_USE (1<<0)


// Field flags_40

#define FLAGS_40_GIANTS_ZONE (1<<0)


// Field area_flags

#define AREA_FLAGS_VEHICLE_AREA (1<<0)
#define AREA_FLAGS_WALL_CLIMB (1<<1)
#define AREA_FLAGS_MANUAL_REFERENCE_FRAME (1<<2)
#define AREA_FLAGS_TURRET_DEPLOYMENT_AREA (1<<3)
#define AREA_FLAGS_INVALID_SECTOR_DEF (1<<4)


// Field flags_41

#define FLAGS_41_EXCLUDE_COVER (1<<0)
#define FLAGS_41_IGNORE_EXISTING (1<<1)
#define FLAGS_41_GENERATE_RADIAL (1<<2)
#define FLAGS_41_DONT_STAGGER (1<<3)
#define FLAGS_41_AIRBORNE (1<<4)
#define FLAGS_41_AIRBORNE_STAGGER (1<<5)
#define FLAGS_41_CONTINUE_CASTING (1<<6)


// Field Flags_41

#define FLAGS_41_BIDIRECTIONAL (1<<0)


// Field control_flags

#define CONTROL_FLAGS_WALK_DOWN (1<<0)
#define CONTROL_FLAGS_BOTS_CANT_USE_IF_SLOWED (1<<1)
#define CONTROL_FLAGS_CHEAP_JUMP (1<<2)


// Field invalid_points

#define INVALID_POINTS_NUM1 (1<<0)
#define INVALID_POINTS_NUM2 (1<<1)
#define INVALID_POINTS_NUM3 (1<<2)
#define INVALID_POINTS_NUM4 (1<<3)


// Field flags_42

#define FLAGS_42_MANUAL_REFERENCE_FRAME (1<<0)
#define FLAGS_42_TURRET_DEPLOYMENT (1<<1)
#define FLAGS_42_GIANT_SET (1<<2)
#define FLAGS_42_PATROL (1<<3)
#define FLAGS_42_INVALID_SECTOR_REFS (1<<4)


// Field traversal_flags

#define TRAVERSAL_FLAGS_CURVE_THE_TRAVERSAL_PATH (1<<0)
#define TRAVERSAL_FLAGS_LOOP_WHEN_END_IS_REACHED (1<<1)


// Field flags_43

#define FLAGS_43_EDIT_AS_RELATIVE (1<<0)


// Field source_flags

#define SOURCE_FLAGS_GROUND_SOURCE (1<<0)
#define SOURCE_FLAGS_POSITION_LOCKED (1<<1)
#define SOURCE_FLAGS_RANDOM_ORIENTATION (1<<2)


// Field Looped_Path

#define LOOPED_PATH_ENABLE (1<<0)


// Field Placement_Flags

#define PLACEMENT_FLAGS_ALWAYS_PLACED_OFF_BSP_FLOCK (1<<0)
#define PLACEMENT_FLAGS_HARD_BOUNDARIES_ON_VOLUME (1<<1)
#define PLACEMENT_FLAGS_FLOCK_INITIALLY_STOPPED (1<<2)
#define PLACEMENT_FLAGS_FLOCK_INITIALLY_PERCHED (1<<3)
#define PLACEMENT_FLAGS_ONE_CREATURE_PER_SOURCE (1<<4)
#define PLACEMENT_FLAGS_SCARED_BY_AI (1<<5)
#define PLACEMENT_FLAGS_CREATURES_RESPECT_KILL_VOLUMES (1<<6)
#define PLACEMENT_FLAGS_FLOCK_IS_AUTOGENERATED (1<<7)
#define PLACEMENT_FLAGS_PLACED_BY_KIT (1<<8)
#define PLACEMENT_FLAGS_USE_CONSTANT_THROTTLE (1<<9)
#define PLACEMENT_FLAGS_CHOOSE_RANDOM_DESTINATION_IF_NEXT_DESTINATION_IS_UNSET (1<<10)
#define PLACEMENT_FLAGS_IF_BOIDS_ARE_GRAZING_WILL_FLEE_IF_SCARED (1<<11)
#define PLACEMENT_FLAGS_MINIMIZE_RANDOMNESS_IN_DESTINATIONS (1<<12)


// Field General_Override_Flags

#define GENERAL_OVERRIDE_FLAGS_BOID_COUNT (1<<0)
#define GENERAL_OVERRIDE_FLAGS_INITIAL_BEHAVIOR (1<<1)
#define GENERAL_OVERRIDE_FLAGS_SECOND_BEHAVIOR (1<<2)
#define GENERAL_OVERRIDE_FLAGS_REACTION_BEHAVIOR (1<<3)
#define GENERAL_OVERRIDE_FLAGS_REACTION_NAVIGATION_BEHAVIOR (1<<4)
#define GENERAL_OVERRIDE_FLAGS_SECOND_REACTION_BEHAVIOR (1<<5)
#define GENERAL_OVERRIDE_FLAGS_SECOND_REACTION_NAVIGATION_BEHAVIOR (1<<6)


// Field Circling_Override_Flags

#define CIRCLING_OVERRIDE_FLAGS_INNER_RADIUS (1<<0)
#define CIRCLING_OVERRIDE_FLAGS_CROSS_SECTION_RADIUS (1<<1)
#define CIRCLING_OVERRIDE_FLAGS_DIRECTION (1<<2)


// Field Perching_Wandering_Override_Flags

#define PERCHING_WANDERING_OVERRIDE_FLAGS_SPAWN_CYLINDER_RADIUS (1<<0)
#define PERCHING_WANDERING_OVERRIDE_FLAGS_SPAWN_CYLINDER_HEIGHT (1<<1)


// Field Flags_42

#define FLAGS_42_WANDER_RANDOMLY (1<<0)


// Field Wandering_to_same_source_point_is_allowed

#define WANDERING_TO_SAME_SOURCE_POINT_IS_ALLOWED_ENABLE (1<<0)


// Field Wandering_Override_Flags

#define WANDERING_OVERRIDE_FLAGS_WANDERING_TIME (1<<0)
#define WANDERING_OVERRIDE_FLAGS_FLAGS (1<<1)


// Field Spawn_Flags

#define SPAWN_FLAGS_ALWAYS_REPLENISH_BOIDS (1<<0)
#define SPAWN_FLAGS_RANDOMIZE_SPAWN_POINT_HEIGHT (1<<1)
#define SPAWN_FLAGS_USED_IN_KITS_ALLOW_NAME_DUPLICATION (1<<2)
#define SPAWN_FLAGS_RANDOMIZE_CREATURE_VARIANT (1<<3)


// Field Generate_Spawn_Point_for_Each_Boid

#define GENERATE_SPAWN_POINT_FOR_EACH_BOID_ENABLE (1<<0)


// Field Disable_Backward_Flock_Relevancy_Reduce

#define DISABLE_BACKWARD_FLOCK_RELEVANCY_REDUCE_ENABLE (1<<0)


// Field Spawn_Override_Flags

#define SPAWN_OVERRIDE_FLAGS_SPAWN_POINT_COUNT (1<<0)
#define SPAWN_OVERRIDE_FLAGS_SPAWN_PRIORITY (1<<1)
#define SPAWN_OVERRIDE_FLAGS_DISABLE_BACKWARD_FLOCK_RELEVANCY_REDUCE (1<<2)
#define SPAWN_OVERRIDE_FLAGS_GENERATE_SPAWN_POINT_FOR_EACH_BOID (1<<3)
#define SPAWN_OVERRIDE_FLAGS_PRODUCTION_FREQUENCY_BOUNDS (1<<4)


// Field Not_Initially_Spawned

#define NOT_INITIALLY_SPAWNED_ENABLE (1<<0)


// Field Procedural_Spawn_In_Player_Visibility

#define PROCEDURAL_SPAWN_IN_PLAYER_VISIBILITY_ENABLE (1<<0)


// Field flags_44

#define FLAGS_44_IS_KIT (1<<0)
#define FLAGS_44_IS_STREAMED (1<<1)
#define FLAGS_44_IS_FROM_MAP_VARIANT (1<<2)


// Field objective_flags

#define OBJECTIVE_FLAGS_USE_FRONT_AREA_SELECTION (1<<0)
#define OBJECTIVE_FLAGS_USE_PLAYERS_AS_FRONT (1<<1)
#define OBJECTIVE_FLAGS_INHIBIT_VEHICLE_ENTRY (1<<2)


// Field flags_45

#define FLAGS_45_LATCH_ON (1<<0)
#define FLAGS_45_LATCH_OFF (1<<1)
#define FLAGS_45_GATE (1<<2)
#define FLAGS_45_SINGLE_USE (1<<3)
#define FLAGS_45_SUPPRESS_COMBAT (1<<4)
#define FLAGS_45_SUPPRESS_ACTIVE_CAMO (1<<5)
#define FLAGS_45_BLIND (1<<6)
#define FLAGS_45_DEAF (1<<7)
#define FLAGS_45_BRAINDEAD (1<<8)
#define FLAGS_45_MAGIC_PLAYER_SIGHT (1<<9)
#define FLAGS_45_DISABLE (1<<10)
#define FLAGS_45_REVERSE_DIRECTION (1<<11)
#define FLAGS_45_INVERT_FILTER_LOGIC (1<<12)


// Field inhibit_groups

#define INHIBIT_GROUPS_COVER (1<<0)
#define INHIBIT_GROUPS_RETREAT (1<<1)
#define INHIBIT_GROUPS_VEHICLES_ALL (1<<2)
#define INHIBIT_GROUPS_GRENADES (1<<3)
#define INHIBIT_GROUPS_BERSERK (1<<4)
#define INHIBIT_GROUPS_EQUIPMENT (1<<5)
#define INHIBIT_GROUPS_OBJECT_INTERACTION (1<<6)
#define INHIBIT_GROUPS_TURRETS (1<<7)
#define INHIBIT_GROUPS_VEHICLES_NON_TURRETS (1<<8)


// Field inhibit_on_difficulty

#define INHIBIT_ON_DIFFICULTY_EASY (1<<0)
#define INHIBIT_ON_DIFFICULTY_NORMAL (1<<1)
#define INHIBIT_ON_DIFFICULTY_HEROIC (1<<2)
#define INHIBIT_ON_DIFFICULTY_LEGENDARY (1<<3)


// Field follow_players

#define FOLLOW_PLAYERS_PLAYER_0 (1<<0)
#define FOLLOW_PLAYERS_PLAYER_1 (1<<1)
#define FOLLOW_PLAYERS_PLAYER_2 (1<<2)
#define FOLLOW_PLAYERS_PLAYER_3 (1<<3)


// Field flags_46

#define FLAGS_46_GOAL (1<<0)
#define FLAGS_46_DIRECTION_VALID (1<<1)


// Field runtime_flags_2

#define RUNTIME_FLAGS_2_AREA_CONNECTIVITY_VALID (1<<0)


// Field filter_flags

#define FILTER_FLAGS_EXCLUSIVE (1<<0)


// Field Composer_Show_Stage_Flags

#define COMPOSER_SHOW_STAGE_FLAGS_DETECT_IF_SHOULD_USE_STAGE_VOLUME (1<<0)
#define COMPOSER_SHOW_STAGE_FLAGS_USE_STAGE_VOLUME (1<<1)


// Field Stage_Volume_Flags

#define STAGE_VOLUME_FLAGS_DEAD_BODIES (1<<0)
#define STAGE_VOLUME_FLAGS_DYNAMIC_OBJECTS (1<<1)
#define STAGE_VOLUME_FLAGS_CARRIED_ITEMS (1<<2)
#define STAGE_VOLUME_FLAGS_VEHICLES (1<<3)
#define STAGE_VOLUME_FLAGS_ENEMY_AI (1<<4)
#define STAGE_VOLUME_FLAGS_DISALLOWED_OBJECTS (1<<5)


// Field Streaming_Flags

#define STREAMING_FLAGS_MANUAL_STREAMING (1<<0)
#define STREAMING_FLAGS_PIN_ON_LEVEL_LOAD (1<<1)
#define STREAMING_FLAGS_PRELOAD_ON_LAYER_LOAD (1<<2)
#define STREAMING_FLAGS_UNLOAD_WHEN_FINISHED (1<<3)
#define STREAMING_FLAGS_USE_VOLUME_FOR_POSITION (1<<4)


// Field flags_47

#define FLAGS_47_DISABLE_BULLET_COLLISION (1<<0)
#define FLAGS_47_DISABLE_PLAY_COLLISION (1<<1)
#define FLAGS_47_DISABLE_RENDER_COLLISION (1<<2)
#define FLAGS_47_OVERRIDE_PREFAB_PROBE_GRID_CAPTURE_OFFSET (1<<3)
#define FLAGS_47_PVS_ALWAYS_USE_LOD0 (1<<4)
#define FLAGS_47_PVS_ALWAYS_VISIBLE (1<<5)
#define FLAGS_47_PVS_DONT_USE_AS_AN_OCCLUDER (1<<6)
#define FLAGS_47_SUBTRACT_OVERRIDE_FROM_KIT (1<<7)
#define FLAGS_47_GENERATE_DECORATORS (1<<8)
#define FLAGS_47_IS_TRIGGER_VOLUME (1<<9)


// Field flags_48

#define FLAGS_48_DISABLE_BULLET_COLLISION (1<<0)
#define FLAGS_48_DISABLE_PLAY_COLLISION (1<<1)
#define FLAGS_48_DISABLE_RENDER_COLLISION (1<<2)
#define FLAGS_48_OVERRIDE_PREFAB_PROBE_GRID_CAPTURE_OFFSET (1<<3)
#define FLAGS_48_PVS_ALWAYS_USE_LOD0 (1<<4)
#define FLAGS_48_PVS_ALWAYS_VISIBLE (1<<5)
#define FLAGS_48_PVS_DONT_USE_AS_AN_OCCLUDER (1<<6)
#define FLAGS_48_SUBTRACT_OVERRIDE_FROM_KIT (1<<7)
#define FLAGS_48_GENERATE_DECORATORS (1<<8)
#define FLAGS_48_IS_TRIGGER_VOLUME (1<<9)


// Field flags_49

#define FLAGS_49_DISABLE_BULLET_COLLISION (1<<0)
#define FLAGS_49_DISABLE_PLAY_COLLISION (1<<1)
#define FLAGS_49_DISABLE_RENDER_COLLISION (1<<2)
#define FLAGS_49_OVERRIDE_PREFAB_PROBE_GRID_CAPTURE_OFFSET (1<<3)
#define FLAGS_49_PVS_ALWAYS_USE_LOD0 (1<<4)
#define FLAGS_49_PVS_ALWAYS_VISIBLE (1<<5)
#define FLAGS_49_PVS_DONT_USE_AS_AN_OCCLUDER (1<<6)
#define FLAGS_49_SUBTRACT_OVERRIDE_FROM_KIT (1<<7)
#define FLAGS_49_GENERATE_DECORATORS (1<<8)
#define FLAGS_49_IS_TRIGGER_VOLUME (1<<9)


// Field hidden_sides

#define HIDDEN_SIDES_SIDE_0 (1<<0)
#define HIDDEN_SIDES_SIDE_1 (1<<1)
#define HIDDEN_SIDES_SIDE_2 (1<<2)
#define HIDDEN_SIDES_SIDE_3 (1<<3)
#define HIDDEN_SIDES_SIDE_4 (1<<4)
#define HIDDEN_SIDES_SIDE_5 (1<<5)
#define HIDDEN_SIDES_TOP_CAP (1<<6)
#define HIDDEN_SIDES_BOTTOM_CAP (1<<7)


// Field Attenuation_flags

#define ATTENUATION_FLAGS_SYNC_LIGHT_ENERGY_AND_NEAR_ATTENUATION (1<<0)
#define ATTENUATION_FLAGS_SYNC_LIGHT_ENERGY_AND_FAR_ATTENUATION (1<<1)


// Field flags_50

#define FLAGS_50_DONT_RENDER_SPLITSCREEN (1<<0)
#define FLAGS_50_RENDER_IN_MULTIPLAYER_OVERRIDE (1<<1)
#define FLAGS_50_ALWAYS_ON_FOR_WEAPON (1<<2)
#define FLAGS_50_INDUCES_TRANSLUCENCY_IN_SUBSURFACE_SCATTERING_MATERIALS (1<<3)
#define FLAGS_50_IGNORE_OPTIMIZATION_AND_FORCE_UPDATE_EVERY_FRAME (1<<4)
#define FLAGS_50_DISABLE_SHADOW_ON_PARTICLES (1<<5)


// Field Flags_43

#define FLAGS_43_ENABLE_TERRAIN_FOLLOWING (1<<0)
#define FLAGS_43_DISABLE_OCCLUSION (1<<1)


// Field Flags_44

#define FLAGS_44_ENABLE_INTENSITY_CORRECTION (1<<0)
#define FLAGS_44_CAPTURE_WITH_EFFECTS (1<<1)
#define FLAGS_44_AFFECTS_ADJACENT_BSPS (1<<2)
#define FLAGS_44_CAPTURE_DYNAMIC_OBJECTS (1<<3)


// Field Layer_Usage_Flags

#define LAYER_USAGE_FLAGS_HLOD_ROOT (1<<0)


// Field flags_51

#define FLAGS_51_SNAP_TO_WHITE_AT_START (1<<0)
#define FLAGS_51_GENERATE_NAVDATA_EVERYWHERE (1<<1)
#define FLAGS_51_SEED_NAVMESH_WITH_RAYCASTS_FROM_ABOVE (1<<2)
#define FLAGS_51_DO_NOT_STRIP_UNCONNECTED_NAV_MESH_FACES (1<<3)
#define FLAGS_51_MAP_VARIANT_LAYER (1<<4)
#define FLAGS_51_IS_BLUE_TEAM_MISSION (1<<5)
#define FLAGS_51_IS_DS_TAG (1<<6)
#define FLAGS_51_IS_BLUE_TEAM_MISSION_CRACKED_VISOR (1<<7)
#define FLAGS_51_USED_FOR_SPARTAN_RENDER (1<<8)
#define FLAGS_51_IS_EDITOR_FOLDER (1<<9)
#define FLAGS_51_IS_GRID_ENABLED (1<<10)
#define FLAGS_51_IS_PROCEDURALLY_GENERATED (1<<11)
#define FLAGS_51_EXCLUDE_FROM_DEFAULT_MAP_VARIANT (1<<12)
#define FLAGS_51_GENERATE_NAVDATA_FOR_CROUCHING_CHARACTERS (1<<13)
#define FLAGS_51_GENERATE_NAVDATA_ON_SMALLER_AREAS (1<<14)
#define FLAGS_51_LIMIT_FORGE_EDITING (1<<15)
#define FLAGS_51_ACOUSTICS_SET_OCCLUSION_TO_OBSTRUCTION (1<<16)
#define FLAGS_51_DO_NOT_GENERATE_ACOUSTICS_DATA_TAG (1<<17)


// Field runtime_trigger_volume_flags

#define RUNTIME_TRIGGER_VOLUME_FLAGS_HAS_HARD_SAFE_VOLUME (1<<0)
#define RUNTIME_TRIGGER_VOLUME_FLAGS_HAS_SOFT_SAFE_VOLUME (1<<1)


// Field flags_52

#define FLAGS_52_UNUSED_BIT (1<<0)
#define FLAGS_52_VISTA_BSP (1<<1)
#define FLAGS_52_ISOLATED_NAV_GENERATION (1<<2)
#define FLAGS_52_CUSTOM_GRAVITY_SCALE (1<<3)
#define FLAGS_52_DISABLE_STREAMING_SUBREGIONS (1<<4)
#define FLAGS_52_AUTOMATICALLY_GENERATED (1<<5)
#define FLAGS_52_HLOD_BSP (1<<6)
#define FLAGS_52_MAY_NOT_CONTAIN_TERRAIN (1<<7)
#define FLAGS_52_EXCLUDE_FROM_FAR_FIELD (1<<8)
#define FLAGS_52_IGNORE_BSP_IN_REGIONS (1<<9)
#define FLAGS_52_ISOLATED_ACOUSTICS_GENERATION (1<<10)
#define FLAGS_52_DISABLE_ACOUSTICS_GENERATION (1<<11)
#define FLAGS_52_FORGEABLE_BSP (1<<12)


// Field Layer_Usage_Flags_2

#define LAYER_USAGE_FLAGS_2_HLOD_ROOT (1<<0)


// Field flags_53

#define FLAGS_53_INTERAL_ZONE_SET (1<<0)
#define FLAGS_53_DISABLE_SKY_CLEARING (1<<1)
#define FLAGS_53_OVERRIDE_SKY_CLEAR_COLOR (1<<2)
#define FLAGS_53_USE_BSP_STREAMING (1<<3)
#define FLAGS_53_IGNORED_FOR_NAV_DATA_GENERATION (1<<4)
#define FLAGS_53_DISABLE_TERRAIN (1<<5)


// Field flags_54

#define FLAGS_54_ABOVE (1<<0)


// Field cull_flags

#define CULL_FLAGS_RENDER_ONLY (1<<0)
#define CULL_FLAGS_DOES_NOT_BLOCK_AOE (1<<1)
#define CULL_FLAGS_NON_PATHFINDABLE (1<<2)


// Field cull_flags_2

#define CULL_FLAGS_2_RENDER_ONLY (1<<0)
#define CULL_FLAGS_2_DOES_NOT_BLOCK_AOE (1<<1)
#define CULL_FLAGS_2_NON_PATHFINDABLE (1<<2)


// Field flags_55

#define FLAGS_55_DONT_KILL_IMMEDIATELY (1<<0)
#define FLAGS_55_ONLY_KILL_PLAYERS (1<<1)
#define FLAGS_55_DONT_KILL_IMMEDIATELY_AND_DONT_APPLY_TO_AIR_VEHICLES (1<<2)
#define FLAGS_55_TELEPORT_VEHICLES (1<<3)
#define FLAGS_55_PREVENT_SPAWN_IN_VEHICLE (1<<4)
#define FLAGS_55_ONLY_KILL_GAME_OBJECTS (1<<5)
#define FLAGS_55_DONT_APPLY_TO_AIR_VEHICLES (1<<6)


// Field flags_56

#define FLAGS_56_DONT_KILL_IMMEDIATELY (1<<0)
#define FLAGS_56_ONLY_KILL_PLAYERS (1<<1)
#define FLAGS_56_DONT_KILL_IMMEDIATELY_AND_DONT_APPLY_TO_AIR_VEHICLES (1<<2)
#define FLAGS_56_TELEPORT_VEHICLES (1<<3)
#define FLAGS_56_PREVENT_SPAWN_IN_VEHICLE (1<<4)
#define FLAGS_56_ONLY_KILL_GAME_OBJECTS (1<<5)
#define FLAGS_56_DONT_APPLY_TO_AIR_VEHICLES (1<<6)


// Field flags_57

#define FLAGS_57_TELEPORT_VEHICLES (1<<0)


// Field Flags_45

#define FLAGS_45_INITIALLY_ACTIVE (1<<0)
#define FLAGS_45_STREAM_WITH_BSPS (1<<1)
#define FLAGS_45_STREAM_ATOMICALLY (1<<2)
#define FLAGS_45_CONTAINS_UNSUPPORTED_OBJECTS (1<<3)
#define FLAGS_45_CONTAINS_ALWAYS_PLACED_OBJECTS (1<<4)
#define FLAGS_45_STREAM_WITH_TARGET_BSP (1<<5)


// Field Layer_Usage_Flags_3

#define LAYER_USAGE_FLAGS_3_HLOD_ROOT (1<<0)


// Field value_2

#define VALUE_2_VALUE (1<<0)


// Field dynamic_world_state_flags

#define DYNAMIC_WORLD_STATE_FLAGS_OVERRIDE_LENS_FLARE_GUID (1<<0)


// Field Dynamic_Wind

#define DYNAMIC_WIND_ENABLED (1<<0)


// Field Push_bending

#define PUSH_BENDING_ENABLED (1<<0)


// Field Decorators_Enabled_Low_Spec

#define DECORATORS_ENABLED_LOW_SPEC_NUM1_PLAYER (1<<0)
#define DECORATORS_ENABLED_LOW_SPEC_NUM2_PLAYERS (1<<1)
#define DECORATORS_ENABLED_LOW_SPEC_NUM3_PLAYERS (1<<2)
#define DECORATORS_ENABLED_LOW_SPEC_NUM4_PLAYERS (1<<3)


// Field Decorators_Enabled_Medium_Spec

#define DECORATORS_ENABLED_MEDIUM_SPEC_NUM1_PLAYER (1<<0)
#define DECORATORS_ENABLED_MEDIUM_SPEC_NUM2_PLAYERS (1<<1)
#define DECORATORS_ENABLED_MEDIUM_SPEC_NUM3_PLAYERS (1<<2)
#define DECORATORS_ENABLED_MEDIUM_SPEC_NUM4_PLAYERS (1<<3)


// Field Decorators_Enabled_High_Spec

#define DECORATORS_ENABLED_HIGH_SPEC_NUM1_PLAYER (1<<0)
#define DECORATORS_ENABLED_HIGH_SPEC_NUM2_PLAYERS (1<<1)
#define DECORATORS_ENABLED_HIGH_SPEC_NUM3_PLAYERS (1<<2)
#define DECORATORS_ENABLED_HIGH_SPEC_NUM4_PLAYERS (1<<3)


// Field Decorators_Enabled_Ultra_Spec

#define DECORATORS_ENABLED_ULTRA_SPEC_NUM1_PLAYER (1<<0)
#define DECORATORS_ENABLED_ULTRA_SPEC_NUM2_PLAYERS (1<<1)
#define DECORATORS_ENABLED_ULTRA_SPEC_NUM3_PLAYERS (1<<2)
#define DECORATORS_ENABLED_ULTRA_SPEC_NUM4_PLAYERS (1<<3)




// Enum Definitions

// Enum type

enum type_enum {
    TYPE_GENERIC
};

// Enum FilterGroup

enum FilterGroup_enum {
    FILTERGROUP_GENERAL,
    FILTERGROUP_ANIMATION,
    FILTERGROUP_AUDIO,
    FILTERGROUP_CINEMATICS,
    FILTERGROUP_CHARACTERS,
    FILTERGROUP_ENCOUNTER_DESIGN,
    FILTERGROUP_ENVIRONMENT,
    FILTERGROUP_FX,
    FILTERGROUP_LEVEL_DESIGN,
    FILTERGROUP_LIGHTING,
    FILTERGROUP_LOOKDEV,
    FILTERGROUP_SHADERS,
    FILTERGROUP_TEST,
    FILTERGROUP_UI,
    FILTERGROUP_VIGNETTES
};

// Enum bsp_policy

enum bsp_policy_enum {
    BSP_POLICY_DEFAULT,
    BSP_POLICY_ALWAYS_PLACED,
    BSP_POLICY_MANUAL_BSP_PLACEMENT
};

// Enum Nav_Mesh_Cutting

enum Nav_Mesh_Cutting_enum {
    NAV_MESH_CUTTING_DEFAULT,
    NAV_MESH_CUTTING_CUT,
    NAV_MESH_CUTTING_NOTCUT
};

// Enum source

enum source_enum {
    SOURCE_STRUCTURE,
    SOURCE_EDITOR,
    SOURCE_DYNAMIC,
    SOURCE_LEGACY,
    SOURCE_SKY,
    SOURCE_PARENT
};

// Enum ping_type

enum ping_type_enum {
    PING_TYPE_ACTIVE,
    PING_TYPE_PASSIVE,
    PING_TYPE_CUSTOM_ACTIVE,
    PING_TYPE_TARGET_MARKING
};

// Enum team_visibility

enum team_visibility_enum {
    TEAM_VISIBILITY_VISIBLE_TO_EVERYONE,
    TEAM_VISIBILITY_HIDDEN_FROM_ENEMIES,
    TEAM_VISIBILITY_HIDDEN_FROM_FRIENDS
};

// Enum priority

enum priority_enum {
    PRIORITY_CRITICAL,
    PRIORITY_HIGH,
    PRIORITY_NORMAL,
    PRIORITY_LOW
};

// Enum Pathfinding_policy

enum Pathfinding_policy_enum {
    PATHFINDING_POLICY_DEFAULT,
    PATHFINDING_POLICY_YES,
    PATHFINDING_POLICY_NO
};

// Enum game_engine_symmetric_placement

enum game_engine_symmetric_placement_enum {
    GAME_ENGINE_SYMMETRIC_PLACEMENT_IGNORE,
    GAME_ENGINE_SYMMETRIC_PLACEMENT_SYMMETRIC,
    GAME_ENGINE_SYMMETRIC_PLACEMENT_ASYMMETRIC
};

// Enum owner_team

enum owner_team_enum {
    OWNER_TEAM_DEFENDER,
    OWNER_TEAM_ATTACKER,
    OWNER_TEAM_THIRDPARTY,
    OWNER_TEAM_FOURTHPARTY,
    OWNER_TEAM_FIFTHPARTY,
    OWNER_TEAM_SIXTHPARTY,
    OWNER_TEAM_SEVENTHPARTY,
    OWNER_TEAM_EIGHTHPARTY,
    OWNER_TEAM_NEUTRAL
};

// Enum owner_squad

enum owner_squad_enum {
    OWNER_SQUAD_NONE,
    OWNER_SQUAD_ALPHA,
    OWNER_SQUAD_BRAVO,
    OWNER_SQUAD_CHARLIE,
    OWNER_SQUAD_DELTA,
    OWNER_SQUAD_ECHO,
    OWNER_SQUAD_FOXTROT,
    OWNER_SQUAD_GAMMA,
    OWNER_SQUAD_HOTEL
};

// Enum teleporter_channel

enum teleporter_channel_enum {
    TELEPORTER_CHANNEL_ALPHA,
    TELEPORTER_CHANNEL_BRAVO,
    TELEPORTER_CHANNEL_CHARLIE,
    TELEPORTER_CHANNEL_DELTA,
    TELEPORTER_CHANNEL_ECHO,
    TELEPORTER_CHANNEL_FOXTROT,
    TELEPORTER_CHANNEL_GOLF,
    TELEPORTER_CHANNEL_HOTEL,
    TELEPORTER_CHANNEL_INDIA,
    TELEPORTER_CHANNEL_JULIET,
    TELEPORTER_CHANNEL_KILO,
    TELEPORTER_CHANNEL_LIMA,
    TELEPORTER_CHANNEL_MIKE,
    TELEPORTER_CHANNEL_NOVEMBER,
    TELEPORTER_CHANNEL_OSCAR,
    TELEPORTER_CHANNEL_PAPA,
    TELEPORTER_CHANNEL_QUEBEC,
    TELEPORTER_CHANNEL_ROMEO,
    TELEPORTER_CHANNEL_SIERRA,
    TELEPORTER_CHANNEL_TANGO,
    TELEPORTER_CHANNEL_UNIFORM,
    TELEPORTER_CHANNEL_VICTOR,
    TELEPORTER_CHANNEL_WHISKEY,
    TELEPORTER_CHANNEL_XRAY,
    TELEPORTER_CHANNEL_YANKEE,
    TELEPORTER_CHANNEL_ZULU
};

// Enum trait_zone_channel

enum trait_zone_channel_enum {
    TRAIT_ZONE_CHANNEL_ALPHA,
    TRAIT_ZONE_CHANNEL_BRAVO,
    TRAIT_ZONE_CHANNEL_CHARLIE,
    TRAIT_ZONE_CHANNEL_DELTA,
    TRAIT_ZONE_CHANNEL_ECHO,
    TRAIT_ZONE_CHANNEL_FOXTROT,
    TRAIT_ZONE_CHANNEL_GOLF,
    TRAIT_ZONE_CHANNEL_HOTEL,
    TRAIT_ZONE_CHANNEL_INDIA,
    TRAIT_ZONE_CHANNEL_JULIET,
    TRAIT_ZONE_CHANNEL_KILO,
    TRAIT_ZONE_CHANNEL_LIMA,
    TRAIT_ZONE_CHANNEL_MIKE,
    TRAIT_ZONE_CHANNEL_NOVEMBER,
    TRAIT_ZONE_CHANNEL_OSCAR,
    TRAIT_ZONE_CHANNEL_PAPA,
    TRAIT_ZONE_CHANNEL_QUEBEC,
    TRAIT_ZONE_CHANNEL_ROMEO,
    TRAIT_ZONE_CHANNEL_SIERRA,
    TRAIT_ZONE_CHANNEL_TANGO,
    TRAIT_ZONE_CHANNEL_UNIFORM,
    TRAIT_ZONE_CHANNEL_VICTOR,
    TRAIT_ZONE_CHANNEL_WHISKEY,
    TRAIT_ZONE_CHANNEL_XRAY,
    TRAIT_ZONE_CHANNEL_YANKEE,
    TRAIT_ZONE_CHANNEL_ZULU
};

// Enum boundary_shape

enum boundary_shape_enum {
    BOUNDARY_SHAPE_UNUSED,
    BOUNDARY_SHAPE_SPHERE,
    BOUNDARY_SHAPE_CYLINDER,
    BOUNDARY_SHAPE_BOX
};

// Enum Does_accelerate_moves_due_to_explosions

enum Does_accelerate_moves_due_to_explosions_enum {
    DOES_ACCELERATE_MOVES_DUE_TO_EXPLOSIONS_NO_OVERRIDE,
    DOES_ACCELERATE_MOVES_DUE_TO_EXPLOSIONS_DOES_ACCELERATE,
    DOES_ACCELERATE_MOVES_DUE_TO_EXPLOSIONS_DOES_NOT_ACCELERATE
};

// Enum allowed_players

enum allowed_players_enum {
    ALLOWED_PLAYERS_ANY,
    ALLOWED_PLAYERS_SPARTAN,
    ALLOWED_PLAYERS_ELITE
};

// Enum segment_type_x

enum segment_type_x_enum {
    SEGMENT_TYPE_X_SPLINE,
    SEGMENT_TYPE_X_LINEAR,
    SEGMENT_TYPE_X_STEPPED,
    SEGMENT_TYPE_X_STEPPEDNEXT
};

// Enum segment_type_y

enum segment_type_y_enum {
    SEGMENT_TYPE_Y_SPLINE,
    SEGMENT_TYPE_Y_LINEAR,
    SEGMENT_TYPE_Y_STEPPED,
    SEGMENT_TYPE_Y_STEPPEDNEXT
};

// Enum segment_type_z

enum segment_type_z_enum {
    SEGMENT_TYPE_Z_SPLINE,
    SEGMENT_TYPE_Z_LINEAR,
    SEGMENT_TYPE_Z_STEPPED,
    SEGMENT_TYPE_Z_STEPPEDNEXT
};

// Enum tangent_mode_x

enum tangent_mode_x_enum {
    TANGENT_MODE_X_AUTOSTRAIGHT,
    TANGENT_MODE_X_USERSTRAIGHT,
    TANGENT_MODE_X_USERBROKEN
};

// Enum tangent_mode_y

enum tangent_mode_y_enum {
    TANGENT_MODE_Y_AUTOSTRAIGHT,
    TANGENT_MODE_Y_USERSTRAIGHT,
    TANGENT_MODE_Y_USERBROKEN
};

// Enum tangent_mode_z

enum tangent_mode_z_enum {
    TANGENT_MODE_Z_AUTOSTRAIGHT,
    TANGENT_MODE_Z_USERSTRAIGHT,
    TANGENT_MODE_Z_USERBROKEN
};

// Enum initial_team

enum initial_team_enum {
    INITIAL_TEAM_DEFENDER,
    INITIAL_TEAM_ATTACKER,
    INITIAL_TEAM_THIRDPARTY,
    INITIAL_TEAM_FOURTHPARTY,
    INITIAL_TEAM_FIFTHPARTY,
    INITIAL_TEAM_SIXTHPARTY,
    INITIAL_TEAM_SEVENTHPARTY,
    INITIAL_TEAM_EIGHTHPARTY,
    INITIAL_TEAM_NEUTRAL
};

// Enum Maximum_LOD

enum Maximum_LOD_enum {
    MAXIMUM_LOD_LOD0,
    MAXIMUM_LOD_LOD1,
    MAXIMUM_LOD_LOD2,
    MAXIMUM_LOD_LOD3,
    MAXIMUM_LOD_LOD4,
    MAXIMUM_LOD_LOD5,
    MAXIMUM_LOD_LOD6,
    MAXIMUM_LOD_LOD7,
    MAXIMUM_LOD_LOD8,
    MAXIMUM_LOD_LOD9,
    MAXIMUM_LOD_LOD10,
    MAXIMUM_LOD_LOD11,
    MAXIMUM_LOD_LOD12,
    MAXIMUM_LOD_LOD13,
    MAXIMUM_LOD_LOD14,
    MAXIMUM_LOD_LOD15,
    MAXIMUM_LOD_USE_DISTANCE
};

// Enum Use_Visibility

enum Use_Visibility_enum {
    USE_VISIBILITY_USE_VISIBILITY,
    USE_VISIBILITY_DO_NOT_USE_VISIBILITY
};

// Enum Volume_Inclusion_Policy

enum Volume_Inclusion_Policy_enum {
    VOLUME_INCLUSION_POLICY_INCLUDE_GEO_AND_CHILD_HLODS,
    VOLUME_INCLUSION_POLICY_INCLUDE_ONLY_CHILD_GEO_NO_HLODS,
    VOLUME_INCLUSION_POLICY_INCLUDE_ONLY_CHILD_HLODS_NO_GEO,
    VOLUME_INCLUSION_POLICY_DISABLED
};

// Enum Noise_Distribution

enum Noise_Distribution_enum {
    NOISE_DISTRIBUTION_LINEAR,
    NOISE_DISTRIBUTION_EXPONENTIAL,
    NOISE_DISTRIBUTION_POLYNOMIAL
};

// Enum Fortification_Intensity

enum Fortification_Intensity_enum {
    FORTIFICATION_INTENSITY_NONE,
    FORTIFICATION_INTENSITY_LOW,
    FORTIFICATION_INTENSITY_MEDIUM,
    FORTIFICATION_INTENSITY_HIGH
};

// Enum Actor_Type

enum Actor_Type_enum {
    ACTOR_TYPE_NONE,
    ACTOR_TYPE_PLAYER,
    ACTOR_TYPE_MARINE,
    ACTOR_TYPE_CREW,
    ACTOR_TYPE_SPARTAN,
    ACTOR_TYPE_ELITE,
    ACTOR_TYPE_JACKAL,
    ACTOR_TYPE_JACKAL_SNIPER,
    ACTOR_TYPE_GRUNT,
    ACTOR_TYPE_HUNTER,
    ACTOR_TYPE_PROPHET,
    ACTOR_TYPE_BUGGER,
    ACTOR_TYPE_SCARAB,
    ACTOR_TYPE_ENGINEER,
    ACTOR_TYPE_SKIRMISHER,
    ACTOR_TYPE_BISHOP,
    ACTOR_TYPE_KNIGHT,
    ACTOR_TYPE_PAWN,
    ACTOR_TYPE_CAVALIER,
    ACTOR_TYPE_PACKMASTER,
    ACTOR_TYPE_SOLDIER,
    ACTOR_TYPE_SOLDIER_SNIPER,
    ACTOR_TYPE_SOLDIER_OFFICER,
    ACTOR_TYPE_ROOK,
    ACTOR_TYPE_SENTINEL,
    ACTOR_TYPE_BRUTE,
    ACTOR_TYPE_HOVERER,
    ACTOR_TYPE_CRUSHER,
    ACTOR_TYPE_MULE,
    ACTOR_TYPE_MOUNTED_WEAPON,
    ACTOR_TYPE_OCTOPUS,
    ACTOR_TYPE_WILDLIFE
};

// Enum Navigation_Type

enum Navigation_Type_enum {
    NAVIGATION_TYPE_ALL,
    NAVIGATION_TYPE_ON_FOOT,
    NAVIGATION_TYPE_VEHICLE
};

// Enum Character_Filter_Type

enum Character_Filter_Type_enum {
    CHARACTER_FILTER_TYPE_NONE,
    CHARACTER_FILTER_TYPE_MARINE,
    CHARACTER_FILTER_TYPE_HOVERING,
    CHARACTER_FILTER_TYPE_BY_AI_SIZE
};

// Enum AI_Size

enum AI_Size_enum {
    AI_SIZE_DEFAULT,
    AI_SIZE_TINY,
    AI_SIZE_SMALL,
    AI_SIZE_MEDIUM,
    AI_SIZE_LARGE,
    AI_SIZE_IMMOBILE
};

// Enum Volume_Precombat_Type

enum Volume_Precombat_Type_enum {
    VOLUME_PRECOMBAT_TYPE_LOOKOUT,
    VOLUME_PRECOMBAT_TYPE_SENTRY,
    VOLUME_PRECOMBAT_TYPE_RECREATION,
    VOLUME_PRECOMBAT_TYPE_VEHICLE
};

// Enum Point_Type

enum Point_Type_enum {
    POINT_TYPE_DEFEND,
    POINT_TYPE_PATROL,
    POINT_TYPE_ACTION,
    POINT_TYPE_RALLY_POINT,
    POINT_TYPE_BOTEXPLORE,
    POINT_TYPE_BOTHEALTHSTATION,
    POINT_TYPE_SQUAD_FALLBACK_TETHER_POINT,
    POINT_TYPE_PLAYER_OBJECTIVE,
    POINT_TYPE_SEARCH,
    POINT_TYPE_BOTHIDE
};

// Enum Point_Precombat_Type

enum Point_Precombat_Type_enum {
    POINT_PRECOMBAT_TYPE_LOOKOUT,
    POINT_PRECOMBAT_TYPE_SENTRY,
    POINT_PRECOMBAT_TYPE_RECREATION,
    POINT_PRECOMBAT_TYPE_VEHICLE
};

// Enum Patrol_Mode

enum Patrol_Mode_enum {
    PATROL_MODE_PING_PONG,
    PATROL_MODE_LOOP,
    PATROL_MODE_RANDOM
};

// Enum Objective_Type

enum Objective_Type_enum {
    OBJECTIVE_TYPE_ATTACK,
    OBJECTIVE_TYPE_INTERACT
};

// Enum Base_Relevance

enum Base_Relevance_enum {
    BASE_RELEVANCE_LOW,
    BASE_RELEVANCE_HIGH
};

// Enum Decorator_Type

enum Decorator_Type_enum {
    DECORATOR_TYPE_ASSIGNMENT_LIMIT,
    DECORATOR_TYPE_BODY_COUNT,
    DECORATOR_TYPE_COMBAT_STATUS_FILTER,
    DECORATOR_TYPE_KEYWORD_FILTER,
    DECORATOR_TYPE_LIVING_COUNT,
    DECORATOR_TYPE_VEHICLE_TYPE_FILTER,
    DECORATOR_TYPE_PLAYER_TRIGGER_VOLUME,
    DECORATOR_TYPE_SCRIPT_TRIGGER,
    DECORATOR_TYPE_MIN_RELEVANCE
};

// Enum Assignment_Limit_Compare_Condition

enum Assignment_Limit_Compare_Condition_enum {
    ASSIGNMENT_LIMIT_COMPARE_CONDITION_LESS_THAN,
    ASSIGNMENT_LIMIT_COMPARE_CONDITION_LESS_THAN_EQUALS,
    ASSIGNMENT_LIMIT_COMPARE_CONDITION_GREATER_THAN,
    ASSIGNMENT_LIMIT_COMPARE_CONDITION_GREATER_THAN_EQUALS,
    ASSIGNMENT_LIMIT_COMPARE_CONDITION_EQUAL,
    ASSIGNMENT_LIMIT_COMPARE_CONDITION_NOT_EQUAL
};

// Enum Combat_Filter_Compare_Condition

enum Combat_Filter_Compare_Condition_enum {
    COMBAT_FILTER_COMPARE_CONDITION_LESS_THAN,
    COMBAT_FILTER_COMPARE_CONDITION_LESS_THAN_EQUALS,
    COMBAT_FILTER_COMPARE_CONDITION_GREATER_THAN,
    COMBAT_FILTER_COMPARE_CONDITION_GREATER_THAN_EQUALS,
    COMBAT_FILTER_COMPARE_CONDITION_EQUAL,
    COMBAT_FILTER_COMPARE_CONDITION_NOT_EQUAL
};

// Enum Combat_Status

enum Combat_Status_enum {
    COMBAT_STATUS_ASLEEP,
    COMBAT_STATUS_IDLE,
    COMBAT_STATUS_ALERT,
    COMBAT_STATUS_UNINSPECTED_ORPHAN,
    COMBAT_STATUS_ACTIVE,
    COMBAT_STATUS_DEFINITE_ORPHAN,
    COMBAT_STATUS_CERTAIN_ORPHAN,
    COMBAT_STATUS_VISIBLE_ENEMY,
    COMBAT_STATUS_CLEAR_ENEMY_LOS,
    COMBAT_STATUS_DANGEROUS_ENEMY
};

// Enum Min_Relevance

enum Min_Relevance_enum {
    MIN_RELEVANCE_LOW,
    MIN_RELEVANCE_HIGH
};

// Enum Follow_Type

enum Follow_Type_enum {
    FOLLOW_TYPE_NONE,
    FOLLOW_TYPE_FIRST_PLAYER
};

// Enum Node_Type

enum Node_Type_enum {
    NODE_TYPE_ROOT,
    NODE_TYPE_COMPOSITE,
    NODE_TYPE_DECORATOR
};

// Enum Composite_Type

enum Composite_Type_enum {
    COMPOSITE_TYPE_SELECTOR,
    COMPOSITE_TYPE_SEQUENCE,
    COMPOSITE_TYPE_BOOL_CONDITION,
    COMPOSITE_TYPE_PRIORITY_SORTER
};

// Enum Squad_Combat_Tether_Type

enum Squad_Combat_Tether_Type_enum {
    SQUAD_COMBAT_TETHER_TYPE_GROUND,
    SQUAD_COMBAT_TETHER_TYPE_AIR
};

// Enum Spawn_Method

enum Spawn_Method_enum {
    SPAWN_METHOD_DEFAULT,
    SPAWN_METHOD_AIRDROP,
    SPAWN_METHOD_LIMBO,
    SPAWN_METHOD_DROPPOD
};

// Enum Spawn_Orientation

enum Spawn_Orientation_enum {
    SPAWN_ORIENTATION_SPAWNER,
    SPAWN_ORIENTATION_RANDOM
};

// Enum Is_Initially_Placed

enum Is_Initially_Placed_enum {
    IS_INITIALLY_PLACED_IS_PLACED,
    IS_INITIALLY_PLACED_NOT_PLACED
};

// Enum Passenger_Seat_Preference

enum Passenger_Seat_Preference_enum {
    PASSENGER_SEAT_PREFERENCE_LEFT,
    PASSENGER_SEAT_PREFERENCE_RIGHT,
    PASSENGER_SEAT_PREFERENCE_BOTH,
    PASSENGER_SEAT_PREFERENCE_CENTER
};

// Enum Travel_Type

enum Travel_Type_enum {
    TRAVEL_TYPE_IMMEDIATE,
    TRAVEL_TYPE_FAST,
    TRAVEL_TYPE_CUSTOM
};

// Enum Transition_Type

enum Transition_Type_enum {
    TRANSITION_TYPE_NONE,
    TRANSITION_TYPE_WARP,
    TRANSITION_TYPE_CLOAK
};

// Enum Flight_Path_Spline_Type

enum Flight_Path_Spline_Type_enum {
    FLIGHT_PATH_SPLINE_TYPE_SPLINE_KIT,
    FLIGHT_PATH_SPLINE_TYPE_SPLINE_IN_LEVEL,
    FLIGHT_PATH_SPLINE_TYPE_GLOBAL_DEFAULT_SPLINE_KIT
};

// Enum Initial_Combat_State

enum Initial_Combat_State_enum {
    INITIAL_COMBAT_STATE_IDLE,
    INITIAL_COMBAT_STATE_ALERT,
    INITIAL_COMBAT_STATE_ACTIVE
};

// Enum Reinforcement_Activation_Condition

enum Reinforcement_Activation_Condition_enum {
    REINFORCEMENT_ACTIVATION_CONDITION_SCRIPT_SIGNAL
};

// Enum Reinforcement_Point_Type

enum Reinforcement_Point_Type_enum {
    REINFORCEMENT_POINT_TYPE_WAVES
};

// Enum Reinforcement_Squad_Iteration_Style

enum Reinforcement_Squad_Iteration_Style_enum {
    REINFORCEMENT_SQUAD_ITERATION_STYLE_SEQUENCE
};

// Enum Reinforcement_Spawn_Point_Selection_Style

enum Reinforcement_Spawn_Point_Selection_Style_enum {
    REINFORCEMENT_SPAWN_POINT_SELECTION_STYLE_CLOSEST_TO_AVG_POSITION_PLAYERS
};

// Enum Region_Type

enum Region_Type_enum {
    REGION_TYPE_SUPPLYBLOCKER
};

// Enum Active

enum Active_enum {
    ACTIVE_INACTIVE,
    ACTIVE_ACTIVE
};

// Enum Activator_Type

enum Activator_Type_enum {
    ACTIVATOR_TYPE_PLAYER,
    ACTIVATOR_TYPE_CAMERA
};

// Enum Placement_Type

enum Placement_Type_enum {
    PLACEMENT_TYPE_OBJECT_REFERENCE,
    PLACEMENT_TYPE_PLAYER
};

// Enum Compare_Type

enum Compare_Type_enum {
    COMPARE_TYPE_LESS_THAN,
    COMPARE_TYPE_LESS_OR_EQUAL,
    COMPARE_TYPE_GREATER_THAN,
    COMPARE_TYPE_GREATER_OR_EQUAL,
    COMPARE_TYPE_EQUAL_TO,
    COMPARE_TYPE_NOT_EQUAL_TO
};

// Enum Curve_Type

enum Curve_Type_enum {
    CURVE_TYPE_NONE,
    CURVE_TYPE_LINEAR,
    CURVE_TYPE_ZERO,
    CURVE_TYPE_ONE,
    CURVE_TYPE_EASEINQUAD,
    CURVE_TYPE_EASEOUTQUAD,
    CURVE_TYPE_EASEINOUTQUAD,
    CURVE_TYPE_EASEINCUBIC,
    CURVE_TYPE_EASEOUTCUBIC,
    CURVE_TYPE_EASEINOUTCUBIC,
    CURVE_TYPE_EASEINQUART,
    CURVE_TYPE_EASEOUTQUART,
    CURVE_TYPE_EASEINOUTQUART,
    CURVE_TYPE_EASEINQUINT,
    CURVE_TYPE_EASEOUTQUINT,
    CURVE_TYPE_EASEINOUTQUINT,
    CURVE_TYPE_EASEINSINE,
    CURVE_TYPE_EASEOUTSINE,
    CURVE_TYPE_EASEINOUTSINE,
    CURVE_TYPE_EASEINEXPO,
    CURVE_TYPE_EASEOUTEXPO,
    CURVE_TYPE_EASEINOUTEXPO,
    CURVE_TYPE_EASEINCIRC,
    CURVE_TYPE_EASEOUTCIRC,
    CURVE_TYPE_EASEINOUTCIRC,
    CURVE_TYPE_EASEINOUTLIGHT,
    CURVE_TYPE_EASEINOUTHEAVY
};

// Enum Weapon_State

enum Weapon_State_enum {
    WEAPON_STATE_NONE,
    WEAPON_STATE_RAISED,
    WEAPON_STATE_LOWERED,
    WEAPON_STATE_RELAXED,
    WEAPON_STATE_PRECISION,
    WEAPON_STATE_STOWED
};

// Enum Change_Type

enum Change_Type_enum {
    CHANGE_TYPE_SET,
    CHANGE_TYPE_INCREMENT,
    CHANGE_TYPE_DECREMENT
};

// Enum Move_To_Slide_Curve

enum Move_To_Slide_Curve_enum {
    MOVE_TO_SLIDE_CURVE_NONE,
    MOVE_TO_SLIDE_CURVE_LINEAR,
    MOVE_TO_SLIDE_CURVE_ZERO,
    MOVE_TO_SLIDE_CURVE_ONE,
    MOVE_TO_SLIDE_CURVE_EASEINQUAD,
    MOVE_TO_SLIDE_CURVE_EASEOUTQUAD,
    MOVE_TO_SLIDE_CURVE_EASEINOUTQUAD,
    MOVE_TO_SLIDE_CURVE_EASEINCUBIC,
    MOVE_TO_SLIDE_CURVE_EASEOUTCUBIC,
    MOVE_TO_SLIDE_CURVE_EASEINOUTCUBIC,
    MOVE_TO_SLIDE_CURVE_EASEINQUART,
    MOVE_TO_SLIDE_CURVE_EASEOUTQUART,
    MOVE_TO_SLIDE_CURVE_EASEINOUTQUART,
    MOVE_TO_SLIDE_CURVE_EASEINQUINT,
    MOVE_TO_SLIDE_CURVE_EASEOUTQUINT,
    MOVE_TO_SLIDE_CURVE_EASEINOUTQUINT,
    MOVE_TO_SLIDE_CURVE_EASEINSINE,
    MOVE_TO_SLIDE_CURVE_EASEOUTSINE,
    MOVE_TO_SLIDE_CURVE_EASEINOUTSINE,
    MOVE_TO_SLIDE_CURVE_EASEINEXPO,
    MOVE_TO_SLIDE_CURVE_EASEOUTEXPO,
    MOVE_TO_SLIDE_CURVE_EASEINOUTEXPO,
    MOVE_TO_SLIDE_CURVE_EASEINCIRC,
    MOVE_TO_SLIDE_CURVE_EASEOUTCIRC,
    MOVE_TO_SLIDE_CURVE_EASEINOUTCIRC,
    MOVE_TO_SLIDE_CURVE_EASEINOUTLIGHT,
    MOVE_TO_SLIDE_CURVE_EASEINOUTHEAVY
};

// Enum Gaze_Blend_Curve

enum Gaze_Blend_Curve_enum {
    GAZE_BLEND_CURVE_NONE,
    GAZE_BLEND_CURVE_LINEAR,
    GAZE_BLEND_CURVE_ZERO,
    GAZE_BLEND_CURVE_ONE,
    GAZE_BLEND_CURVE_EASEINQUAD,
    GAZE_BLEND_CURVE_EASEOUTQUAD,
    GAZE_BLEND_CURVE_EASEINOUTQUAD,
    GAZE_BLEND_CURVE_EASEINCUBIC,
    GAZE_BLEND_CURVE_EASEOUTCUBIC,
    GAZE_BLEND_CURVE_EASEINOUTCUBIC,
    GAZE_BLEND_CURVE_EASEINQUART,
    GAZE_BLEND_CURVE_EASEOUTQUART,
    GAZE_BLEND_CURVE_EASEINOUTQUART,
    GAZE_BLEND_CURVE_EASEINQUINT,
    GAZE_BLEND_CURVE_EASEOUTQUINT,
    GAZE_BLEND_CURVE_EASEINOUTQUINT,
    GAZE_BLEND_CURVE_EASEINSINE,
    GAZE_BLEND_CURVE_EASEOUTSINE,
    GAZE_BLEND_CURVE_EASEINOUTSINE,
    GAZE_BLEND_CURVE_EASEINEXPO,
    GAZE_BLEND_CURVE_EASEOUTEXPO,
    GAZE_BLEND_CURVE_EASEINOUTEXPO,
    GAZE_BLEND_CURVE_EASEINCIRC,
    GAZE_BLEND_CURVE_EASEOUTCIRC,
    GAZE_BLEND_CURVE_EASEINOUTCIRC,
    GAZE_BLEND_CURVE_EASEINOUTLIGHT,
    GAZE_BLEND_CURVE_EASEINOUTHEAVY
};

// Enum behavior

enum behavior_enum {
    BEHAVIOR_NONE,
    BEHAVIOR_KILL_VOLUME,
    BEHAVIOR_SAFE_ZONE,
    BEHAVIOR_UNSAFE_SPAWN,
    BEHAVIOR_BEGIN_ZONE_SET,
    BEHAVIOR_COMMIT_ZONE_SET,
    BEHAVIOR_LOCATION,
    BEHAVIOR_OBJECT_KILL_VOLUME
};

// Enum environment_type

enum environment_type_enum {
    ENVIRONMENT_TYPE_USE_ENVIROMENT_TAG,
    ENVIRONMENT_TYPE_USE_PARENT_ZONE,
    ENVIRONMENT_TYPE_INTERIOR,
    ENVIRONMENT_TYPE_EXTERIOR
};

// Enum transmissivity_type

enum transmissivity_type_enum {
    TRANSMISSIVITY_TYPE_AUTO,
    TRANSMISSIVITY_TYPE_NORMAL,
    TRANSMISSIVITY_TYPE_LOW
};

// Enum team

enum team_enum {
    TEAM_DEFAULT,
    TEAM_PLAYER,
    TEAM_HUMAN,
    TEAM_COVENANT,
    TEAM_BRUTE,
    TEAM_MULE,
    TEAM_WILD_CAPTIVE,
    TEAM_WILD_FREE,
    TEAM_SPARE,
    TEAM_COVENANT_PLAYER,
    TEAM_FORERUNNER,
    TEAM_NEUTRAL
};

// Enum initial_movement_mode

enum initial_movement_mode_enum {
    INITIAL_MOVEMENT_MODE_DEFAULT,
    INITIAL_MOVEMENT_MODE_CLIMBING,
    INITIAL_MOVEMENT_MODE_FLYING
};

// Enum seat_type

enum seat_type_enum {
    SEAT_TYPE_DEFAULT,
    SEAT_TYPE_PASSENGER,
    SEAT_TYPE_GUNNER,
    SEAT_TYPE_DRIVER,
    SEAT_TYPE_SMALL_CARGO,
    SEAT_TYPE_LARGE_CARGO,
    SEAT_TYPE_NO_DRIVER,
    SEAT_TYPE_NO_VEHICLE
};

// Enum grenade_type

enum grenade_type_enum {
    GRENADE_TYPE_NONE,
    GRENADE_TYPE_FRAGMENTATION_GRENADE,
    GRENADE_TYPE_PLASMA_GRENADE,
    GRENADE_TYPE_LIGHTNING_GRENADE,
    GRENADE_TYPE_SPIKE_GRENADE,
    GRENADE_TYPE_SAPPER_GRENADE,
    GRENADE_TYPE_STASIS_GRENADE
};

// Enum major_upgrade

enum major_upgrade_enum {
    MAJOR_UPGRADE_NORMAL,
    MAJOR_UPGRADE_FEW,
    MAJOR_UPGRADE_MANY,
    MAJOR_UPGRADE_NONE,
    MAJOR_UPGRADE_ALL
};

// Enum link_type

enum link_type_enum {
    LINK_TYPE_JUMP_LINK,
    LINK_TYPE_FORCE_WALK_LINK,
    LINK_TYPE_FORCE_MOVEMENT_LINK,
    LINK_TYPE_VEHICLE_LINK,
    LINK_TYPE_CROUCH_LINK
};

// Enum force_jump_height

enum force_jump_height_enum {
    FORCE_JUMP_HEIGHT_NONE,
    FORCE_JUMP_HEIGHT_VERY_SHORT,
    FORCE_JUMP_HEIGHT_SHORT,
    FORCE_JUMP_HEIGHT_MEDIUM_SHORT,
    FORCE_JUMP_HEIGHT_MEDIUM_LONG,
    FORCE_JUMP_HEIGHT_LONG,
    FORCE_JUMP_HEIGHT_VERY_LONG,
    FORCE_JUMP_HEIGHT_INFINITE
};

// Enum Distribution_Type

enum Distribution_Type_enum {
    DISTRIBUTION_TYPE_NONE,
    DISTRIBUTION_TYPE_NEAR_AREA,
    DISTRIBUTION_TYPE_IN_AREA,
    DISTRIBUTION_TYPE_ALWAYS,
    DISTRIBUTION_TYPE_RADIUS
};

// Enum Combat_Effect

enum Combat_Effect_enum {
    COMBAT_EFFECT_NONE,
    COMBAT_EFFECT_PREFER,
    COMBAT_EFFECT_AVOID,
    COMBAT_EFFECT_STAGING,
    COMBAT_EFFECT_FLEE,
    COMBAT_EFFECT_ROLE___SNIPER,
    COMBAT_EFFECT_ROLE___SUPPRESS,
    COMBAT_EFFECT_ROLE___CQB
};

// Enum Opportunity_Type

enum Opportunity_Type_enum {
    OPPORTUNITY_TYPE_POINT,
    OPPORTUNITY_TYPE_SECTOR
};

// Enum justification

enum justification_enum {
    JUSTIFICATION_LEFT,
    JUSTIFICATION_RIGHT,
    JUSTIFICATION_CENTER
};

// Enum vertical_justification

enum vertical_justification_enum {
    VERTICAL_JUSTIFICATION_DEFAULT,
    VERTICAL_JUSTIFICATION_TOP,
    VERTICAL_JUSTIFICATION_CENTER,
    VERTICAL_JUSTIFICATION_BOTTOM
};

// Enum font

enum font_enum {
    FONT_TERMINAL_FONT,
    FONT_SUBTITLE_FONT,
    FONT_SUBTITLE_SMALL_FONT,
    FONT_SUBTITLE_LARGE_FONT,
    FONT_SUBTITLE_4K_SMALL_FONT,
    FONT_SUBTITLE_4K_MEDIUM_FONT,
    FONT_SUBTITLE_4K_LARGE_FONT
};

// Enum Destination_System_Type

enum Destination_System_Type_enum {
    DESTINATION_SYSTEM_TYPE_INDEPENDANT_DESTINATIONS,
    DESTINATION_SYSTEM_TYPE_SINGLE_PATH
};

// Enum Initial_Behavior

enum Initial_Behavior_enum {
    INITIAL_BEHAVIOR_NONE,
    INITIAL_BEHAVIOR_PERCHING,
    INITIAL_BEHAVIOR_CIRCLING,
    INITIAL_BEHAVIOR_TRAVELING,
    INITIAL_BEHAVIOR_WANDERING,
    INITIAL_BEHAVIOR_REACTION,
    INITIAL_BEHAVIOR_MOVE_AWAY_HELPER
};

// Enum Second_Behavior

enum Second_Behavior_enum {
    SECOND_BEHAVIOR_NONE,
    SECOND_BEHAVIOR_PERCHING,
    SECOND_BEHAVIOR_CIRCLING,
    SECOND_BEHAVIOR_TRAVELING,
    SECOND_BEHAVIOR_WANDERING,
    SECOND_BEHAVIOR_REACTION,
    SECOND_BEHAVIOR_MOVE_AWAY_HELPER
};

// Enum Reaction_Behavior

enum Reaction_Behavior_enum {
    REACTION_BEHAVIOR_NONE,
    REACTION_BEHAVIOR_AFRAID,
    REACTION_BEHAVIOR_EVASION,
    REACTION_BEHAVIOR_HIDE
};

// Enum Reaction_Navigation_Behavior

enum Reaction_Navigation_Behavior_enum {
    REACTION_NAVIGATION_BEHAVIOR_NONE,
    REACTION_NAVIGATION_BEHAVIOR_PERCHING,
    REACTION_NAVIGATION_BEHAVIOR_CIRCLING,
    REACTION_NAVIGATION_BEHAVIOR_TRAVELING,
    REACTION_NAVIGATION_BEHAVIOR_WANDERING,
    REACTION_NAVIGATION_BEHAVIOR_REACTION,
    REACTION_NAVIGATION_BEHAVIOR_MOVE_AWAY_HELPER
};

// Enum Second_Reaction_Behavior

enum Second_Reaction_Behavior_enum {
    SECOND_REACTION_BEHAVIOR_NONE,
    SECOND_REACTION_BEHAVIOR_AFRAID,
    SECOND_REACTION_BEHAVIOR_EVASION,
    SECOND_REACTION_BEHAVIOR_HIDE
};

// Enum Second_Reaction_Navigation_Behavior

enum Second_Reaction_Navigation_Behavior_enum {
    SECOND_REACTION_NAVIGATION_BEHAVIOR_NONE,
    SECOND_REACTION_NAVIGATION_BEHAVIOR_PERCHING,
    SECOND_REACTION_NAVIGATION_BEHAVIOR_CIRCLING,
    SECOND_REACTION_NAVIGATION_BEHAVIOR_TRAVELING,
    SECOND_REACTION_NAVIGATION_BEHAVIOR_WANDERING,
    SECOND_REACTION_NAVIGATION_BEHAVIOR_REACTION,
    SECOND_REACTION_NAVIGATION_BEHAVIOR_MOVE_AWAY_HELPER
};

// Enum Despawn_Reaction_Behavior

enum Despawn_Reaction_Behavior_enum {
    DESPAWN_REACTION_BEHAVIOR_NONE,
    DESPAWN_REACTION_BEHAVIOR_AFRAID,
    DESPAWN_REACTION_BEHAVIOR_EVASION,
    DESPAWN_REACTION_BEHAVIOR_HIDE
};

// Enum Despawn_Reaction_Navigation_Behavior

enum Despawn_Reaction_Navigation_Behavior_enum {
    DESPAWN_REACTION_NAVIGATION_BEHAVIOR_NONE,
    DESPAWN_REACTION_NAVIGATION_BEHAVIOR_PERCHING,
    DESPAWN_REACTION_NAVIGATION_BEHAVIOR_CIRCLING,
    DESPAWN_REACTION_NAVIGATION_BEHAVIOR_TRAVELING,
    DESPAWN_REACTION_NAVIGATION_BEHAVIOR_WANDERING,
    DESPAWN_REACTION_NAVIGATION_BEHAVIOR_REACTION,
    DESPAWN_REACTION_NAVIGATION_BEHAVIOR_MOVE_AWAY_HELPER
};

// Enum Circling_Direction

enum Circling_Direction_enum {
    CIRCLING_DIRECTION_CLOCKWISE,
    CIRCLING_DIRECTION_COUNTERCLOCKWISE,
    CIRCLING_DIRECTION_RANDOM
};

// Enum Spawn_Priority

enum Spawn_Priority_enum {
    SPAWN_PRIORITY_PROCEDURALLY_GENERATED,
    SPAWN_PRIORITY_REGULAR,
    SPAWN_PRIORITY_IMPORTANT,
    SPAWN_PRIORITY_CRITICAL,
    SPAWN_PRIORITY_REGULAR_DISTANT,
    SPAWN_PRIORITY_IMPORTANT_DISTANT
};

// Enum movement

enum movement_enum {
    MOVEMENT_RUN_ALERT,
    MOVEMENT_WALK_IDLE,
    MOVEMENT_CROUCH_ALERT
};

// Enum follow

enum follow_enum {
    FOLLOW_NONE,
    FOLLOW_PLAYER,
    FOLLOW_SQUAD
};

// Enum area_type

enum area_type_enum {
    AREA_TYPE_NORMAL,
    AREA_TYPE_SEARCH,
    AREA_TYPE_CORE
};

// Enum dialogue_type

enum dialogue_type_enum {
    DIALOGUE_TYPE_NONE,
    DIALOGUE_TYPE_ENEMY_IS_ADVANCING,
    DIALOGUE_TYPE_ENEMY_IS_CHARGING,
    DIALOGUE_TYPE_ENEMY_IS_FALLING_BACK,
    DIALOGUE_TYPE_ADVANCE,
    DIALOGUE_TYPE_CHARGE,
    DIALOGUE_TYPE_FALL_BACK,
    DIALOGUE_TYPE_MOVE_ON,
    DIALOGUE_TYPE_FOLLOW_PLAYER,
    DIALOGUE_TYPE_ARRIVING_INTO_COMBAT,
    DIALOGUE_TYPE_END_COMBAT,
    DIALOGUE_TYPE_INVESTIGATE,
    DIALOGUE_TYPE_SPREAD_OUT,
    DIALOGUE_TYPE_HOLD_POSITION,
    DIALOGUE_TYPE_FIND_COVER,
    DIALOGUE_TYPE_COVERING_FIRE
};

// Enum filter

enum filter_enum {
    FILTER_NONE,
    FILTER_FIRETEAM,
    FILTER_LEADER,
    FILTER_NO_LEADER,
    FILTER_ARBITER,
    FILTER_PLAYER_IN_MY_VEHICLE,
    FILTER_IN_COMBAT,
    FILTER_SIGHTED_PLAYER,
    FILTER_SIGHTED_ENEMY,
    FILTER_TARGET_DISENGAGED,
    FILTER_INFANTRY,
    FILTER_HAS_AN_ENGINEER,
    FILTER_STRENGTH_GT_025,
    FILTER_STRENGTH_GT_05,
    FILTER_STRENGTH_GT_075,
    FILTER_STRENGTH_LT_025,
    FILTER_STRENGTH_LT_05,
    FILTER_STRENGTH_LT_075,
    FILTER_HUMAN_TEAM,
    FILTER_COVENANT_TEAM,
    FILTER_MULE_TEAM,
    FILTER_FORERUNNER_TEAM,
    FILTER_BRUTE_TEAM,
    FILTER_ELITE,
    FILTER_JACKAL,
    FILTER_JACKAL_SNIPER,
    FILTER_GRUNT,
    FILTER_HUNTER,
    FILTER_MARINE,
    FILTER_BRUTE,
    FILTER_HOVERER,
    FILTER_CRUSHER,
    FILTER_BUGGER,
    FILTER_BISHOP,
    FILTER_KNIGHT,
    FILTER_PAWN,
    FILTER_CAVALIER,
    FILTER_PACKMASTER,
    FILTER_SOLDIER,
    FILTER_SOLDIER_SNIPER,
    FILTER_SOLDIER_OFFICER,
    FILTER_ROOK,
    FILTER_ENGINEER,
    FILTER_SKIRMISHER,
    FILTER_MULE,
    FILTER_SPARTAN,
    FILTER_SNIPER,
    FILTER_RIFLE,
    FILTER_SWORD,
    FILTER_HAMMER,
    FILTER_FIST,
    FILTER_MELEE,
    FILTER_VEHICLE,
    FILTER_SCORPION,
    FILTER_GHOST,
    FILTER_WARTHOG,
    FILTER_WRAITH,
    FILTER_PHANTOM,
    FILTER_TUNING_FORK,
    FILTER_FALCON,
    FILTER_SERAPH,
    FILTER_SABRE,
    FILTER_PELICAN,
    FILTER_BANSHEE,
    FILTER_MONGOOSE,
    FILTER_REVENANT,
    FILTER_SHADE_TURRET,
    FILTER_PHAETON
};

// Enum attitude

enum attitude_enum {
    ATTITUDE_NORMAL,
    ATTITUDE_DEFENSIVE,
    ATTITUDE_AGGRESSIVE,
    ATTITUDE_PLAYFIGHTING,
    ATTITUDE_PATROL,
    ATTITUDE_CHCKN_SHIT_RECON,
    ATTITUDE_SPREAD_OUT
};

// Enum Object_Resolution_Type

enum Object_Resolution_Type_enum {
    OBJECT_RESOLUTION_TYPE_INVALID,
    OBJECT_RESOLUTION_TYPE_REFERENCE,
    OBJECT_RESOLUTION_TYPE_NAME,
    OBJECT_RESOLUTION_TYPE_AI,
    OBJECT_RESOLUTION_TYPE_GLOBAL,
    OBJECT_RESOLUTION_TYPE_PUPPET,
    OBJECT_RESOLUTION_TYPE_POINT_SET,
    OBJECT_RESOLUTION_TYPE_FLAG
};

// Enum cinema_only

enum cinema_only_enum {
    CINEMA_ONLY_NO_OVERRIDE,
    CINEMA_ONLY_NO,
    CINEMA_ONLY_YES
};

// Enum exclude_from_cinema

enum exclude_from_cinema_enum {
    EXCLUDE_FROM_CINEMA_NO_OVERRIDE,
    EXCLUDE_FROM_CINEMA_NO,
    EXCLUDE_FROM_CINEMA_YES
};

// Enum remove_from_dynamic_shadow_map

enum remove_from_dynamic_shadow_map_enum {
    REMOVE_FROM_DYNAMIC_SHADOW_MAP_NO_OVERRIDE,
    REMOVE_FROM_DYNAMIC_SHADOW_MAP_NO,
    REMOVE_FROM_DYNAMIC_SHADOW_MAP_YES
};

// Enum exclude_from_intel_map

enum exclude_from_intel_map_enum {
    EXCLUDE_FROM_INTEL_MAP_NO_OVERRIDE,
    EXCLUDE_FROM_INTEL_MAP_NO,
    EXCLUDE_FROM_INTEL_MAP_YES
};

// Enum ignore_cubemap_volume

enum ignore_cubemap_volume_enum {
    IGNORE_CUBEMAP_VOLUME_NO_OVERRIDE,
    IGNORE_CUBEMAP_VOLUME_NO,
    IGNORE_CUBEMAP_VOLUME_YES
};

// Enum Exclude_from_broadphase_calculation

enum Exclude_from_broadphase_calculation_enum {
    EXCLUDE_FROM_BROADPHASE_CALCULATION_NO_OVERRIDE,
    EXCLUDE_FROM_BROADPHASE_CALCULATION_NO,
    EXCLUDE_FROM_BROADPHASE_CALCULATION_YES
};

// Enum lightmapping_policy

enum lightmapping_policy_enum {
    LIGHTMAPPING_POLICY_AUTOMATIC,
    LIGHTMAPPING_POLICY_PER_PIXEL,
    LIGHTMAPPING_POLICY_PER_VERTEX,
    LIGHTMAPPING_POLICY_SINGLE_PROBE,
    LIGHTMAPPING_POLICY_EXCLUDE,
    LIGHTMAPPING_POLICY_PER_PIXEL_AO,
    LIGHTMAPPING_POLICY_PER_VERTEX_AO,
    LIGHTMAPPING_POLICY_PROBE_GRID
};

// Enum collision_decals_policy

enum collision_decals_policy_enum {
    COLLISION_DECALS_POLICY_NO_OVERRIDE,
    COLLISION_DECALS_POLICY_FORCE_ALLOW_DECALS,
    COLLISION_DECALS_POLICY_FORCE_DO_NOT_ALLOW_DECALS
};

// Enum Trigger_Volume_Callback

enum Trigger_Volume_Callback_enum {
    TRIGGER_VOLUME_CALLBACK_NONE
};

// Enum Properties_Override_Source

enum Properties_Override_Source_enum {
    PROPERTIES_OVERRIDE_SOURCE_NONE,
    PROPERTIES_OVERRIDE_SOURCE_DYNAMIC_WORLD_STATE_SUN,
    PROPERTIES_OVERRIDE_SOURCE_DYNAMIC_WORLD_STATE_ATMOSPHERE,
    PROPERTIES_OVERRIDE_SOURCE_DYNAMIC_WORLD_STATE_SKY,
    PROPERTIES_OVERRIDE_SOURCE_DYNAMIC_WORLD_STATE_SUN_INTENSITY_ONLY
};

// Enum Output_Modifier

enum Output_Modifier_enum {
    OUTPUT_MODIFIER__,
    OUTPUT_MODIFIER_PLUS,
    OUTPUT_MODIFIER_TIMES
};

// Enum Cone_Projection_Shape

enum Cone_Projection_Shape_enum {
    CONE_PROJECTION_SHAPE_CONE,
    CONE_PROJECTION_SHAPE_FRUSTUM
};

// Enum Static_Shadows

enum Static_Shadows_enum {
    STATIC_SHADOWS_OFF,
    STATIC_SHADOWS_ON
};

// Enum Dynamic_Shadows

enum Dynamic_Shadows_enum {
    DYNAMIC_SHADOWS_OFF,
    DYNAMIC_SHADOWS_ON
};

// Enum Enable_Static_Shadow_Caching

enum Enable_Static_Shadow_Caching_enum {
    ENABLE_STATIC_SHADOW_CACHING_OFF,
    ENABLE_STATIC_SHADOW_CACHING_ON
};

// Enum Enable_Dynamic_Objects_Shadow_Caching

enum Enable_Dynamic_Objects_Shadow_Caching_enum {
    ENABLE_DYNAMIC_OBJECTS_SHADOW_CACHING_OFF,
    ENABLE_DYNAMIC_OBJECTS_SHADOW_CACHING_ON
};

// Enum Composer_Shadows

enum Composer_Shadows_enum {
    COMPOSER_SHADOWS_OFF,
    COMPOSER_SHADOWS_ON
};

// Enum Contact_Shadows_for_CVW

enum Contact_Shadows_for_CVW_enum {
    CONTACT_SHADOWS_FOR_CVW_OFF,
    CONTACT_SHADOWS_FOR_CVW_ON
};

// Enum Contact_Shadows_for_First_Person

enum Contact_Shadows_for_First_Person_enum {
    CONTACT_SHADOWS_FOR_FIRST_PERSON_OFF,
    CONTACT_SHADOWS_FOR_FIRST_PERSON_ON
};

// Enum Contact_Shadows_for_Environment

enum Contact_Shadows_for_Environment_enum {
    CONTACT_SHADOWS_FOR_ENVIRONMENT_OFF,
    CONTACT_SHADOWS_FOR_ENVIRONMENT_ON
};

// Enum Enable_light_OBB

enum Enable_light_OBB_enum {
    ENABLE_LIGHT_OBB_OFF,
    ENABLE_LIGHT_OBB_ON
};

// Enum Force_Forward_Lighting

enum Force_Forward_Lighting_enum {
    FORCE_FORWARD_LIGHTING_OFF,
    FORCE_FORWARD_LIGHTING_ON
};

// Enum Ignore_Dynamic_Objects

enum Ignore_Dynamic_Objects_enum {
    IGNORE_DYNAMIC_OBJECTS_OFF,
    IGNORE_DYNAMIC_OBJECTS_ON
};

// Enum Specular_Contribution

enum Specular_Contribution_enum {
    SPECULAR_CONTRIBUTION_OFF,
    SPECULAR_CONTRIBUTION_ON
};

// Enum Diffuse_Contribution

enum Diffuse_Contribution_enum {
    DIFFUSE_CONTRIBUTION_OFF,
    DIFFUSE_CONTRIBUTION_ON
};

// Enum Enable_Parallax_Correction

enum Enable_Parallax_Correction_enum {
    ENABLE_PARALLAX_CORRECTION_OFF,
    ENABLE_PARALLAX_CORRECTION_ON
};

// Enum Active_Volume

enum Active_Volume_enum {
    ACTIVE_VOLUME_OFF,
    ACTIVE_VOLUME_ON
};

// Enum Maximum_cubemap_size

enum Maximum_cubemap_size_enum {
    MAXIMUM_CUBEMAP_SIZE_128X128,
    MAXIMUM_CUBEMAP_SIZE_256X256,
    MAXIMUM_CUBEMAP_SIZE_512X512
};

// Enum Cubemap_Volume_Type

enum Cubemap_Volume_Type_enum {
    CUBEMAP_VOLUME_TYPE_PRISM,
    CUBEMAP_VOLUME_TYPE_SPHERE
};

// Enum Tintable

enum Tintable_enum {
    TINTABLE_OFF,
    TINTABLE_ON
};

// Enum Runtime_Force_Add_Inactive

enum Runtime_Force_Add_Inactive_enum {
    RUNTIME_FORCE_ADD_INACTIVE_OFF,
    RUNTIME_FORCE_ADD_INACTIVE_ON
};

// Enum mission

enum mission_enum {
    MISSION_HALSEY,
    MISSION_ASSAULT,
    MISSION_MERIDIAN,
    MISSION_MERIDIANHUB,
    MISSION_UNCONFIRMEDREPORTS,
    MISSION_EVACUATION,
    MISSION_BUILDER,
    MISSION_GROTTO,
    MISSION_SANGHELIOSHUB1,
    MISSION_PLATEAU,
    MISSION_SANGHELIOSHUB2,
    MISSION_TSUNAMISTATION,
    MISSION_ARRIVAL,
    MISSION_TRIALS,
    MISSION_SENTINELS
};



// Structs

struct decorator_placements{
    struct point3D position;
    uint8_t type_index;
    uint8_t motion_scale;
    uint8_t ground_tint;
    uint8_t flags_flags;
    realQuaternion rotation;
    float scale;
    struct point3D tint_color;
    struct point3D original_point;
    struct point3D original_normal;
    uint32_t extra;
    uint16_t placement_surface_albedo;
    uint16_t placement_surface_normal;
};


struct sets{
    struct tagReference decorator_asset;
    struct tagBlock<decorator_placements> decorator_placements_ent;
    struct tagReference owning_layer_default_bsp;
};


struct comments{
    struct point3D position;
    uint32_t enum_type;
    char name[32];
    char comment[256];
};


struct EditorMetadata{
    char folder_name[256];
    struct point3D local_space_pivot_point_position;
};


struct editor_annotations{
    string_id name;
    struct point3D Position;
    char Info[256];
    struct dataReference AdditionalInfo;
    char OptionalAnnotationID[32];
    uint16_t enum_FilterGroup;
    uint16_t generated_padc55c;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};


struct object_names{
    string_id name;
    uint16_t object_type;
    uint16_t scenario_datum_index;
    uint32_t runtimeObjectIndex;
};


struct bool_properties{
    char name[256];
    uint8_t Value;
};


struct numeric_properties{
    char name[256];
    float Value;
};


struct string_properties{
    char name[256];
    char Value[256];
};


struct tag_properties{
    char name[256];
    struct tagReference Value;
    string_id load_variant;
};


struct color_properties{
    char name[256];
    realARGBColor Value;
};


struct vector_properties{
    char name[256];
    struct vector3D Value;
};


struct references{
    struct tagReference structure_bsp;
};


struct Man_Cannon_Ballistic_Arc_Data{
    struct point3D Man_Cannon_End_Point;
    float Man_Cannon_Apex_Height;
    uint32_t Man_Cannon_Phantom_Index;
};


struct Spartan_Tracking{
    // EXPLANATION: Map_these_settings_to_a_ping_type
    uint8_t flags_flags_2;
    uint8_t enum_ping_type;
    uint8_t enum_team_visibility;
    // CUSTOM: Misc
    uint8_t enum_priority;
    // CUSTOM: unnamed_field_28
    string_id ping_group;
    // CUSTOM: Nav_Point
    string_id nav_point_screen;
    string_id nav_point_label;
    float nav_point_vertical_offset;
    // CUSTOM: unnamed_field_30
    // EXPLANATION: Range_Override
    float range;
    // CUSTOM: Effects
    struct tagReference ping_hit_instigator_effect;
    struct tagReference ping_hit_effect;
    struct tagReference outline_override;
    // CUSTOM: unnamed_field_32
};


struct associates{
    uint16_t flags_association_types;
    uint16_t generated_padee80;
    uint32_t target_index;
    string_id target_object_name;
    string_id target_marker_name;
    // CUSTOM: unnamed_field_35
    string_id source_marker_name;
};




struct spline{
    struct point3D position;
    realEulerAngle3D rotation;
    float scale;
};


struct SpawnPointProperties{
    uint8_t flags_Spawn_Point_Flags;
};


struct terminal_redeemable_objects{
    struct tagReference redeemable_object;
    uint32_t level_requirement;
};


struct multiplayer_data{
    // EXPLANATION: Multiplayer_Data
    string_id megalo_label;
    string_id megalo_label_2;
    string_id megalo_label_3;
    string_id megalo_label_4;
    uint8_t enum_game_engine_symmetric_placement;
    uint8_t enum_owner_team;
    uint8_t enum_owner_squad;
    uint8_t generated_pad2291;
    uint16_t flags_spawn_flags;
    uint8_t enum_teleporter_channel;
    uint8_t flags_teleporter_passability;
    uint8_t enum_trait_zone_channel;
    uint8_t generated_pad08b0;
    uint16_t generated_pad08b0_2;
    float trait_zone_seconds_to_apply;
    float phantomVelocityMultiplier;
    float phantomAccelerationMultiplier;
    float boundary_width_or_radius;
    float boundary_box_length;
    float boundary_positive_height;
    float boundary_negative_height;
    uint8_t enum_boundary_shape;
    uint8_t boundary_pad;
    uint16_t boundary_pad2;
    uint16_t initial_spawn_delay;
    uint16_t spawn_time;
    uint16_t abandonment_time;
    uint16_t generated_padbbfb;
    string_id location_name;
    struct tagBlock<spline> spline_ent;
    struct tagBlock<SpawnPointProperties> SpawnPointProperties_ent;
    float respawn_weight;
    struct warzone_objective_definition_membership{
        shortBlockIndex warzone_objective_definition;
        char warzone_objective_label[32];
    };
    struct warzone_objective_definition_membership warzone_objective_definition_membership_ent;
    uint8_t spawn_order;
    uint8_t flags_Multiplayer_Property_Flags;
    struct tagReference WeaponPad_object_to_spawn;
    struct tagReference WeaponPad_object_to_spawn_configuration;
    float WeaponPad_respawn_time;
    struct tagBlock<terminal_redeemable_objects> terminal_redeemable_objects_ent;
    uint8_t flags_MapZones;
    uint8_t flags_MapZoneConfigurations;
    uint16_t generated_pad3c72;
};


struct scenery{
    uint32_t name;
    string_id object_name;
    struct tagReference asset;
    struct object_data{
        // CUSTOM: unnamed_field_12
        uint32_t flags_placement_flags;
        struct point3D position;
        realEulerAngle3D rotation;
        float scale;
        float gravity_override;
        uint8_t flags_gravity_flags;
        uint8_t enum_bsp_policy;
        uint8_t flags_script_flags;
        uint8_t generated_pad1c32;
        struct scriptable_properties{
            struct tagBlock<bool_properties> bool_properties_ent;
            struct tagBlock<numeric_properties> numeric_properties_ent;
            struct tagBlock<string_properties> string_properties_ent;
            struct tagBlock<tag_properties> tag_properties_ent;
            struct tagBlock<color_properties> color_properties_ent;
            struct tagBlock<vector_properties> vector_properties_ent;
        };
        struct scriptable_properties scriptable_properties_ent;
        struct bsp_flags{
            struct tagBlock<references> references_ent;
            struct dataReference flags;
            uint32_t bsp_index;
        };
        struct bsp_flags bsp_flags_ent;
        uint16_t flags_transform_flags;
        uint8_t enum_Nav_Mesh_Cutting;
        uint8_t flags_Nav_Mesh_Flags;
        longBlockIndex editor_folder;
        struct object_id{
            uint32_t unique_id;
            uint16_t origin_bsp_index;
            uint8_t enum_type;
            uint8_t enum_source;
        };
        struct object_id object_id_ent;
        uint32_t runtimeObjectHandle;
        string_id module_id;
        struct parent_id{
            uint32_t parent_object;
            string_id parent_name;
            string_id parent_marker;
            // CUSTOM: unnamed_field_24
            string_id connection_marker;
        };
        struct parent_id parent_id_ent;
        string_id in_game_maps_material_id;
        float Directional_Acceleration_Mult_;
        struct tagReference Custom_Object_Lighting_Reference;
        struct tagBlock<Man_Cannon_Ballistic_Arc_Data> Man_Cannon_Ballistic_Arc_Data_ent;
        struct tagBlock<Spartan_Tracking> Spartan_Tracking_ent;
        uint8_t flags_Layer_flags;
        uint8_t generated_pad68e7;
        uint16_t generated_pad68e7_2;
        struct tagBlock<associates> associates_ent;
    };
    struct object_data object_data_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct permutation_data{
        string_id variant_name;
        uint8_t flags_active_change_colors;
        uint8_t generated_paddcc3;
        uint16_t generated_paddcc3_2;
        string_id Style_Id;
        rgbColor primary_color;
        rgbColor secondary_color;
        rgbColor tertiary_color;
        rgbColor quaternary_color;
    };
    struct permutation_data permutation_data_ent;
    struct scenery_data{
        // CUSTOM: unnamed_field_41
        uint16_t enum_Pathfinding_policy;
        uint16_t havok_mopp_index;
        shortBlockIndex ai_spawning_squad;
    };
    struct scenery_data scenery_data_ent;
    uint16_t generated_pad2908;
    struct tagBlock<multiplayer_data> multiplayer_data_ent;
};
































struct bipeds{
    uint32_t name;
    string_id object_name;
    struct tagReference asset;
    struct object_data{
        // CUSTOM: unnamed_field_50
        uint32_t flags_placement_flags_2;
        struct point3D position;
        realEulerAngle3D rotation;
        float scale;
        float gravity_override;
        uint8_t flags_gravity_flags_2;
        uint8_t enum_bsp_policy;
        uint8_t flags_script_flags_2;
        uint8_t generated_pad1c32;
        struct scriptable_properties{
            struct tagBlock<bool_properties> bool_properties_ent;
            struct tagBlock<numeric_properties> numeric_properties_ent;
            struct tagBlock<string_properties> string_properties_ent;
            struct tagBlock<tag_properties> tag_properties_ent;
            struct tagBlock<color_properties> color_properties_ent;
            struct tagBlock<vector_properties> vector_properties_ent;
        };
        struct scriptable_properties scriptable_properties_ent;
        struct bsp_flags{
            struct tagBlock<references> references_ent;
            struct dataReference flags;
            uint32_t bsp_index;
        };
        struct bsp_flags bsp_flags_ent;
        uint16_t flags_transform_flags_2;
        uint8_t enum_Nav_Mesh_Cutting;
        uint8_t flags_Nav_Mesh_Flags_2;
        longBlockIndex editor_folder;
        struct object_id{
            uint32_t unique_id;
            uint16_t origin_bsp_index;
            uint8_t enum_type;
            uint8_t enum_source;
        };
        struct object_id object_id_ent;
        uint32_t runtimeObjectHandle;
        string_id module_id;
        struct parent_id{
            uint32_t parent_object;
            string_id parent_name;
            string_id parent_marker;
            // CUSTOM: unnamed_field_62
            string_id connection_marker;
        };
        struct parent_id parent_id_ent;
        string_id in_game_maps_material_id;
        float Directional_Acceleration_Mult_;
        struct tagReference Custom_Object_Lighting_Reference;
        struct tagBlock<Man_Cannon_Ballistic_Arc_Data> Man_Cannon_Ballistic_Arc_Data_ent;
        struct tagBlock<Spartan_Tracking> Spartan_Tracking_ent;
        uint8_t flags_Layer_flags_2;
        uint8_t generated_pad68e7;
        uint16_t generated_pad68e7_2;
        struct tagBlock<associates> associates_ent;
    };
    struct object_data object_data_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct permutation_data{
        string_id variant_name;
        uint8_t flags_active_change_colors_2;
        uint8_t generated_paddcc3;
        uint16_t generated_paddcc3_2;
        string_id Style_Id;
        rgbColor primary_color;
        rgbColor secondary_color;
        rgbColor tertiary_color;
        rgbColor quaternary_color;
    };
    struct permutation_data permutation_data_ent;
    struct unit_data{
        float body_vitality;
        uint32_t flags_flags_4;
    };
    struct unit_data unit_data_ent;
    struct tagBlock<multiplayer_data> multiplayer_data_ent;
};
































struct vehicles{
    uint32_t name;
    string_id object_name;
    struct tagReference asset;
    struct object_data{
        // CUSTOM: unnamed_field_86
        uint32_t flags_placement_flags_3;
        struct point3D position;
        realEulerAngle3D rotation;
        float scale;
        float gravity_override;
        uint8_t flags_gravity_flags_3;
        uint8_t enum_bsp_policy;
        uint8_t flags_script_flags_3;
        uint8_t generated_pad1c32;
        struct scriptable_properties{
            struct tagBlock<bool_properties> bool_properties_ent;
            struct tagBlock<numeric_properties> numeric_properties_ent;
            struct tagBlock<string_properties> string_properties_ent;
            struct tagBlock<tag_properties> tag_properties_ent;
            struct tagBlock<color_properties> color_properties_ent;
            struct tagBlock<vector_properties> vector_properties_ent;
        };
        struct scriptable_properties scriptable_properties_ent;
        struct bsp_flags{
            struct tagBlock<references> references_ent;
            struct dataReference flags;
            uint32_t bsp_index;
        };
        struct bsp_flags bsp_flags_ent;
        uint16_t flags_transform_flags_3;
        uint8_t enum_Nav_Mesh_Cutting;
        uint8_t flags_Nav_Mesh_Flags_3;
        longBlockIndex editor_folder;
        struct object_id{
            uint32_t unique_id;
            uint16_t origin_bsp_index;
            uint8_t enum_type;
            uint8_t enum_source;
        };
        struct object_id object_id_ent;
        uint32_t runtimeObjectHandle;
        string_id module_id;
        struct parent_id{
            uint32_t parent_object;
            string_id parent_name;
            string_id parent_marker;
            // CUSTOM: unnamed_field_98
            string_id connection_marker;
        };
        struct parent_id parent_id_ent;
        string_id in_game_maps_material_id;
        float Directional_Acceleration_Mult_;
        struct tagReference Custom_Object_Lighting_Reference;
        struct tagBlock<Man_Cannon_Ballistic_Arc_Data> Man_Cannon_Ballistic_Arc_Data_ent;
        struct tagBlock<Spartan_Tracking> Spartan_Tracking_ent;
        uint8_t flags_Layer_flags_3;
        uint8_t generated_pad68e7;
        uint16_t generated_pad68e7_2;
        struct tagBlock<associates> associates_ent;
    };
    struct object_data object_data_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct permutation_data{
        string_id variant_name;
        uint8_t flags_active_change_colors_3;
        uint8_t generated_paddcc3;
        uint16_t generated_paddcc3_2;
        string_id Style_Id;
        rgbColor primary_color;
        rgbColor secondary_color;
        rgbColor tertiary_color;
        rgbColor quaternary_color;
    };
    struct permutation_data permutation_data_ent;
    struct unit_data{
        float body_vitality;
        uint32_t flags_flags_6;
    };
    struct unit_data unit_data_ent;
    struct tagBlock<multiplayer_data> multiplayer_data_ent;
    struct vehicle_data{
        uint16_t enum_Pathfinding_policy;
        uint16_t generated_pad3f53;
        struct tagReference configuration;
    };
    struct vehicle_data vehicle_data_ent;
};
































struct equipment{
    uint32_t name;
    string_id object_name;
    struct tagReference asset;
    struct object_data{
        // CUSTOM: unnamed_field_123
        uint32_t flags_placement_flags_4;
        struct point3D position;
        realEulerAngle3D rotation;
        float scale;
        float gravity_override;
        uint8_t flags_gravity_flags_4;
        uint8_t enum_bsp_policy;
        uint8_t flags_script_flags_4;
        uint8_t generated_pad1c32;
        struct scriptable_properties{
            struct tagBlock<bool_properties> bool_properties_ent;
            struct tagBlock<numeric_properties> numeric_properties_ent;
            struct tagBlock<string_properties> string_properties_ent;
            struct tagBlock<tag_properties> tag_properties_ent;
            struct tagBlock<color_properties> color_properties_ent;
            struct tagBlock<vector_properties> vector_properties_ent;
        };
        struct scriptable_properties scriptable_properties_ent;
        struct bsp_flags{
            struct tagBlock<references> references_ent;
            struct dataReference flags;
            uint32_t bsp_index;
        };
        struct bsp_flags bsp_flags_ent;
        uint16_t flags_transform_flags_4;
        uint8_t enum_Nav_Mesh_Cutting;
        uint8_t flags_Nav_Mesh_Flags_4;
        longBlockIndex editor_folder;
        struct object_id{
            uint32_t unique_id;
            uint16_t origin_bsp_index;
            uint8_t enum_type;
            uint8_t enum_source;
        };
        struct object_id object_id_ent;
        uint32_t runtimeObjectHandle;
        string_id module_id;
        struct parent_id{
            uint32_t parent_object;
            string_id parent_name;
            string_id parent_marker;
            // CUSTOM: unnamed_field_135
            string_id connection_marker;
        };
        struct parent_id parent_id_ent;
        string_id in_game_maps_material_id;
        float Directional_Acceleration_Mult_;
        struct tagReference Custom_Object_Lighting_Reference;
        struct tagBlock<Man_Cannon_Ballistic_Arc_Data> Man_Cannon_Ballistic_Arc_Data_ent;
        struct tagBlock<Spartan_Tracking> Spartan_Tracking_ent;
        uint8_t flags_Layer_flags_4;
        uint8_t generated_pad68e7;
        uint16_t generated_pad68e7_2;
        struct tagBlock<associates> associates_ent;
    };
    struct object_data object_data_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct equipment_data{
        uint32_t flags_equipment_flags;
    };
    struct equipment_data equipment_data_ent;
    struct tagBlock<multiplayer_data> multiplayer_data_ent;
};
































struct weapons{
    uint32_t name;
    string_id object_name;
    struct tagReference asset;
    struct object_data{
        // CUSTOM: unnamed_field_158
        uint32_t flags_placement_flags_5;
        struct point3D position;
        realEulerAngle3D rotation;
        float scale;
        float gravity_override;
        uint8_t flags_gravity_flags_5;
        uint8_t enum_bsp_policy;
        uint8_t flags_script_flags_5;
        uint8_t generated_pad1c32;
        struct scriptable_properties{
            struct tagBlock<bool_properties> bool_properties_ent;
            struct tagBlock<numeric_properties> numeric_properties_ent;
            struct tagBlock<string_properties> string_properties_ent;
            struct tagBlock<tag_properties> tag_properties_ent;
            struct tagBlock<color_properties> color_properties_ent;
            struct tagBlock<vector_properties> vector_properties_ent;
        };
        struct scriptable_properties scriptable_properties_ent;
        struct bsp_flags{
            struct tagBlock<references> references_ent;
            struct dataReference flags;
            uint32_t bsp_index;
        };
        struct bsp_flags bsp_flags_ent;
        uint16_t flags_transform_flags_5;
        uint8_t enum_Nav_Mesh_Cutting;
        uint8_t flags_Nav_Mesh_Flags_5;
        longBlockIndex editor_folder;
        struct object_id{
            uint32_t unique_id;
            uint16_t origin_bsp_index;
            uint8_t enum_type;
            uint8_t enum_source;
        };
        struct object_id object_id_ent;
        uint32_t runtimeObjectHandle;
        string_id module_id;
        struct parent_id{
            uint32_t parent_object;
            string_id parent_name;
            string_id parent_marker;
            // CUSTOM: unnamed_field_170
            string_id connection_marker;
        };
        struct parent_id parent_id_ent;
        string_id in_game_maps_material_id;
        float Directional_Acceleration_Mult_;
        struct tagReference Custom_Object_Lighting_Reference;
        struct tagBlock<Man_Cannon_Ballistic_Arc_Data> Man_Cannon_Ballistic_Arc_Data_ent;
        struct tagBlock<Spartan_Tracking> Spartan_Tracking_ent;
        uint8_t flags_Layer_flags_5;
        uint8_t generated_pad68e7;
        uint16_t generated_pad68e7_2;
        struct tagBlock<associates> associates_ent;
    };
    struct object_data object_data_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct permutation_data{
        string_id variant_name;
        uint8_t flags_active_change_colors_4;
        uint8_t generated_paddcc3;
        uint16_t generated_paddcc3_2;
        string_id Style_Id;
        rgbColor primary_color;
        rgbColor secondary_color;
        rgbColor tertiary_color;
        rgbColor quaternary_color;
    };
    struct permutation_data permutation_data_ent;
    struct weapon_data{
        uint16_t rounds_left;
        uint16_t rounds_loaded;
        uint16_t enum_Does_accelerate_moves_due_to_explosions;
        uint16_t generated_pad5bcf;
        struct tagReference configuration;
    };
    struct weapon_data weapon_data_ent;
    struct tagBlock<multiplayer_data> multiplayer_data_ent;
};




struct device_groups{
    char name[32];
    float initial_value;
    uint32_t flags_flags_9;
    string_id module_id;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    longBlockIndex editor_folder;
};
































struct machines{
    uint32_t name;
    string_id object_name;
    struct tagReference asset;
    struct object_data{
        // CUSTOM: unnamed_field_196
        uint32_t flags_placement_flags_6;
        struct point3D position;
        realEulerAngle3D rotation;
        float scale;
        float gravity_override;
        uint8_t flags_gravity_flags_6;
        uint8_t enum_bsp_policy;
        uint8_t flags_script_flags_6;
        uint8_t generated_pad1c32;
        struct scriptable_properties{
            struct tagBlock<bool_properties> bool_properties_ent;
            struct tagBlock<numeric_properties> numeric_properties_ent;
            struct tagBlock<string_properties> string_properties_ent;
            struct tagBlock<tag_properties> tag_properties_ent;
            struct tagBlock<color_properties> color_properties_ent;
            struct tagBlock<vector_properties> vector_properties_ent;
        };
        struct scriptable_properties scriptable_properties_ent;
        struct bsp_flags{
            struct tagBlock<references> references_ent;
            struct dataReference flags;
            uint32_t bsp_index;
        };
        struct bsp_flags bsp_flags_ent;
        uint16_t flags_transform_flags_6;
        uint8_t enum_Nav_Mesh_Cutting;
        uint8_t flags_Nav_Mesh_Flags_6;
        longBlockIndex editor_folder;
        struct object_id{
            uint32_t unique_id;
            uint16_t origin_bsp_index;
            uint8_t enum_type;
            uint8_t enum_source;
        };
        struct object_id object_id_ent;
        uint32_t runtimeObjectHandle;
        string_id module_id;
        struct parent_id{
            uint32_t parent_object;
            string_id parent_name;
            string_id parent_marker;
            // CUSTOM: unnamed_field_208
            string_id connection_marker;
        };
        struct parent_id parent_id_ent;
        string_id in_game_maps_material_id;
        float Directional_Acceleration_Mult_;
        struct tagReference Custom_Object_Lighting_Reference;
        struct tagBlock<Man_Cannon_Ballistic_Arc_Data> Man_Cannon_Ballistic_Arc_Data_ent;
        struct tagBlock<Spartan_Tracking> Spartan_Tracking_ent;
        uint8_t flags_Layer_flags_6;
        uint8_t generated_pad68e7;
        uint16_t generated_pad68e7_2;
        struct tagBlock<associates> associates_ent;
    };
    struct object_data object_data_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct permutation_data{
        string_id variant_name;
        uint8_t flags_active_change_colors_5;
        uint8_t generated_paddcc3;
        uint16_t generated_paddcc3_2;
        string_id Style_Id;
        rgbColor primary_color;
        rgbColor secondary_color;
        rgbColor tertiary_color;
        rgbColor quaternary_color;
    };
    struct permutation_data permutation_data_ent;
    struct device_data{
        shortBlockIndex power_group;
        shortBlockIndex position_group;
        float initial_animation_position;
        uint32_t flags_flags_11;
    };
    struct device_data device_data_ent;
    struct machine_data{
        uint32_t flags_flags_12;
        uint16_t enum_pathfinding_policy;
        uint16_t generated_padce30;
    };
    struct machine_data machine_data_ent;
    struct tagBlock<multiplayer_data> multiplayer_data_ent;
};
























struct terminals{
    uint32_t name;
    string_id object_name;
    struct tagReference asset;
    struct object_data{
        // CUSTOM: unnamed_field_233
        uint32_t flags_placement_flags_7;
        struct point3D position;
        realEulerAngle3D rotation;
        float scale;
        float gravity_override;
        uint8_t flags_gravity_flags_7;
        uint8_t enum_bsp_policy;
        uint8_t flags_script_flags_7;
        uint8_t generated_pad1c32;
        struct scriptable_properties{
            struct tagBlock<bool_properties> bool_properties_ent;
            struct tagBlock<numeric_properties> numeric_properties_ent;
            struct tagBlock<string_properties> string_properties_ent;
            struct tagBlock<tag_properties> tag_properties_ent;
            struct tagBlock<color_properties> color_properties_ent;
            struct tagBlock<vector_properties> vector_properties_ent;
        };
        struct scriptable_properties scriptable_properties_ent;
        struct bsp_flags{
            struct tagBlock<references> references_ent;
            struct dataReference flags;
            uint32_t bsp_index;
        };
        struct bsp_flags bsp_flags_ent;
        uint16_t flags_transform_flags_7;
        uint8_t enum_Nav_Mesh_Cutting;
        uint8_t flags_Nav_Mesh_Flags_7;
        longBlockIndex editor_folder;
        struct object_id{
            uint32_t unique_id;
            uint16_t origin_bsp_index;
            uint8_t enum_type;
            uint8_t enum_source;
        };
        struct object_id object_id_ent;
        uint32_t runtimeObjectHandle;
        string_id module_id;
        struct parent_id{
            uint32_t parent_object;
            string_id parent_name;
            string_id parent_marker;
            // CUSTOM: unnamed_field_245
            string_id connection_marker;
        };
        struct parent_id parent_id_ent;
        string_id in_game_maps_material_id;
        float Directional_Acceleration_Mult_;
        struct tagReference Custom_Object_Lighting_Reference;
        struct tagBlock<Man_Cannon_Ballistic_Arc_Data> Man_Cannon_Ballistic_Arc_Data_ent;
        struct tagBlock<Spartan_Tracking> Spartan_Tracking_ent;
        uint8_t flags_Layer_flags_7;
        uint8_t generated_pad68e7;
        uint16_t generated_pad68e7_2;
        struct tagBlock<associates> associates_ent;
    };
    struct object_data object_data_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct permutation_data{
        string_id variant_name;
        uint8_t flags_active_change_colors_6;
        uint8_t generated_paddcc3;
        uint16_t generated_paddcc3_2;
        string_id Style_Id;
        rgbColor primary_color;
        rgbColor secondary_color;
        rgbColor tertiary_color;
        rgbColor quaternary_color;
    };
    struct permutation_data permutation_data_ent;
    struct device_data{
        shortBlockIndex power_group;
        shortBlockIndex position_group;
        float initial_animation_position;
        uint32_t flags_flags_14;
    };
    struct device_data device_data_ent;
    struct terminal_data{
        uint32_t pah_pah;
    };
    struct terminal_data terminal_data_ent;
};
































struct controls{
    uint32_t name;
    string_id object_name;
    struct tagReference asset;
    struct object_data{
        // CUSTOM: unnamed_field_265
        uint32_t flags_placement_flags_8;
        struct point3D position;
        realEulerAngle3D rotation;
        float scale;
        float gravity_override;
        uint8_t flags_gravity_flags_8;
        uint8_t enum_bsp_policy;
        uint8_t flags_script_flags_8;
        uint8_t generated_pad1c32;
        struct scriptable_properties{
            struct tagBlock<bool_properties> bool_properties_ent;
            struct tagBlock<numeric_properties> numeric_properties_ent;
            struct tagBlock<string_properties> string_properties_ent;
            struct tagBlock<tag_properties> tag_properties_ent;
            struct tagBlock<color_properties> color_properties_ent;
            struct tagBlock<vector_properties> vector_properties_ent;
        };
        struct scriptable_properties scriptable_properties_ent;
        struct bsp_flags{
            struct tagBlock<references> references_ent;
            struct dataReference flags;
            uint32_t bsp_index;
        };
        struct bsp_flags bsp_flags_ent;
        uint16_t flags_transform_flags_8;
        uint8_t enum_Nav_Mesh_Cutting;
        uint8_t flags_Nav_Mesh_Flags_8;
        longBlockIndex editor_folder;
        struct object_id{
            uint32_t unique_id;
            uint16_t origin_bsp_index;
            uint8_t enum_type;
            uint8_t enum_source;
        };
        struct object_id object_id_ent;
        uint32_t runtimeObjectHandle;
        string_id module_id;
        struct parent_id{
            uint32_t parent_object;
            string_id parent_name;
            string_id parent_marker;
            // CUSTOM: unnamed_field_277
            string_id connection_marker;
        };
        struct parent_id parent_id_ent;
        string_id in_game_maps_material_id;
        float Directional_Acceleration_Mult_;
        struct tagReference Custom_Object_Lighting_Reference;
        struct tagBlock<Man_Cannon_Ballistic_Arc_Data> Man_Cannon_Ballistic_Arc_Data_ent;
        struct tagBlock<Spartan_Tracking> Spartan_Tracking_ent;
        uint8_t flags_Layer_flags_8;
        uint8_t generated_pad68e7;
        uint16_t generated_pad68e7_2;
        struct tagBlock<associates> associates_ent;
    };
    struct object_data object_data_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct permutation_data{
        string_id variant_name;
        uint8_t flags_active_change_colors_7;
        uint8_t generated_paddcc3;
        uint16_t generated_paddcc3_2;
        string_id Style_Id;
        rgbColor primary_color;
        rgbColor secondary_color;
        rgbColor tertiary_color;
        rgbColor quaternary_color;
    };
    struct permutation_data permutation_data_ent;
    struct device_data{
        shortBlockIndex power_group;
        shortBlockIndex position_group;
        float initial_animation_position;
        uint32_t flags_flags_16;
    };
    struct device_data device_data_ent;
    struct control_data{
        uint32_t flags_flags_17;
        uint16_t DONT_TOUCH_THIS;
        uint16_t health_station_charges;
        uint16_t enum_allowed_players;
        uint16_t generated_padace0;
    };
    struct control_data control_data_ent;
    struct tagBlock<multiplayer_data> multiplayer_data_ent;
};
































struct dispensers{
    uint32_t name;
    string_id object_name;
    struct tagReference asset;
    struct object_data{
        // CUSTOM: unnamed_field_302
        uint32_t flags_placement_flags_9;
        struct point3D position;
        realEulerAngle3D rotation;
        float scale;
        float gravity_override;
        uint8_t flags_gravity_flags_9;
        uint8_t enum_bsp_policy;
        uint8_t flags_script_flags_9;
        uint8_t generated_pad1c32;
        struct scriptable_properties{
            struct tagBlock<bool_properties> bool_properties_ent;
            struct tagBlock<numeric_properties> numeric_properties_ent;
            struct tagBlock<string_properties> string_properties_ent;
            struct tagBlock<tag_properties> tag_properties_ent;
            struct tagBlock<color_properties> color_properties_ent;
            struct tagBlock<vector_properties> vector_properties_ent;
        };
        struct scriptable_properties scriptable_properties_ent;
        struct bsp_flags{
            struct tagBlock<references> references_ent;
            struct dataReference flags;
            uint32_t bsp_index;
        };
        struct bsp_flags bsp_flags_ent;
        uint16_t flags_transform_flags_9;
        uint8_t enum_Nav_Mesh_Cutting;
        uint8_t flags_Nav_Mesh_Flags_9;
        longBlockIndex editor_folder;
        struct object_id{
            uint32_t unique_id;
            uint16_t origin_bsp_index;
            uint8_t enum_type;
            uint8_t enum_source;
        };
        struct object_id object_id_ent;
        uint32_t runtimeObjectHandle;
        string_id module_id;
        struct parent_id{
            uint32_t parent_object;
            string_id parent_name;
            string_id parent_marker;
            // CUSTOM: unnamed_field_314
            string_id connection_marker;
        };
        struct parent_id parent_id_ent;
        string_id in_game_maps_material_id;
        float Directional_Acceleration_Mult_;
        struct tagReference Custom_Object_Lighting_Reference;
        struct tagBlock<Man_Cannon_Ballistic_Arc_Data> Man_Cannon_Ballistic_Arc_Data_ent;
        struct tagBlock<Spartan_Tracking> Spartan_Tracking_ent;
        uint8_t flags_Layer_flags_9;
        uint8_t generated_pad68e7;
        uint16_t generated_pad68e7_2;
        struct tagBlock<associates> associates_ent;
    };
    struct object_data object_data_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct permutation_data{
        string_id variant_name;
        uint8_t flags_active_change_colors_8;
        uint8_t generated_paddcc3;
        uint16_t generated_paddcc3_2;
        string_id Style_Id;
        rgbColor primary_color;
        rgbColor secondary_color;
        rgbColor tertiary_color;
        rgbColor quaternary_color;
    };
    struct permutation_data permutation_data_ent;
    struct device_data{
        shortBlockIndex power_group;
        shortBlockIndex position_group;
        float initial_animation_position;
        uint32_t flags_flags_19;
    };
    struct device_data device_data_ent;
    struct dispenser_data{
        uint8_t flags_flags_20;
    };
    struct dispenser_data dispenser_data_ent;
    uint8_t generated_padf40b;
    uint16_t generated_padf40b_2;
    struct tagBlock<multiplayer_data> multiplayer_data_ent;
};
























struct giants{
    uint32_t name;
    string_id object_name;
    struct tagReference asset;
    struct object_data{
        // CUSTOM: unnamed_field_339
        uint32_t flags_placement_flags_10;
        struct point3D position;
        realEulerAngle3D rotation;
        float scale;
        float gravity_override;
        uint8_t flags_gravity_flags_10;
        uint8_t enum_bsp_policy;
        uint8_t flags_script_flags_10;
        uint8_t generated_pad1c32;
        struct scriptable_properties{
            struct tagBlock<bool_properties> bool_properties_ent;
            struct tagBlock<numeric_properties> numeric_properties_ent;
            struct tagBlock<string_properties> string_properties_ent;
            struct tagBlock<tag_properties> tag_properties_ent;
            struct tagBlock<color_properties> color_properties_ent;
            struct tagBlock<vector_properties> vector_properties_ent;
        };
        struct scriptable_properties scriptable_properties_ent;
        struct bsp_flags{
            struct tagBlock<references> references_ent;
            struct dataReference flags;
            uint32_t bsp_index;
        };
        struct bsp_flags bsp_flags_ent;
        uint16_t flags_transform_flags_10;
        uint8_t enum_Nav_Mesh_Cutting;
        uint8_t flags_Nav_Mesh_Flags_10;
        longBlockIndex editor_folder;
        struct object_id{
            uint32_t unique_id;
            uint16_t origin_bsp_index;
            uint8_t enum_type;
            uint8_t enum_source;
        };
        struct object_id object_id_ent;
        uint32_t runtimeObjectHandle;
        string_id module_id;
        struct parent_id{
            uint32_t parent_object;
            string_id parent_name;
            string_id parent_marker;
            // CUSTOM: unnamed_field_351
            string_id connection_marker;
        };
        struct parent_id parent_id_ent;
        string_id in_game_maps_material_id;
        float Directional_Acceleration_Mult_;
        struct tagReference Custom_Object_Lighting_Reference;
        struct tagBlock<Man_Cannon_Ballistic_Arc_Data> Man_Cannon_Ballistic_Arc_Data_ent;
        struct tagBlock<Spartan_Tracking> Spartan_Tracking_ent;
        uint8_t flags_Layer_flags_10;
        uint8_t generated_pad68e7;
        uint16_t generated_pad68e7_2;
        struct tagBlock<associates> associates_ent;
    };
    struct object_data object_data_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct permutation_data{
        string_id variant_name;
        uint8_t flags_active_change_colors_9;
        uint8_t generated_paddcc3;
        uint16_t generated_paddcc3_2;
        string_id Style_Id;
        rgbColor primary_color;
        rgbColor secondary_color;
        rgbColor tertiary_color;
        rgbColor quaternary_color;
    };
    struct permutation_data permutation_data_ent;
    struct unit_data{
        float body_vitality;
        uint32_t flags_flags_22;
    };
    struct unit_data unit_data_ent;
    struct giant_data{
        uint16_t enum_Pathfinding_policy;
    };
    struct giant_data giant_data_ent;
    uint16_t generated_padea38;
};
































struct effect_scenery{
    uint32_t name;
    string_id object_name;
    struct tagReference asset;
    struct object_data{
        // CUSTOM: unnamed_field_371
        uint32_t flags_placement_flags_11;
        struct point3D position;
        realEulerAngle3D rotation;
        float scale;
        float gravity_override;
        uint8_t flags_gravity_flags_11;
        uint8_t enum_bsp_policy;
        uint8_t flags_script_flags_11;
        uint8_t generated_pad1c32;
        struct scriptable_properties{
            struct tagBlock<bool_properties> bool_properties_ent;
            struct tagBlock<numeric_properties> numeric_properties_ent;
            struct tagBlock<string_properties> string_properties_ent;
            struct tagBlock<tag_properties> tag_properties_ent;
            struct tagBlock<color_properties> color_properties_ent;
            struct tagBlock<vector_properties> vector_properties_ent;
        };
        struct scriptable_properties scriptable_properties_ent;
        struct bsp_flags{
            struct tagBlock<references> references_ent;
            struct dataReference flags;
            uint32_t bsp_index;
        };
        struct bsp_flags bsp_flags_ent;
        uint16_t flags_transform_flags_11;
        uint8_t enum_Nav_Mesh_Cutting;
        uint8_t flags_Nav_Mesh_Flags_11;
        longBlockIndex editor_folder;
        struct object_id{
            uint32_t unique_id;
            uint16_t origin_bsp_index;
            uint8_t enum_type;
            uint8_t enum_source;
        };
        struct object_id object_id_ent;
        uint32_t runtimeObjectHandle;
        string_id module_id;
        struct parent_id{
            uint32_t parent_object;
            string_id parent_name;
            string_id parent_marker;
            // CUSTOM: unnamed_field_383
            string_id connection_marker;
        };
        struct parent_id parent_id_ent;
        string_id in_game_maps_material_id;
        float Directional_Acceleration_Mult_;
        struct tagReference Custom_Object_Lighting_Reference;
        struct tagBlock<Man_Cannon_Ballistic_Arc_Data> Man_Cannon_Ballistic_Arc_Data_ent;
        struct tagBlock<Spartan_Tracking> Spartan_Tracking_ent;
        uint8_t flags_Layer_flags_11;
        uint8_t generated_pad68e7;
        uint16_t generated_pad68e7_2;
        struct tagBlock<associates> associates_ent;
    };
    struct object_data object_data_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct effect_scenery_data{
        float effect_size_scale;
    };
    struct effect_scenery_data effect_scenery_data_ent;
    struct tagBlock<multiplayer_data> multiplayer_data_ent;
};
































struct crates{
    uint32_t name;
    string_id object_name;
    struct tagReference asset;
    struct object_data{
        // CUSTOM: unnamed_field_406
        uint32_t flags_placement_flags_12;
        struct point3D position;
        realEulerAngle3D rotation;
        float scale;
        float gravity_override;
        uint8_t flags_gravity_flags_12;
        uint8_t enum_bsp_policy;
        uint8_t flags_script_flags_12;
        uint8_t generated_pad1c32;
        struct scriptable_properties{
            struct tagBlock<bool_properties> bool_properties_ent;
            struct tagBlock<numeric_properties> numeric_properties_ent;
            struct tagBlock<string_properties> string_properties_ent;
            struct tagBlock<tag_properties> tag_properties_ent;
            struct tagBlock<color_properties> color_properties_ent;
            struct tagBlock<vector_properties> vector_properties_ent;
        };
        struct scriptable_properties scriptable_properties_ent;
        struct bsp_flags{
            struct tagBlock<references> references_ent;
            struct dataReference flags;
            uint32_t bsp_index;
        };
        struct bsp_flags bsp_flags_ent;
        uint16_t flags_transform_flags_12;
        uint8_t enum_Nav_Mesh_Cutting;
        uint8_t flags_Nav_Mesh_Flags_12;
        longBlockIndex editor_folder;
        struct object_id{
            uint32_t unique_id;
            uint16_t origin_bsp_index;
            uint8_t enum_type;
            uint8_t enum_source;
        };
        struct object_id object_id_ent;
        uint32_t runtimeObjectHandle;
        string_id module_id;
        struct parent_id{
            uint32_t parent_object;
            string_id parent_name;
            string_id parent_marker;
            // CUSTOM: unnamed_field_418
            string_id connection_marker;
        };
        struct parent_id parent_id_ent;
        string_id in_game_maps_material_id;
        float Directional_Acceleration_Mult_;
        struct tagReference Custom_Object_Lighting_Reference;
        struct tagBlock<Man_Cannon_Ballistic_Arc_Data> Man_Cannon_Ballistic_Arc_Data_ent;
        struct tagBlock<Spartan_Tracking> Spartan_Tracking_ent;
        uint8_t flags_Layer_flags_12;
        uint8_t generated_pad68e7;
        uint16_t generated_pad68e7_2;
        struct tagBlock<associates> associates_ent;
    };
    struct object_data object_data_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct permutation_data{
        string_id variant_name;
        uint8_t flags_active_change_colors_10;
        uint8_t generated_paddcc3;
        uint16_t generated_paddcc3_2;
        string_id Style_Id;
        rgbColor primary_color;
        rgbColor secondary_color;
        rgbColor tertiary_color;
        rgbColor quaternary_color;
    };
    struct permutation_data permutation_data_ent;
    struct crate_data{
        uint16_t enum_Pathfinding_policy;
    };
    struct crate_data crate_data_ent;
    uint16_t generated_pad36b2;
    struct tagBlock<multiplayer_data> multiplayer_data_ent;
};
























struct creatures{
    uint32_t name;
    string_id object_name;
    struct tagReference asset;
    struct object_data{
        // CUSTOM: unnamed_field_442
        uint32_t flags_placement_flags_13;
        struct point3D position;
        realEulerAngle3D rotation;
        float scale;
        float gravity_override;
        uint8_t flags_gravity_flags_13;
        uint8_t enum_bsp_policy;
        uint8_t flags_script_flags_13;
        uint8_t generated_pad1c32;
        struct scriptable_properties{
            struct tagBlock<bool_properties> bool_properties_ent;
            struct tagBlock<numeric_properties> numeric_properties_ent;
            struct tagBlock<string_properties> string_properties_ent;
            struct tagBlock<tag_properties> tag_properties_ent;
            struct tagBlock<color_properties> color_properties_ent;
            struct tagBlock<vector_properties> vector_properties_ent;
        };
        struct scriptable_properties scriptable_properties_ent;
        struct bsp_flags{
            struct tagBlock<references> references_ent;
            struct dataReference flags;
            uint32_t bsp_index;
        };
        struct bsp_flags bsp_flags_ent;
        uint16_t flags_transform_flags_13;
        uint8_t enum_Nav_Mesh_Cutting;
        uint8_t flags_Nav_Mesh_Flags_13;
        longBlockIndex editor_folder;
        struct object_id{
            uint32_t unique_id;
            uint16_t origin_bsp_index;
            uint8_t enum_type;
            uint8_t enum_source;
        };
        struct object_id object_id_ent;
        uint32_t runtimeObjectHandle;
        string_id module_id;
        struct parent_id{
            uint32_t parent_object;
            string_id parent_name;
            string_id parent_marker;
            // CUSTOM: unnamed_field_454
            string_id connection_marker;
        };
        struct parent_id parent_id_ent;
        string_id in_game_maps_material_id;
        float Directional_Acceleration_Mult_;
        struct tagReference Custom_Object_Lighting_Reference;
        struct tagBlock<Man_Cannon_Ballistic_Arc_Data> Man_Cannon_Ballistic_Arc_Data_ent;
        struct tagBlock<Spartan_Tracking> Spartan_Tracking_ent;
        uint8_t flags_Layer_flags_13;
        uint8_t generated_pad68e7;
        uint16_t generated_pad68e7_2;
        struct tagBlock<associates> associates_ent;
    };
    struct object_data object_data_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};




struct object_node_graph_placements{
    string_id name;
    struct tagReference Object_Node_Graph;
    struct point3D Position;
    uint32_t flags_Flags;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct BspMapRuntimeRefCounter{
        uint16_t Bsp_Ref_Count;
        uint16_t Layer_Ref_Count;
    };
    struct BspMapRuntimeRefCounter BspMapRuntimeRefCounter_ent;
};


struct spline_road_metadata{
    float width;
    float opacity;
    float falloffLeft;
    float falloffRight;
    float bank;
};


struct Road_Decal_Textures{
    struct tagReference Reference;
};


struct road_decal_metadata{
    struct tagBlock<Road_Decal_Textures> Road_Decal_Textures_ent;
    struct vector2D Road_Decal_Scale;
    struct vector2D Road_Decal_Offset;
    float Road_Decal_Tile_Repeat_Count;
    float Road_Decal_Height_Strength;
    float Road_Decal_Mask_Strength;
    float Road_Decal_Height_Contrast;
    float Road_Decal_Mask_Contrast;
    float Road_Decal_Edge_Fade;
    uint32_t Road_Decal_Random_Seed;
};


struct animated_spline_metadata{
    float Time;
};


struct pointMetadata{
    struct tagBlock<spline_road_metadata> spline_road_metadata_ent;
    struct tagBlock<road_decal_metadata> road_decal_metadata_ent;
    struct tagBlock<animated_spline_metadata> animated_spline_metadata_ent;
};


struct control_points{
    struct vector3D value;
    struct vector3D tangent_in;
    struct vector3D tangent_out;
    float curviness;
    uint8_t enum_segment_type_x;
    uint8_t enum_segment_type_y;
    uint8_t enum_segment_type_z;
    uint8_t enum_tangent_mode_x;
    uint8_t enum_tangent_mode_y;
    uint8_t enum_tangent_mode_z;
    uint16_t generated_pad30cd;
    struct tagBlock<pointMetadata> pointMetadata_ent;
};




struct Road_Decal_Metadata{
    struct tagBlock<Road_Decal_Textures> Road_Decal_Textures_ent;
    struct vector2D Road_Decal_Scale;
    struct vector2D Road_Decal_Offset;
    float Road_Decal_Tile_Repeat_Count;
    float Road_Decal_Height_Strength;
    float Road_Decal_Mask_Strength;
    float Road_Decal_Height_Contrast;
    float Road_Decal_Mask_Contrast;
    float Road_Decal_Edge_Fade;
    uint32_t Road_Decal_Random_Seed;
};




struct spline_flight_path_metadata{
    float Preference;
    uint8_t Lines_per_spline_segment;
    uint8_t generated_padfb3b;
    uint16_t generated_padfb3b_2;
};


struct SplineMetadata{
    struct tagBlock<spline_road_metadata> spline_road_metadata_ent;
    struct tagBlock<spline_flight_path_metadata> spline_flight_path_metadata_ent;
};




struct splines{
    string_id name;
    struct curve{
        struct tagBlock<control_points> control_points_ent;
    };
    struct curve curve_ent;
    struct tagBlock<SplineMetadata> SplineMetadata_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    uint32_t Guid;
};


struct trigger_volumes{
    char label[32];
    shortBlockIndex trigger_volume;
};




struct warzone_objective_definitions{
    string_id name;
    char label[32];
    char user_facing_name[32];
    uint8_t enum_initial_team;
    uint8_t generated_pad6d54;
    uint16_t generated_pad6d54_2;
    struct tagBlock<trigger_volumes> trigger_volumes_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};






struct scenario_attached_lens_flares{
    string_id name;
    uint32_t guid;
    string_id lighting_variant;
    struct point3D position;
    realEulerAngle3D facing;
    uint8_t flags_Flags_2;
    uint8_t enum_bsp_policy;
    uint16_t generated_pad675e;
    struct manual_bsp_flags{
        struct tagBlock<references> references_ent;
        struct dataReference flags;
        uint32_t bsp_index;
    };
    struct manual_bsp_flags manual_bsp_flags_ent;
    struct tagReference lens_flare_reference;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};






struct scenario_attached_light_cones{
    string_id name;
    uint32_t guid;
    string_id lighting_variant;
    struct point3D position;
    realEulerAngle3D facing;
    uint16_t padding;
    uint8_t enum_bsp_policy;
    uint8_t generated_pad836b;
    struct manual_bsp_flags{
        struct tagBlock<references> references_ent;
        struct dataReference flags;
        uint32_t bsp_index;
    };
    struct manual_bsp_flags manual_bsp_flags_ent;
    struct tagReference light_cone_reference;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    realARGBColor color;
    float intensity;
    float length;
    float width;
    float Camera_Near_Fade_Start;
    float Camera_Near_Fade_End;
    float Camera_Far_Fade_Start;
    float Camera_Far_Fade_End;
    uint8_t flags_Flags_3;
    uint8_t generated_pad36b6;
    uint16_t generated_pad36b6_2;
    longBlockIndex editor_folder;
    string_id moduleId;
};


struct shape_override{
    float radius;
};






struct sound_placements{
    string_id name;
    uint32_t guid;
    struct vector3D position;
    realEulerAngle3D facing;
    uint8_t flags_placement_flags_14;
    uint8_t flags_flags_26;
    uint16_t generated_paddbf0;
    longBlockIndex editor_folder;
    struct tagReference looping_sound;
    struct tagBlock<shape_override> shape_override_ent;
    struct tagBlock<spline> spline_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    string_id moduleId;
    string_id Movement_RTPC_name;
    float movement_detection_radius;
    float Movement_distance_scaling_factor;
    struct BspMapRuntimeRefCounter{
        uint16_t Bsp_Ref_Count;
        uint16_t Layer_Ref_Count;
    };
    struct BspMapRuntimeRefCounter BspMapRuntimeRefCounter_ent;
};


struct float_params{
    string_id name;
    float value;
};


struct bool_params{
    string_id name;
    uint8_t flags_value;
    uint8_t generated_pad0473;
    uint16_t generated_pad0473_2;
};


struct taggraph_instance_variables___strings{
    string_id name;
    string_id value;
};


struct taggraph_instance_variables___tag_references{
    string_id name;
    struct tagReference value;
};




struct effect_placements{
    string_id name;
    uint32_t guid;
    string_id lighting_variant;
    struct point3D position;
    realEulerAngle3D facing;
    float scale;
    uint16_t flags_flags_27;
    uint8_t enum_bsp_policy;
    uint8_t generated_pad81e4;
    longBlockIndex editor_folder;
    float Scale_A_Override_Value;
    float Scale_B_Override_Value;
    struct tagReference effect;
    struct tagReference tag_graph_output;
    string_id output_node_name;
    struct tagBlock<float_params> float_params_ent;
    struct tagBlock<bool_params> bool_params_ent;
    struct tagBlock<taggraph_instance_variables___strings> taggraph_instance_variables___strings_ent;
    struct tagBlock<taggraph_instance_variables___tag_references> taggraph_instance_variables___tag_references_ent;
    uint32_t handle;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    string_id moduleId;
    struct BspMapRuntimeRefCounter{
        uint16_t Bsp_Ref_Count;
        uint16_t Layer_Ref_Count;
    };
    struct BspMapRuntimeRefCounter BspMapRuntimeRefCounter_ent;
};


struct Global_Forces{
    uint32_t force_index;
    string_id name;
    uint32_t guid;
    struct point3D position;
    realEulerAngle3D facing;
    float scale;
    struct tagReference global_force;
    longBlockIndex editor_folder;
    string_id moduleId;
};




struct Points{
    struct point3D position;
};


struct nativePoints2D{
    struct point2D point;
};


struct HLOD_Volumes{
    uint32_t Guid;
    string_id Name;
    struct tagReference Owner_BSP;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct Volume{
        struct tagBlock<Points> Points_ent;
        float height;
        float sink;
        struct point3D center_point;
        float trivial_cull_radius_squared;
        struct point3D aabbCenter;
        struct point3D aabbExtents;
        struct tagBlock<nativePoints2D> nativePoints2D_ent;
    };
    struct Volume Volume_ent;
    float SwitchDistance;
    uint16_t enum_Maximum_LOD;
    uint16_t generated_pad98b9;
    string_id Asset_Category;
    struct Hlod_Settings{
        struct tagReference HLOD_settings_preset_list;
        string_id HLOD_settings_name;
    };
    struct Hlod_Settings Hlod_Settings_ent;
    uint8_t flags_Flags_4;
    uint8_t generated_pad7ed8;
    // CUSTOM: Visibility_Settings
    uint16_t enum_Use_Visibility;
    struct Visibility_Camera_Sphere_Settings{
        uint32_t Quality;
        float Semisphere_Center_Pitch_Angle;
        float Semisphere_Center_Yaw_Angle;
        float Sphere_Coverage;
    };
    struct Visibility_Camera_Sphere_Settings Visibility_Camera_Sphere_Settings_ent;
    // CUSTOM: unnamed_field_518
    uint8_t enum_Volume_Inclusion_Policy;
    uint8_t generated_pad3223;
    uint16_t generated_pad3223_2;
    struct tagReference Hlod_Asset_Override;
    struct tagReference Hlod_Asset;
    struct tagReference Hlod_Metadata_chore_generated_and_always_up_to_date;
    struct tagReference Hlod_Metadata_baked_with_hlod_asset;
    uint32_t VolumeColorIndex;
};








struct Wind_Influencer_Volumes{
    string_id Name;
    uint32_t enum_Type;
    struct vector2D Direction;
    float Strength;
    float Radius;
    uint32_t flags_Mode;
    uint32_t flags_Flags_5;
    struct Direction_Function{
        // CUSTOM: Mapping
        struct Mapping{
            // CUSTOM: unnamed_field_521
            struct dataReference data;
            // CUSTOM: unnamed_field_523
        };
        struct Mapping Mapping_ent;
    };
    struct Direction_Function Direction_Function_ent;
    struct Strength_Function{
        // CUSTOM: Mapping
        struct Mapping{
            // CUSTOM: unnamed_field_527
            struct dataReference data;
            // CUSTOM: unnamed_field_529
        };
        struct Mapping Mapping_ent;
    };
    struct Strength_Function Strength_Function_ent;
    float Direction_Function_Period;
    float Strength_Function_Period;
    float Wind_Impulse_Average_Frequency;
    float Wind_Impulse_Average_Duration;
    float Wind_Impulse_Strength;
    float Last_Sleep_Pause;
    float Last_Random_Activity_Timestamp;
    uint32_t Wind_Impulse_State;
    uint32_t enum_Noise_Distribution;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    longBlockIndex Editor_Folder;
    string_id Module_ID;
    uint32_t Datum_Index;
    struct Volume{
        struct tagBlock<Points> Points_ent;
        float height;
        float sink;
        struct point3D center_point;
        float trivial_cull_radius_squared;
        struct point3D aabbCenter;
        struct point3D aabbExtents;
        struct tagBlock<nativePoints2D> nativePoints2D_ent;
    };
    struct Volume Volume_ent;
    uint32_t Bsp_index;
};








struct Physics_Volumes{
    string_id Name;
    uint32_t enum_Type;
    // CUSTOM: Volume_settings
    struct Volume{
        struct tagBlock<Points> Points_ent;
        float height;
        float sink;
        struct point3D center_point;
        float trivial_cull_radius_squared;
        struct point3D aabbCenter;
        struct point3D aabbExtents;
        struct tagBlock<nativePoints2D> nativePoints2D_ent;
    };
    struct Volume Volume_ent;
    // CUSTOM: unnamed_field_541
    string_id Collision_Layer;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct tagReference owner_bsp;
    struct tagReference Generated_collision_volume;
};








struct Pruning_Volumes{
    string_id Name;
    struct Volume{
        struct tagBlock<Points> Points_ent;
        float height;
        float sink;
        struct point3D center_point;
        float trivial_cull_radius_squared;
        struct point3D aabbCenter;
        struct point3D aabbExtents;
        struct tagBlock<nativePoints2D> nativePoints2D_ent;
    };
    struct Volume Volume_ent;
    uint16_t flags_flags_28;
    uint16_t generated_padcbcb;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};






struct Fortification_Filters{
    uint16_t enum_Actor_Type;
};


struct High_Ground_Filters{
    uint16_t enum_Actor_Type;
};


struct FleeHide_Filters{
    uint16_t enum_Actor_Type;
};


struct Low_Priority_Filters{
    uint16_t enum_Actor_Type;
};


struct Pathing_Cost_Modifier_Filters{
    uint16_t enum_Navigation_Type;
    uint16_t enum_Character_Filter_Type;
    uint16_t enum_AI_Size;
};


struct Wander_Priority_Filters{
    uint16_t enum_Actor_Type;
};


struct Editor_Metadata{
    char folder_name[256];
    struct point3D local_space_pivot_point_position;
};


struct AI_Markup_Volumes{
    string_id Name;
    struct Volume{
        struct tagBlock<Points> Points_ent;
        float height;
        float sink;
        struct point3D center_point;
        float trivial_cull_radius_squared;
        struct point3D aabbCenter;
        struct point3D aabbExtents;
        struct tagBlock<nativePoints2D> nativePoints2D_ent;
    };
    struct Volume Volume_ent;
    angle Fortification_Direction;
    uint8_t enum_Fortification_Intensity;
    uint8_t generated_pad932e;
    uint16_t generated_pad932e_2;
    string_id Fortification_Direction_Name;
    uint16_t flags_Should_Use_Direction_Vector;
    uint16_t generated_paddfe3;
    struct tagBlock<Fortification_Filters> Fortification_Filters_ent;
    struct tagBlock<High_Ground_Filters> High_Ground_Filters_ent;
    struct tagBlock<FleeHide_Filters> FleeHide_Filters_ent;
    struct tagBlock<Low_Priority_Filters> Low_Priority_Filters_ent;
    struct tagBlock<Pathing_Cost_Modifier_Filters> Pathing_Cost_Modifier_Filters_ent;
    struct tagBlock<Wander_Priority_Filters> Wander_Priority_Filters_ent;
    uint8_t enum_Volume_Precombat_Type;
    uint8_t generated_padf760;
    uint16_t generated_padf760_2;
    float Precombat_Wait_Time;
    uint16_t Max_Characters;
    uint16_t generated_pad1141;
    struct tagBlock<Editor_Metadata> Editor_Metadata_ent;
    uint16_t flags_Volume_Flavors;
    uint16_t generated_pad12df;
    longBlockIndex editor_folder;
    string_id moduleId;
    uint32_t Guid;
    uint16_t flags_Flags_6;
    uint16_t generated_padc62a;
};




struct path{
    uint32_t guid;
    string_id name;
};


struct Neighbors{
    struct Neighbor_Ref{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Neighbor_Ref Neighbor_Ref_ent;
};




struct Targets{
    struct Target{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Target Target_ent;
};


struct Unit_Type_Filters{
    uint16_t enum_Actor_Type;
};


struct AI_Markup_Points{
    string_id Name;
    struct point3D Position;
    realEulerAngle3D Orientation;
    struct tagBlock<Editor_Metadata> Editor_Metadata_ent;
    uint8_t enum_Point_Type;
    uint8_t enum_Point_Precombat_Type;
    uint16_t generated_pad277f;
    float Max_Attract_Radius;
    float Cooldown;
    uint16_t Max_Characters;
    uint16_t enum_Patrol_Mode;
    customShortBlockIndex Patrol_Point_Set;
    uint16_t generated_paddaca;
    float Lookout_Wait_Time;
    struct tagBlock<Neighbors> Neighbors_ent;
    uint8_t enum_Objective_Type;
    uint8_t generated_pad8e15;
    uint16_t generated_pad8e15_2;
    struct tagBlock<Targets> Targets_ent;
    struct tagBlock<Unit_Type_Filters> Unit_Type_Filters_ent;
    longBlockIndex editor_folder;
    string_id moduleId;
    uint32_t Guid;
    uint8_t flags_Flags_7;
    uint8_t generated_pada708;
    uint16_t generated_pada708_2;
    string_id Custom_Animation_Name;
};




struct Explore_Neighbors{
    struct Neighbor_Ref{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Neighbor_Ref Neighbor_Ref_ent;
};




struct Bot_Markup_Points{
    string_id Name;
    struct point3D Position;
    realEulerAngle3D Orientation;
    uint8_t enum_Point_Type;
    uint8_t generated_pad5318;
    uint16_t generated_pad5318_2;
    struct tagBlock<Explore_Neighbors> Explore_Neighbors_ent;
    char megalo_label[32];
    char megalo_label_2[32];
    char megalo_label_3[32];
    char megalo_label_4[32];
    uint8_t enum_Owner_Team;
    uint8_t generated_pad6cf9;
    uint16_t generated_pad6cf9_2;
    struct tagBlock<Editor_Metadata> Editor_Metadata_ent;
    string_id moduleId;
    longBlockIndex editor_folder;
    uint32_t Guid;
    uint8_t flags_Flags_8;
    uint8_t generated_padb9ae;
    uint16_t generated_padb9ae_2;
};










struct Children_Encounter_Elements{
    struct Ref{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Ref Ref_ent;
};




struct Conditions{
    uint8_t enum_Decorator_Type;
    uint8_t generated_pada19b;
    uint16_t flags_Flags_9;
    uint32_t Max_Limit;
    uint8_t enum_Assignment_Limit_Compare_Condition;
    uint8_t generated_paddcdf;
    uint16_t generated_paddcdf_2;
    uint32_t Max_Bodies;
    uint8_t enum_Combat_Filter_Compare_Condition;
    uint8_t generated_pad7f6b;
    uint16_t enum_Combat_Status;
    string_id Keyword;
    uint32_t Min_Living_Count;
    uint16_t flags_Vehicle_Compare_Condition;
    uint16_t generated_pad54e6;
    struct Player_Trigger_Volume_Reference{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Player_Trigger_Volume_Reference Player_Trigger_Volume_Reference_ent;
    string_id Label;
    uint8_t enum_Min_Relevance;
    uint8_t generated_pad0831;
    uint16_t generated_pad0831_2;
};


struct Encounter_Zones{
    string_id Name;
    struct Volume{
        struct tagBlock<Points> Points_ent;
        float height;
        float sink;
        struct point3D center_point;
        float trivial_cull_radius_squared;
        struct point3D aabbCenter;
        struct point3D aabbExtents;
        struct tagBlock<nativePoints2D> nativePoints2D_ent;
    };
    struct Volume Volume_ent;
    uint8_t enum_Base_Relevance;
    uint8_t generated_padcbd2;
    uint16_t generated_padcbd2_2;
    longBlockIndex editor_folder;
    string_id module_id;
    struct tagBlock<Editor_Metadata> Editor_Metadata_ent;
    uint32_t Guid;
    uint16_t flags_Encounter_Zone_Flags;
    uint16_t generated_pad1887;
    struct tagBlock<Children_Encounter_Elements> Children_Encounter_Elements_ent;
    struct tagBlock<Conditions> Conditions_ent;
    uint8_t enum_Follow_Type;
    uint8_t generated_pad653c;
    uint16_t generated_pad653c_2;
    float Follow_Range_Radius;
};






struct Composite_Child_GUIDs_DEPRECATED{
    uint32_t GUID;
};






struct Composite_Children{
    struct Ref{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Ref Ref_ent;
};




struct Encounter_Tree_Nodes{
    string_id Name;
    struct point3D Position;
    realEulerAngle3D Orientation;
    uint8_t enum_Node_Type;
    uint8_t enum_Composite_Type;
    uint16_t flags_Composite_Flags;
    uint8_t enum_Decorator_Type;
    uint8_t generated_padbf04;
    uint16_t generated_padbf04_2;
    uint32_t Max_Limit;
    uint8_t enum_Assignment_Limit_Compare_Condition;
    uint8_t generated_paddcdf;
    uint16_t generated_paddcdf_2;
    uint32_t Max_Bodies;
    uint8_t enum_Combat_Filter_Compare_Condition;
    uint8_t generated_pad7f6b;
    uint16_t enum_Combat_Status;
    string_id Keyword;
    uint32_t Min_Living_Count;
    uint16_t flags_Vehicle_Compare_Condition_2;
    uint16_t generated_padd8e5;
    struct Player_Trigger_Volume_Reference{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Player_Trigger_Volume_Reference Player_Trigger_Volume_Reference_ent;
    string_id Label;
    uint8_t enum_Min_Relevance;
    uint8_t generated_pad259a;
    uint16_t generated_pad259a_2;
    longBlockIndex editor_folder;
    string_id moduleId;
    struct tagBlock<Editor_Metadata> Editor_Metadata_ent;
    struct tagBlock<Composite_Child_GUIDs_DEPRECATED> Composite_Child_GUIDs_DEPRECATED_ent;
    uint32_t Decorator_Child_GUID_DEPRECATED;
    uint32_t Root_Child_GUID_DEPRECATED;
    struct Root_Child{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Root_Child Root_Child_ent;
    struct tagBlock<Composite_Children> Composite_Children_ent;
    struct Decorator_Child{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Decorator_Child Decorator_Child_ent;
    uint32_t Guid;
    uint16_t flags_Flags_10;
    uint16_t generated_pada523;
};






struct Input_References{
    string_id Label;
    struct Ref{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Ref Ref_ent;
};






struct Encounter_Behavior_Trees{
    string_id Name;
    struct point3D Position;
    realEulerAngle3D Orientation;
    longBlockIndex editor_folder;
    string_id moduleId;
    struct tagBlock<Editor_Metadata> Editor_Metadata_ent;
    struct tagReference Graph_Tag;
    struct tagBlock<Input_References> Input_References_ent;
    struct tagBlock<Conditions> Conditions_ent;
    uint32_t Guid;
    uint16_t flags_Flags_12;
    uint16_t generated_pad491e;
};








struct Placed_Orders{
    string_id Name;
    struct Volume{
        struct tagBlock<Points> Points_ent;
        float height;
        float sink;
        struct point3D center_point;
        float trivial_cull_radius_squared;
        struct point3D aabbCenter;
        struct point3D aabbExtents;
        struct tagBlock<nativePoints2D> nativePoints2D_ent;
    };
    struct Volume Volume_ent;
    struct tagBlock<Editor_Metadata> Editor_Metadata_ent;
};




struct Fallback_Combat_Tether_AI_Markup_Points{
    struct Ref{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Ref Ref_ent;
    uint32_t Abandon_Previous_Tether_Point_Body_Count_Condition_Invalid_if_less_than_1;
    uint8_t enum_Squad_Combat_Tether_Type;
    uint8_t generated_padcce6;
    uint16_t generated_padcce6_2;
    float Squad_Combat_Tether_Distance;
    float Squad_Abandon_Tether_Distance;
    float Squad_Re_Tether_Distance;
};




struct Precombat_Links{
    struct PrecombatRef{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct PrecombatRef PrecombatRef_ent;
};








struct Flight_Path_Splines{
    struct Spline_Ref{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Spline_Ref Spline_Ref_ent;
};






struct Squad_Keywords{
    string_id Keyword;
};


struct Squad_Spawners{
    string_id Name;
    struct point3D Position;
    realEulerAngle3D Orientation;
    struct tagReference Squad_Specification;
    uint8_t enum_Squad_Combat_Tether_Type;
    uint8_t generated_padcce6;
    uint16_t generated_padcce6_2;
    float Squad_Combat_Tether_Distance;
    float Squad_Abandon_Tether_Distance;
    float Squad_Re_Tether_Distance;
    struct tagBlock<Fallback_Combat_Tether_AI_Markup_Points> Fallback_Combat_Tether_AI_Markup_Points_ent;
    struct tagBlock<Precombat_Links> Precombat_Links_ent;
    struct tagBlock<Editor_Metadata> Editor_Metadata_ent;
    uint32_t Encounter_Zone_Instance_DEPRECATED;
    struct Parent_Encounter_Zone_Instance_DEPRECATED{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Parent_Encounter_Zone_Instance_DEPRECATED Parent_Encounter_Zone_Instance_DEPRECATED_ent;
    uint8_t enum_Spawn_Method;
    uint8_t enum_Spawn_Orientation;
    uint8_t enum_Is_Initially_Placed;
    uint8_t generated_pad9621;
    float Spawn_Radius;
    float Precombat_Activity_Radius;
    struct tagReference Drop_Pod_Device_Machine;
    realBounds Drop_Pod_Spawn_Delay;
    struct tagReference Air_Drop_Vehicle;
    struct tagReference Air_Drop_Pilot_Character;
    struct Air_Drop_Settings{
        struct tagReference Air_Drop_Vehicle;
        struct tagReference Drop_Ship_Vehicle_Configuration;
        struct tagReference Air_Drop_Pilot_Character;
        uint8_t enum_Passenger_Seat_Preference;
        uint8_t generated_pade94c;
        uint16_t generated_pade94c_2;
        float Passenger_Drop_Height;
        float Vehicle_Drop_Height;
        float Attack_After_Operations_Duration;
        uint8_t flags_Flags_13;
        uint8_t generated_pad032d;
        uint16_t generated_pad032d_2;
        struct Air_Drop_Fly_In_Settings{
            uint8_t enum_Travel_Type;
            uint8_t generated_pad6c86;
            uint16_t generated_pad6c86_2;
            struct Transition{
                uint8_t enum_Transition_Type;
                uint8_t generated_pad94e3;
                uint16_t generated_pad94e3_2;
                float Transition_Time;
            };
            struct Transition Transition_ent;
            uint8_t enum_Flight_Path_Spline_Type;
            uint8_t flags_Use_Spawner_Direction_as_Destination_Direction;
            uint16_t generated_padb93b;
            struct tagReference Flight_Path_Kit;
            struct tagBlock<Flight_Path_Splines> Flight_Path_Splines_ent;
        };
        struct Air_Drop_Fly_In_Settings Air_Drop_Fly_In_Settings_ent;
        struct Air_Drop_Fly_Out_Settings{
            uint8_t enum_Travel_Type;
            uint8_t generated_pad6c86;
            uint16_t generated_pad6c86_2;
            struct Transition{
                uint8_t enum_Transition_Type;
                uint8_t generated_pad94e3;
                uint16_t generated_pad94e3_2;
                float Transition_Time;
            };
            struct Transition Transition_ent;
            uint8_t enum_Flight_Path_Spline_Type;
            uint8_t flags_Use_Spawner_Direction_as_Destination_Direction_2;
            uint16_t generated_padb93b;
            struct tagReference Flight_Path_Kit;
            struct tagBlock<Flight_Path_Splines> Flight_Path_Splines_ent;
        };
        struct Air_Drop_Fly_Out_Settings Air_Drop_Fly_Out_Settings_ent;
    };
    struct Air_Drop_Settings Air_Drop_Settings_ent;
    string_id Placement_Script;
    uint8_t enum_Initial_Combat_State;
    uint8_t generated_pad7c40;
    uint16_t generated_pad7c40_2;
    struct tagBlock<Squad_Keywords> Squad_Keywords_ent;
    longBlockIndex editor_folder;
    string_id module_id;
    uint32_t Guid;
    uint16_t flags_Flags_14;
    uint16_t generated_pad2f8b;
};


struct Reinforcement_Squads{
    struct tagReference Squad_Specification;
};




struct Spawn_Points{
    struct Ref{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Ref Ref_ent;
};




struct Reinforcement_Points{
    uint16_t flags_Reinforcement_Point_Flags;
    uint16_t generated_pad545c;
    string_id Name;
    struct point3D Position;
    realEulerAngle3D Orientation;
    uint8_t enum_Reinforcement_Activation_Condition;
    uint8_t enum_Reinforcement_Point_Type;
    uint8_t enum_Reinforcement_Squad_Iteration_Style;
    uint8_t generated_pad6e3d;
    struct tagBlock<Reinforcement_Squads> Reinforcement_Squads_ent;
    uint8_t enum_Reinforcement_Spawn_Point_Selection_Style;
    uint8_t generated_padbaf2;
    uint16_t generated_padbaf2_2;
    struct tagBlock<Spawn_Points> Spawn_Points_ent;
    struct tagBlock<Editor_Metadata> Editor_Metadata_ent;
    longBlockIndex editor_folder;
    string_id moduleId;
    uint32_t Guid;
};




struct Activatable_Regions{
    string_id Name;
    struct vector3D Position;
    struct tagBlock<Editor_Metadata> Editor_Metadata_ent;
    uint8_t enum_Region_Type;
    uint8_t generated_pad1d75;
    uint16_t generated_pad1d75_2;
    float Radius;
    uint8_t enum_Active;
    uint8_t generated_pad0394;
    uint16_t generated_pad0394_2;
    longBlockIndex editor_folder;
    string_id module_id;
};






struct Runtime_Triangles{
    realPlane3D plane_0;
    realPlane3D plane_1;
    realPlane3D plane_2;
    realPlane3D plane_3;
    realPlane3D plane_4;
    struct point2D vertex_0;
    struct point2D vertex_1;
    struct point2D vertex_2;
    uint64_t pad;
};




struct Activation_Volumes{
    string_id Name;
    struct Volume{
        struct tagBlock<Points> Points_ent;
        float height;
        float sink;
        struct point3D center_point;
        float trivial_cull_radius_squared;
        struct point3D aabbCenter;
        struct point3D aabbExtents;
        struct tagBlock<nativePoints2D> nativePoints2D_ent;
    };
    struct Volume Volume_ent;
    uint8_t flags_Flags_15;
    uint8_t enum_Activator_Type;
    uint16_t generated_padc56b;
    float Exit_Delay;
    float Vicinity_Trigger_Distance;
    float Up_Vicinity_Trigger_Additional_Distance;
    struct tagBlock<Runtime_Triangles> Runtime_Triangles_ent;
    struct tagBlock<Editor_Metadata> Editor_Metadata_ent;
    longBlockIndex Editor_Folder;
    string_id Module_ID;
};








struct Control_Parameters{
    string_id Parameter;
};




struct Cage_Attachments{
    string_id Name;
    struct Object_Reference{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Object_Reference Object_Reference_ent;
    uint8_t enum_Placement_Type;
    uint8_t generated_pad643c;
    uint16_t generated_pad643c_2;
    struct tagReference Cage_Definition;
    string_id Cage_Center_Point;
};


struct Persistence_Checks{
    string_id Persistence_Key;
    uint8_t enum_Compare_Type;
    uint8_t generated_pad6e63;
    uint16_t generated_pad6e63_2;
    uint32_t Value;
};










struct Additional_Activations{
    uint8_t flags_Flags_18;
    uint8_t generated_padd35f;
    uint16_t generated_padd35f_2;
    longBlockIndex On_Control_Parameter_Set;
    string_id On_Trigger_Volume_Enter_Deprecated;
    struct On_Trigger_Volume_Enter{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct On_Trigger_Volume_Enter On_Trigger_Volume_Enter_ent;
    string_id On_Trigger_Volume_Exit_Deprecated;
    struct On_Trigger_Volume_Exit{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct On_Trigger_Volume_Exit On_Trigger_Volume_Exit_ent;
    longBlockIndex On_Beat_Activate;
    longBlockIndex On_Beat_Deactivate;
    longBlockIndex Is_Beat_Inactive;
    longBlockIndex Is_Beat_Active;
    longBlockIndex Persistence_Check;
    longBlockIndex Move_to_Finished;
    longBlockIndex HUD_Off_Finished;
};










struct Additional_Deactivations{
    uint8_t flags_Flags_20;
    uint8_t generated_pada24a;
    uint16_t generated_pada24a_2;
    longBlockIndex On_Control_Parameter_Set;
    string_id On_Trigger_Volume_Enter_Deprecated;
    struct On_Trigger_Volume_Enter{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct On_Trigger_Volume_Enter On_Trigger_Volume_Enter_ent;
    string_id On_Trigger_Volume_Exit_Deprecated;
    struct On_Trigger_Volume_Exit{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct On_Trigger_Volume_Exit On_Trigger_Volume_Exit_ent;
    longBlockIndex On_Beat_Activate;
    longBlockIndex On_Beat_Deactivate;
    longBlockIndex Is_Beat_Inactive;
    longBlockIndex Is_Beat_Active;
    float Time_in_Beat;
    longBlockIndex Persistence_Check;
    longBlockIndex Move_to_Finished;
    longBlockIndex HUD_Off_Finished;
};




struct Gazes{
    struct Object_Reference{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Object_Reference Object_Reference_ent;
    float Weight;
    // CUSTOM: Advanced
    longBlockIndex Cage_Attachment;
    string_id Cage_Point;
    // CUSTOM: unnamed_field_691
};












struct Proximity_Advanced_Camera{
    uint8_t flags_Flags_25;
    uint8_t generated_pad6f7b;
    uint16_t generated_pad6f7b_2;
    struct Damping{
        uint8_t Position_Dampen_Percentage;
        uint8_t generated_pad6a9e;
        uint16_t generated_pad6a9e_2;
        float Position_Dampen_Time;
        uint8_t Rotation_Dampen_Percentage;
        uint8_t generated_padb753;
        uint16_t generated_padb753_2;
        float Rotation_Dampen_Time;
    };
    struct Damping Damping_ent;
    struct Position_Point{
        longBlockIndex Cage_Attachment;
        string_id Cage_Point;
    };
    struct Position_Point Position_Point_ent;
    struct Gaze{
        float Distance;
        angle Outer_Angle;
        angle Inner_Angle;
        angle Velocity;
        struct vector2D Source_Slide_Range_Min;
        struct vector2D Source_Slide_Range_Max;
        struct vector2D Target_Slide_Range;
        uint8_t Slide_Dampen_Percentage;
        uint8_t generated_pada647;
        uint16_t generated_pada647_2;
        float Slide_Dampen_Time;
        // CUSTOM: Input_Velocity_Curve
        struct Input_Velocity_Curve{
            uint8_t enum_Curve_Type;
            uint8_t generated_pade4ec;
            uint16_t generated_pade4ec_2;
            struct tagReference Curve_Definition;
            string_id Curve_Name;
        };
        struct Input_Velocity_Curve Input_Velocity_Curve_ent;
        // CUSTOM: unnamed_field_729
        // CUSTOM: Velocity_Curve
        struct Velocity_Curve{
            uint8_t enum_Curve_Type;
            uint8_t generated_pade4ec;
            uint16_t generated_pade4ec_2;
            struct tagReference Curve_Definition;
            string_id Curve_Name;
        };
        struct Velocity_Curve Velocity_Curve_ent;
        // CUSTOM: unnamed_field_732
        struct tagBlock<Gazes> Gazes_ent;
    };
    struct Gaze Gaze_ent;
    struct Shake{
        struct Scale_Damping{
            uint8_t Position_Dampen_Percentage;
            uint8_t generated_pad6a9e;
            uint16_t generated_pad6a9e_2;
            float Position_Dampen_Time;
            uint8_t Rotation_Dampen_Percentage;
            uint8_t generated_padb753;
            uint16_t generated_padb753_2;
            float Rotation_Dampen_Time;
        };
        struct Scale_Damping Scale_Damping_ent;
        // CUSTOM: Position
        struct vector3D Position_Sample_Values;
        struct vector3D Position_Offset_Scale;
        struct vector2D Position_Offset_Velocity_Range;
        struct vector3D Position_Offset_Velocity_Scale_Min;
        struct vector3D Position_Offset_Velocity_Scale_Max;
        struct vector2D Position_Time_Velocity_Scale;
        // CUSTOM: unnamed_field_741
        // CUSTOM: Rotation
        struct vector3D Rotation_Sample_Values;
        realEulerAngle3D Rotation_Offset_Scale;
        struct vector2D Rotation_Offset_Velocity_Range;
        struct vector3D Rotation_Offset_Velocity_Scale_Min;
        struct vector3D Rotation_Offset_Velocity_Scale_Max;
        struct vector2D Rotation_Time_Velocity_Scale;
        // CUSTOM: unnamed_field_743
    };
    struct Shake Shake_ent;
    // CUSTOM: Advanced___Position
    struct Composition_Reference{
        struct Composition_Placement{
            struct tagBlock<path> path_ent;
            uint32_t guid;
        };
        struct Composition_Placement Composition_Placement_ent;
        longBlockIndex Composition_Beat;
        uint32_t Composition_Index;
        string_id Composition_Camera_Track_Name;
        string_id Composition_Puppet_Track_Name;
    };
    struct Composition_Reference Composition_Reference_ent;
    // CUSTOM: unnamed_field_749
};


struct Zoom_Settings{
    struct tagReference Curve_Definition;
    struct Positional_Curve_Adjustments{
        uint8_t enum_Curve_Type;
        uint8_t generated_padc5da;
        uint16_t generated_padc5da_2;
        string_id Curve_Name;
        uint8_t Dampen_Percentage;
        uint8_t generated_pad128f;
        uint16_t generated_pad128f_2;
        float Dampen_Time;
    };
    struct Positional_Curve_Adjustments Positional_Curve_Adjustments_ent;
    struct Focal_Length_Curve_Adjustments{
        uint8_t enum_Curve_Type;
        uint8_t generated_padc5da;
        uint16_t generated_padc5da_2;
        string_id Curve_Name;
        uint8_t Dampen_Percentage;
        uint8_t generated_pad128f;
        uint16_t generated_pad128f_2;
        float Dampen_Time;
    };
    struct Focal_Length_Curve_Adjustments Focal_Length_Curve_Adjustments_ent;
};


struct New_Camera_Properties{
    uint8_t flags_Flags_22;
    uint8_t generated_padf0b3;
    uint16_t generated_padf0b3_2;
    struct Camera_Transform{
        uint8_t flags_Flags_23;
        uint8_t generated_pad6f7b;
        uint16_t generated_pad6f7b_2;
        struct Damping{
            uint8_t Position_Dampen_Percentage;
            uint8_t generated_pad6a9e;
            uint16_t generated_pad6a9e_2;
            float Position_Dampen_Time;
            uint8_t Rotation_Dampen_Percentage;
            uint8_t generated_padb753;
            uint16_t generated_padb753_2;
            float Rotation_Dampen_Time;
        };
        struct Damping Damping_ent;
        struct Position_Point{
            longBlockIndex Cage_Attachment;
            string_id Cage_Point;
        };
        struct Position_Point Position_Point_ent;
        struct Gaze{
            float Distance;
            angle Outer_Angle;
            angle Inner_Angle;
            angle Velocity;
            struct vector2D Source_Slide_Range_Min;
            struct vector2D Source_Slide_Range_Max;
            struct vector2D Target_Slide_Range;
            uint8_t Slide_Dampen_Percentage;
            uint8_t generated_pada647;
            uint16_t generated_pada647_2;
            float Slide_Dampen_Time;
            // CUSTOM: Input_Velocity_Curve
            struct Input_Velocity_Curve{
                uint8_t enum_Curve_Type;
                uint8_t generated_pade4ec;
                uint16_t generated_pade4ec_2;
                struct tagReference Curve_Definition;
                string_id Curve_Name;
            };
            struct Input_Velocity_Curve Input_Velocity_Curve_ent;
            // CUSTOM: unnamed_field_684
            // CUSTOM: Velocity_Curve
            struct Velocity_Curve{
                uint8_t enum_Curve_Type;
                uint8_t generated_pade4ec;
                uint16_t generated_pade4ec_2;
                struct tagReference Curve_Definition;
                string_id Curve_Name;
            };
            struct Velocity_Curve Velocity_Curve_ent;
            // CUSTOM: unnamed_field_687
            struct tagBlock<Gazes> Gazes_ent;
        };
        struct Gaze Gaze_ent;
        struct Shake{
            struct Scale_Damping{
                uint8_t Position_Dampen_Percentage;
                uint8_t generated_pad6a9e;
                uint16_t generated_pad6a9e_2;
                float Position_Dampen_Time;
                uint8_t Rotation_Dampen_Percentage;
                uint8_t generated_padb753;
                uint16_t generated_padb753_2;
                float Rotation_Dampen_Time;
            };
            struct Scale_Damping Scale_Damping_ent;
            // CUSTOM: Position
            struct vector3D Position_Sample_Values;
            struct vector3D Position_Offset_Scale;
            struct vector2D Position_Offset_Velocity_Range;
            struct vector3D Position_Offset_Velocity_Scale_Min;
            struct vector3D Position_Offset_Velocity_Scale_Max;
            struct vector2D Position_Time_Velocity_Scale;
            // CUSTOM: unnamed_field_696
            // CUSTOM: Rotation
            struct vector3D Rotation_Sample_Values;
            realEulerAngle3D Rotation_Offset_Scale;
            struct vector2D Rotation_Offset_Velocity_Range;
            struct vector3D Rotation_Offset_Velocity_Scale_Min;
            struct vector3D Rotation_Offset_Velocity_Scale_Max;
            struct vector2D Rotation_Time_Velocity_Scale;
            // CUSTOM: unnamed_field_698
        };
        struct Shake Shake_ent;
        // CUSTOM: Advanced___Position
        struct Composition_Reference{
            struct Composition_Placement{
                struct tagBlock<path> path_ent;
                uint32_t guid;
            };
            struct Composition_Placement Composition_Placement_ent;
            longBlockIndex Composition_Beat;
            uint32_t Composition_Index;
            string_id Composition_Camera_Track_Name;
            string_id Composition_Puppet_Track_Name;
        };
        struct Composition_Reference Composition_Reference_ent;
        // CUSTOM: unnamed_field_704
    };
    struct Camera_Transform Camera_Transform_ent;
    // CUSTOM: Blend
    float Starting_Focal_Length;
    float Starting_Focus_Distance;
    float Starting_F_Stop;
    uint32_t Starting_Bokeh_Side_Count;
    float Blend_In_Time;
    float Blend_Out_Time;
    struct Transform_Blend_Curve{
        uint8_t enum_Curve_Type;
        uint8_t generated_pade4ec;
        uint16_t generated_pade4ec_2;
        struct tagReference Curve_Definition;
        string_id Curve_Name;
    };
    struct Transform_Blend_Curve Transform_Blend_Curve_ent;
    struct Properties_Blend_Curve{
        uint8_t enum_Curve_Type;
        uint8_t generated_pade4ec;
        uint16_t generated_pade4ec_2;
        struct tagReference Curve_Definition;
        string_id Curve_Name;
    };
    struct Properties_Blend_Curve Properties_Blend_Curve_ent;
    // CUSTOM: unnamed_field_709
    // CUSTOM: From_Gameplay_Transition
    struct From_Gameplay_Transition{
        struct tagReference Animation_Curve;
        string_id Transform_Curve_Name;
        string_id Focal_Length_Curve_Name;
        string_id Focus_Distance_Curve_Name;
        string_id F_Stop_Curve_Name;
        string_id Perspective_Curve_Name;
        string_id Variant_Curve_Name;
        string_id Variant_Name;
        string_id Invisible_Curve_Name;
        float Animation_Time;
        float Animation_Playback_Scalar;
    };
    struct From_Gameplay_Transition From_Gameplay_Transition_ent;
    // CUSTOM: unnamed_field_712
    // CUSTOM: To_Gameplay_Transition
    struct To_Gameplay_Transition{
        struct tagReference Animation_Curve;
        string_id Transform_Curve_Name;
        string_id Focal_Length_Curve_Name;
        string_id Focus_Distance_Curve_Name;
        string_id F_Stop_Curve_Name;
        string_id Perspective_Curve_Name;
        string_id Variant_Curve_Name;
        string_id Variant_Name;
        string_id Invisible_Curve_Name;
        float Animation_Time;
        float Animation_Playback_Scalar;
    };
    struct To_Gameplay_Transition To_Gameplay_Transition_ent;
    // CUSTOM: unnamed_field_715
    // CUSTOM: Proximity
    struct Proximity{
        uint8_t flags_Flags_24;
        uint8_t generated_pad82ac;
        uint16_t generated_pad82ac_2;
        float Desired_Focal_Length;
        float Desired_Focus_Distance;
        float Desired_F_Stop;
        uint32_t Desired_Bokeh_Side_Count;
        struct tagReference Proximity_Curve;
        string_id Transform_Curve_Name;
        string_id Focal_Length_Curve_Name;
        string_id Focus_Distance_Curve_Name;
        string_id F_Stop_Curve_Name;
        string_id Bokeh_Side_Count_Curve_Name;
        string_id Gaze_Outer_Angle_Curve_Name;
        string_id Gaze_Inner_Angle_Curve_Name;
        float Outer_Distance;
        float Inner_Distance;
        float Catch_Up_Time;
        // CUSTOM: Source
        longBlockIndex Source_Cage_Attachment;
        string_id Source_Cage_Point;
        // CUSTOM: unnamed_field_717
        // CUSTOM: Destination
        struct Destination_Object_Reference{
            struct tagBlock<path> path_ent;
            uint32_t guid;
        };
        struct Destination_Object_Reference Destination_Object_Reference_ent;
        longBlockIndex Destination_Cage_Attachment;
        string_id Destination_Cage_Point;
        // CUSTOM: unnamed_field_721
    };
    struct Proximity Proximity_ent;
    // CUSTOM: unnamed_field_724
    // CUSTOM: Proximity_Advanced
    struct tagBlock<Proximity_Advanced_Camera> Proximity_Advanced_Camera_ent;
    // CUSTOM: unnamed_field_752
    // CUSTOM: Player_Controlled_Zoom
    struct tagBlock<Zoom_Settings> Zoom_Settings_ent;
    // CUSTOM: unnamed_field_757
};










struct Blend_In_Proximity{
    struct Source{
        longBlockIndex Cage_Attachment;
        string_id Cage_Point;
    };
    struct Source Source_ent;
    struct Destination{
        longBlockIndex Cage_Attachment;
        string_id Cage_Point;
    };
    struct Destination Destination_ent;
    struct Camera_Properties_at_Destination{
        uint16_t flags_Flags_27;
        uint16_t generated_pad8e75;
        float Blend_Time;
        uint8_t Position_Dampen_Percentage;
        uint8_t generated_pad7494;
        uint16_t generated_pad7494_2;
        float Position_Dampen_Time;
        uint8_t Rotation_Dampen_Percentage;
        uint8_t generated_pad27df;
        uint16_t generated_pad27df_2;
        float Rotation_Dampen_Time;
        struct Transform_Blend_Curve{
            uint8_t enum_Curve_Type;
            uint8_t generated_pade4ec;
            uint16_t generated_pade4ec_2;
            struct tagReference Curve_Definition;
            string_id Curve_Name;
        };
        struct Transform_Blend_Curve Transform_Blend_Curve_ent;
        struct Position_Point{
            longBlockIndex Cage_Attachment;
            string_id Cage_Point;
        };
        struct Position_Point Position_Point_ent;
        struct Gaze{
            float Distance;
            angle Outer_Angle;
            angle Inner_Angle;
            angle Velocity;
            struct vector2D Source_Slide_Range_Min;
            struct vector2D Source_Slide_Range_Max;
            struct vector2D Target_Slide_Range;
            uint8_t Slide_Dampen_Percentage;
            uint8_t generated_pada647;
            uint16_t generated_pada647_2;
            float Slide_Dampen_Time;
            // CUSTOM: Input_Velocity_Curve
            struct Input_Velocity_Curve{
                uint8_t enum_Curve_Type;
                uint8_t generated_pade4ec;
                uint16_t generated_pade4ec_2;
                struct tagReference Curve_Definition;
                string_id Curve_Name;
            };
            struct Input_Velocity_Curve Input_Velocity_Curve_ent;
            // CUSTOM: unnamed_field_781
            // CUSTOM: Velocity_Curve
            struct Velocity_Curve{
                uint8_t enum_Curve_Type;
                uint8_t generated_pade4ec;
                uint16_t generated_pade4ec_2;
                struct tagReference Curve_Definition;
                string_id Curve_Name;
            };
            struct Velocity_Curve Velocity_Curve_ent;
            // CUSTOM: unnamed_field_784
            struct tagBlock<Gazes> Gazes_ent;
        };
        struct Gaze Gaze_ent;
        struct Properties_Blend_Curve{
            uint8_t enum_Curve_Type;
            uint8_t generated_pade4ec;
            uint16_t generated_pade4ec_2;
            struct tagReference Curve_Definition;
            string_id Curve_Name;
        };
        struct Properties_Blend_Curve Properties_Blend_Curve_ent;
        float Focal_Length;
        float Focus_Distance;
        float F_Stop;
    };
    struct Camera_Properties_at_Destination Camera_Properties_at_Destination_ent;
    uint8_t flags_Flags_28;
    uint8_t generated_pad2e4f;
    uint16_t generated_pad2e4f_2;
    float Outer_Edge;
    float Inner_Edge;
};










struct Camera_Properties{
    struct Blend_In_Properties{
        uint16_t flags_Flags_26;
        uint16_t generated_pad8e75;
        float Blend_Time;
        uint8_t Position_Dampen_Percentage;
        uint8_t generated_pad7494;
        uint16_t generated_pad7494_2;
        float Position_Dampen_Time;
        uint8_t Rotation_Dampen_Percentage;
        uint8_t generated_pad27df;
        uint16_t generated_pad27df_2;
        float Rotation_Dampen_Time;
        struct Transform_Blend_Curve{
            uint8_t enum_Curve_Type;
            uint8_t generated_pade4ec;
            uint16_t generated_pade4ec_2;
            struct tagReference Curve_Definition;
            string_id Curve_Name;
        };
        struct Transform_Blend_Curve Transform_Blend_Curve_ent;
        struct Position_Point{
            longBlockIndex Cage_Attachment;
            string_id Cage_Point;
        };
        struct Position_Point Position_Point_ent;
        struct Gaze{
            float Distance;
            angle Outer_Angle;
            angle Inner_Angle;
            angle Velocity;
            struct vector2D Source_Slide_Range_Min;
            struct vector2D Source_Slide_Range_Max;
            struct vector2D Target_Slide_Range;
            uint8_t Slide_Dampen_Percentage;
            uint8_t generated_pada647;
            uint16_t generated_pada647_2;
            float Slide_Dampen_Time;
            // CUSTOM: Input_Velocity_Curve
            struct Input_Velocity_Curve{
                uint8_t enum_Curve_Type;
                uint8_t generated_pade4ec;
                uint16_t generated_pade4ec_2;
                struct tagReference Curve_Definition;
                string_id Curve_Name;
            };
            struct Input_Velocity_Curve Input_Velocity_Curve_ent;
            // CUSTOM: unnamed_field_763
            // CUSTOM: Velocity_Curve
            struct Velocity_Curve{
                uint8_t enum_Curve_Type;
                uint8_t generated_pade4ec;
                uint16_t generated_pade4ec_2;
                struct tagReference Curve_Definition;
                string_id Curve_Name;
            };
            struct Velocity_Curve Velocity_Curve_ent;
            // CUSTOM: unnamed_field_766
            struct tagBlock<Gazes> Gazes_ent;
        };
        struct Gaze Gaze_ent;
        struct Properties_Blend_Curve{
            uint8_t enum_Curve_Type;
            uint8_t generated_pade4ec;
            uint16_t generated_pade4ec_2;
            struct tagReference Curve_Definition;
            string_id Curve_Name;
        };
        struct Properties_Blend_Curve Properties_Blend_Curve_ent;
        float Focal_Length;
        float Focus_Distance;
        float F_Stop;
    };
    struct Blend_In_Properties Blend_In_Properties_ent;
    struct tagBlock<Blend_In_Proximity> Blend_In_Proximity_ent;
    struct Blend_Out_Properties{
        uint16_t flags_Flags_29;
        uint16_t generated_pad8e75;
        float Blend_Time;
        uint8_t Position_Dampen_Percentage;
        uint8_t generated_pad7494;
        uint16_t generated_pad7494_2;
        float Position_Dampen_Time;
        uint8_t Rotation_Dampen_Percentage;
        uint8_t generated_pad27df;
        uint16_t generated_pad27df_2;
        float Rotation_Dampen_Time;
        struct Transform_Blend_Curve{
            uint8_t enum_Curve_Type;
            uint8_t generated_pade4ec;
            uint16_t generated_pade4ec_2;
            struct tagReference Curve_Definition;
            string_id Curve_Name;
        };
        struct Transform_Blend_Curve Transform_Blend_Curve_ent;
        struct Position_Point{
            longBlockIndex Cage_Attachment;
            string_id Cage_Point;
        };
        struct Position_Point Position_Point_ent;
        struct Gaze{
            float Distance;
            angle Outer_Angle;
            angle Inner_Angle;
            angle Velocity;
            struct vector2D Source_Slide_Range_Min;
            struct vector2D Source_Slide_Range_Max;
            struct vector2D Target_Slide_Range;
            uint8_t Slide_Dampen_Percentage;
            uint8_t generated_pada647;
            uint16_t generated_pada647_2;
            float Slide_Dampen_Time;
            // CUSTOM: Input_Velocity_Curve
            struct Input_Velocity_Curve{
                uint8_t enum_Curve_Type;
                uint8_t generated_pade4ec;
                uint16_t generated_pade4ec_2;
                struct tagReference Curve_Definition;
                string_id Curve_Name;
            };
            struct Input_Velocity_Curve Input_Velocity_Curve_ent;
            // CUSTOM: unnamed_field_798
            // CUSTOM: Velocity_Curve
            struct Velocity_Curve{
                uint8_t enum_Curve_Type;
                uint8_t generated_pade4ec;
                uint16_t generated_pade4ec_2;
                struct tagReference Curve_Definition;
                string_id Curve_Name;
            };
            struct Velocity_Curve Velocity_Curve_ent;
            // CUSTOM: unnamed_field_801
            struct tagBlock<Gazes> Gazes_ent;
        };
        struct Gaze Gaze_ent;
        struct Properties_Blend_Curve{
            uint8_t enum_Curve_Type;
            uint8_t generated_pade4ec;
            uint16_t generated_pade4ec_2;
            struct tagReference Curve_Definition;
            string_id Curve_Name;
        };
        struct Properties_Blend_Curve Properties_Blend_Curve_ent;
        float Focal_Length;
        float Focus_Distance;
        float F_Stop;
    };
    struct Blend_Out_Properties Blend_Out_Properties_ent;
    struct Blend_From_Properties{
        uint16_t flags_Flags_30;
        uint16_t generated_pad8e75;
        float Blend_Time;
        uint8_t Position_Dampen_Percentage;
        uint8_t generated_pad7494;
        uint16_t generated_pad7494_2;
        float Position_Dampen_Time;
        uint8_t Rotation_Dampen_Percentage;
        uint8_t generated_pad27df;
        uint16_t generated_pad27df_2;
        float Rotation_Dampen_Time;
        struct Transform_Blend_Curve{
            uint8_t enum_Curve_Type;
            uint8_t generated_pade4ec;
            uint16_t generated_pade4ec_2;
            struct tagReference Curve_Definition;
            string_id Curve_Name;
        };
        struct Transform_Blend_Curve Transform_Blend_Curve_ent;
        struct Position_Point{
            longBlockIndex Cage_Attachment;
            string_id Cage_Point;
        };
        struct Position_Point Position_Point_ent;
        struct Gaze{
            float Distance;
            angle Outer_Angle;
            angle Inner_Angle;
            angle Velocity;
            struct vector2D Source_Slide_Range_Min;
            struct vector2D Source_Slide_Range_Max;
            struct vector2D Target_Slide_Range;
            uint8_t Slide_Dampen_Percentage;
            uint8_t generated_pada647;
            uint16_t generated_pada647_2;
            float Slide_Dampen_Time;
            // CUSTOM: Input_Velocity_Curve
            struct Input_Velocity_Curve{
                uint8_t enum_Curve_Type;
                uint8_t generated_pade4ec;
                uint16_t generated_pade4ec_2;
                struct tagReference Curve_Definition;
                string_id Curve_Name;
            };
            struct Input_Velocity_Curve Input_Velocity_Curve_ent;
            // CUSTOM: unnamed_field_814
            // CUSTOM: Velocity_Curve
            struct Velocity_Curve{
                uint8_t enum_Curve_Type;
                uint8_t generated_pade4ec;
                uint16_t generated_pade4ec_2;
                struct tagReference Curve_Definition;
                string_id Curve_Name;
            };
            struct Velocity_Curve Velocity_Curve_ent;
            // CUSTOM: unnamed_field_817
            struct tagBlock<Gazes> Gazes_ent;
        };
        struct Gaze Gaze_ent;
        struct Properties_Blend_Curve{
            uint8_t enum_Curve_Type;
            uint8_t generated_pade4ec;
            uint16_t generated_pade4ec_2;
            struct tagReference Curve_Definition;
            string_id Curve_Name;
        };
        struct Properties_Blend_Curve Properties_Blend_Curve_ent;
        float Focal_Length;
        float Focus_Distance;
        float F_Stop;
    };
    struct Blend_From_Properties Blend_From_Properties_ent;
};




struct Composition_Properties{
    struct Placed_Composition{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Placed_Composition Placed_Composition_ent;
    struct tagReference Composition;
    struct Anchor_Point{
        longBlockIndex Cage_Attachment;
        string_id Cage_Point;
    };
    struct Anchor_Point Anchor_Point_ent;
    uint8_t flags_Flags_31;
    uint8_t generated_pad62be;
    uint16_t generated_pad62be_2;
    float Cage_Blend_In_Time;
    float Cage_Blend_Out_Time;
};




struct Associated_Objects{
    struct Associated_Object{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Associated_Object Associated_Object_ent;
};


struct Narrative_Sequences{
    char Sequence_Name[256];
    struct tagBlock<Associated_Objects> Associated_Objects_ent;
};


struct AI_Control{
    uint8_t flags_Flags_32;
};


struct Malleable_Properties{
    struct tagReference Data;
};


struct Weapon_Disable{
    struct tagReference Curve_Definition;
    string_id Activate_Curve_Name;
    string_id Deactivate_Curve_Name;
};


struct Grenade_Disable{
    struct tagReference Curve_Definition;
    string_id Activate_Curve_Name;
    string_id Deactivate_Curve_Name;
};


struct Animation_Mode_Curves{
    struct tagReference Curve_Definition;
    string_id Activate_Curve_Name;
    string_id Deactivate_Curve_Name;
};


struct Weapon_State_Curves{
    struct tagReference Curve_Definition;
    string_id Activate_Curve_Name;
    string_id Deactivate_Curve_Name;
};




struct Activation_Curves{
    struct tagReference Curve_Definition;
    string_id Activate_Curve_Name;
    string_id Deactivate_Curve_Name;
};


struct Move_To_Component{
    uint8_t flags_Flags_33;
    uint8_t generated_pad94cc;
    uint16_t generated_pad94cc_2;
    struct Destination{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Destination Destination_ent;
    float Close_Enough_Distance;
    angle Close_Enough_Angle;
    float Time;
    float Linear_Velocity;
    angle Angular_Velocity;
    longBlockIndex Composition_Beat;
    uint32_t Composition_Index;
    string_id Composition_Track_Name;
    struct tagBlock<Activation_Curves> Activation_Curves_ent;
};


struct New_Player_Control{
    struct tagBlock<Malleable_Properties> Malleable_Properties_ent;
    struct tagBlock<Weapon_Disable> Weapon_Disable_ent;
    struct tagBlock<Grenade_Disable> Grenade_Disable_ent;
    // CUSTOM: Animation
    string_id Animation_Mode;
    struct tagBlock<Animation_Mode_Curves> Animation_Mode_Curves_ent;
    // CUSTOM: unnamed_field_841
    // CUSTOM: Weapon_State
    uint8_t enum_Weapon_State;
    uint8_t generated_pad1840;
    uint16_t generated_pad1840_2;
    float Weapon_State_Activate_Transition_Time;
    float Weapon_State_Deactivate_Transition_Time;
    struct tagBlock<Weapon_State_Curves> Weapon_State_Curves_ent;
    // CUSTOM: unnamed_field_844
    struct tagBlock<Move_To_Component> Move_To_Component_ent;
};






struct Player_Control{
    uint32_t flags_Flags_34;
    string_id Animation_Mode;
    // CUSTOM: Weapon_State
    uint8_t enum_Weapon_State;
    uint8_t generated_pad5e1a;
    uint16_t generated_pad5e1a_2;
    float Activate_Transition_Time;
    float Deactivate_Transition_Time;
    // CUSTOM: unnamed_field_851
    uint8_t Movement_Speed;
    uint8_t generated_padaacf;
    uint16_t generated_padaacf_2;
    float Movement_Speed_Blend_Time;
    uint8_t Sprint_Speed;
    uint8_t generated_padf784;
    uint16_t generated_padf784_2;
    struct tagBlock<Move_To_Component> Move_To_Component_ent;
};


struct Player_HUD_Properties{
    uint32_t flags_Flags_36;
    string_id Broadcast_Activation_Event_Name;
    float Broadcast_Activation_Event_Delay;
    string_id Broadcast_Deactivation_Event_Name;
    float Broadcast_Deactivation_Event_Delay;
};


struct At_Activation{
    uint8_t enum_Change_Type;
    uint8_t generated_padcc02;
    uint16_t generated_padcc02_2;
    string_id Persistence_Key;
    uint32_t Change_Value;
};


struct At_Deactivation{
    uint8_t enum_Change_Type;
    uint8_t generated_padcc02;
    uint16_t generated_padcc02_2;
    string_id Persistence_Key;
    uint32_t Change_Value;
};


struct Persistence{
    struct tagBlock<At_Activation> At_Activation_ent;
    struct tagBlock<At_Deactivation> At_Deactivation_ent;
};












struct Proximity_Advanced_Lighting{
    uint8_t flags_Flags_39;
    uint8_t generated_pad5e44;
    uint16_t generated_pad5e44_2;
    struct Damping{
        uint8_t Position_Dampen_Percentage;
        uint8_t generated_pad6a9e;
        uint16_t generated_pad6a9e_2;
        float Position_Dampen_Time;
        uint8_t Rotation_Dampen_Percentage;
        uint8_t generated_padb753;
        uint16_t generated_padb753_2;
        float Rotation_Dampen_Time;
    };
    struct Damping Damping_ent;
    struct Position_Point{
        longBlockIndex Cage_Attachment;
        string_id Cage_Point;
    };
    struct Position_Point Position_Point_ent;
    struct Gaze{
        float Distance;
        angle Outer_Angle;
        angle Inner_Angle;
        angle Velocity;
        struct vector2D Source_Slide_Range_Min;
        struct vector2D Source_Slide_Range_Max;
        struct vector2D Target_Slide_Range;
        uint8_t Slide_Dampen_Percentage;
        uint8_t generated_pada647;
        uint16_t generated_pada647_2;
        float Slide_Dampen_Time;
        // CUSTOM: Input_Velocity_Curve
        struct Input_Velocity_Curve{
            uint8_t enum_Curve_Type;
            uint8_t generated_pade4ec;
            uint16_t generated_pade4ec_2;
            struct tagReference Curve_Definition;
            string_id Curve_Name;
        };
        struct Input_Velocity_Curve Input_Velocity_Curve_ent;
        // CUSTOM: unnamed_field_887
        // CUSTOM: Velocity_Curve
        struct Velocity_Curve{
            uint8_t enum_Curve_Type;
            uint8_t generated_pade4ec;
            uint16_t generated_pade4ec_2;
            struct tagReference Curve_Definition;
            string_id Curve_Name;
        };
        struct Velocity_Curve Velocity_Curve_ent;
        // CUSTOM: unnamed_field_890
        struct tagBlock<Gazes> Gazes_ent;
    };
    struct Gaze Gaze_ent;
};


struct Light_Properties{
    struct tagReference Light_Tag;
    struct Light_Transform{
        uint8_t flags_Flags_37;
        uint8_t generated_pad5e44;
        uint16_t generated_pad5e44_2;
        struct Damping{
            uint8_t Position_Dampen_Percentage;
            uint8_t generated_pad6a9e;
            uint16_t generated_pad6a9e_2;
            float Position_Dampen_Time;
            uint8_t Rotation_Dampen_Percentage;
            uint8_t generated_padb753;
            uint16_t generated_padb753_2;
            float Rotation_Dampen_Time;
        };
        struct Damping Damping_ent;
        struct Position_Point{
            longBlockIndex Cage_Attachment;
            string_id Cage_Point;
        };
        struct Position_Point Position_Point_ent;
        struct Gaze{
            float Distance;
            angle Outer_Angle;
            angle Inner_Angle;
            angle Velocity;
            struct vector2D Source_Slide_Range_Min;
            struct vector2D Source_Slide_Range_Max;
            struct vector2D Target_Slide_Range;
            uint8_t Slide_Dampen_Percentage;
            uint8_t generated_pada647;
            uint16_t generated_pada647_2;
            float Slide_Dampen_Time;
            // CUSTOM: Input_Velocity_Curve
            struct Input_Velocity_Curve{
                uint8_t enum_Curve_Type;
                uint8_t generated_pade4ec;
                uint16_t generated_pade4ec_2;
                struct tagReference Curve_Definition;
                string_id Curve_Name;
            };
            struct Input_Velocity_Curve Input_Velocity_Curve_ent;
            // CUSTOM: unnamed_field_864
            // CUSTOM: Velocity_Curve
            struct Velocity_Curve{
                uint8_t enum_Curve_Type;
                uint8_t generated_pade4ec;
                uint16_t generated_pade4ec_2;
                struct tagReference Curve_Definition;
                string_id Curve_Name;
            };
            struct Velocity_Curve Velocity_Curve_ent;
            // CUSTOM: unnamed_field_867
            struct tagBlock<Gazes> Gazes_ent;
        };
        struct Gaze Gaze_ent;
    };
    struct Light_Transform Light_Transform_ent;
    struct Activate_Transition{
        struct tagReference Animation_Curve;
        string_id Transform_Curve_Name;
        string_id Dimmer_Curve_Name;
        string_id Intensity_Curve_Name;
        string_id Color_Curve_Name;
        string_id Near_Attenuation_Curve_Name;
        string_id Far_Attenuation_Curve_Name;
        string_id Inner_Cone_Angle_Curve_Name;
        string_id Outer_Cone_Angle_Curve_Name;
        float Animation_Time;
    };
    struct Activate_Transition Activate_Transition_ent;
    struct Proximity{
        uint8_t flags_Flags_38;
        uint8_t generated_padedff;
        uint16_t generated_padedff_2;
        struct tagReference Proximity_Curve;
        string_id Transform_Curve_Name;
        string_id Dimmer_Curve_Name;
        string_id Intensity_Curve_Name;
        string_id Color_Curve_Name;
        string_id Near_Attenuation_Curve_Name;
        string_id Far_Attenuation_Curve_Name;
        string_id Inner_Cone_Angle_Curve_Name;
        string_id Outer_Cone_Angle_Curve_Name;
        float Outer_Distance;
        float Inner_Distance;
        float Catch_Up_Time;
        // CUSTOM: Source
        longBlockIndex Source_Cage_Attachment;
        string_id Source_Cage_Point;
        // CUSTOM: unnamed_field_877
        // CUSTOM: Destination
        struct Destination_Object_Reference{
            struct tagBlock<path> path_ent;
            uint32_t guid;
        };
        struct Destination_Object_Reference Destination_Object_Reference_ent;
        longBlockIndex Destination_Cage_Attachment;
        string_id Destination_Cage_Point;
        // CUSTOM: unnamed_field_881
    };
    struct Proximity Proximity_ent;
    struct tagBlock<Proximity_Advanced_Lighting> Proximity_Advanced_Lighting_ent;
};


struct Control_Parameter_Properties{
    longBlockIndex Set_On_Activate;
    longBlockIndex Unset_On_Activate;
    longBlockIndex Set_On_Deactivate;
    longBlockIndex Unset_On_Deactivate;
};




struct Transition_Properties{
    uint32_t flags_Flags_40;
    struct Destination{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Destination Destination_ent;
    struct vector2D Close_Enough_Distance_Range;
    struct vector2D Close_Enough_Angle_Range;
    float Time;
    struct vector2D Linear_Velocity_Range;
    struct vector2D Angular_Velocity_Range;
    float Lower_Weapon_Time;
    float Raise_Weapon_Time;
    float Hide_Player_Time;
    float Lower_Weapon_Delay_Override;
    float Raise_Weapon_Delay_Override;
    float HUD_Off_Delay_Override;
    float HUD_On_Delay_Override;
    float Move_To_Delay_Override;
    string_id Composition_Puppet_Track_Name;
    string_id Composition_Camera_Track_Name;
    uint8_t enum_Move_To_Slide_Curve;
    uint8_t enum_Gaze_Blend_Curve;
    uint16_t generated_pad0e2d;
};


struct Beats{
    string_id Name;
    // CUSTOM: Activation
    struct Activation{
        uint8_t flags_Flags_17;
        uint8_t generated_padd35f;
        uint16_t generated_padd35f_2;
        longBlockIndex On_Control_Parameter_Set;
        string_id On_Trigger_Volume_Enter_Deprecated;
        struct On_Trigger_Volume_Enter{
            struct tagBlock<path> path_ent;
            uint32_t guid;
        };
        struct On_Trigger_Volume_Enter On_Trigger_Volume_Enter_ent;
        string_id On_Trigger_Volume_Exit_Deprecated;
        struct On_Trigger_Volume_Exit{
            struct tagBlock<path> path_ent;
            uint32_t guid;
        };
        struct On_Trigger_Volume_Exit On_Trigger_Volume_Exit_ent;
        longBlockIndex On_Beat_Activate;
        longBlockIndex On_Beat_Deactivate;
        longBlockIndex Is_Beat_Inactive;
        longBlockIndex Is_Beat_Active;
        longBlockIndex Persistence_Check;
        longBlockIndex Move_to_Finished;
        longBlockIndex HUD_Off_Finished;
    };
    struct Activation Activation_ent;
    struct tagBlock<Additional_Activations> Additional_Activations_ent;
    // CUSTOM: unnamed_field_667
    // CUSTOM: Deactivation
    struct Deactivation{
        uint8_t flags_Flags_19;
        uint8_t generated_pada24a;
        uint16_t generated_pada24a_2;
        longBlockIndex On_Control_Parameter_Set;
        string_id On_Trigger_Volume_Enter_Deprecated;
        struct On_Trigger_Volume_Enter{
            struct tagBlock<path> path_ent;
            uint32_t guid;
        };
        struct On_Trigger_Volume_Enter On_Trigger_Volume_Enter_ent;
        string_id On_Trigger_Volume_Exit_Deprecated;
        struct On_Trigger_Volume_Exit{
            struct tagBlock<path> path_ent;
            uint32_t guid;
        };
        struct On_Trigger_Volume_Exit On_Trigger_Volume_Exit_ent;
        longBlockIndex On_Beat_Activate;
        longBlockIndex On_Beat_Deactivate;
        longBlockIndex Is_Beat_Inactive;
        longBlockIndex Is_Beat_Active;
        float Time_in_Beat;
        longBlockIndex Persistence_Check;
        longBlockIndex Move_to_Finished;
        longBlockIndex HUD_Off_Finished;
    };
    struct Deactivation Deactivation_ent;
    struct tagBlock<Additional_Deactivations> Additional_Deactivations_ent;
    // CUSTOM: unnamed_field_679
    uint8_t flags_Flags_21;
    uint8_t generated_pad0447;
    uint16_t generated_pad0447_2;
    struct tagBlock<New_Camera_Properties> New_Camera_Properties_ent;
    struct tagBlock<Camera_Properties> Camera_Properties_ent;
    struct tagBlock<Composition_Properties> Composition_Properties_ent;
    struct tagBlock<Narrative_Sequences> Narrative_Sequences_ent;
    struct tagBlock<AI_Control> AI_Control_ent;
    struct tagBlock<New_Player_Control> New_Player_Control_ent;
    struct tagBlock<Player_Control> Player_Control_ent;
    struct tagBlock<Player_HUD_Properties> Player_HUD_Properties_ent;
    struct tagBlock<Persistence> Persistence_ent;
    struct tagBlock<Light_Properties> Light_Properties_ent;
    struct tagBlock<Control_Parameter_Properties> Control_Parameter_Properties_ent;
    struct tagBlock<Transition_Properties> Transition_Properties_ent;
};






struct Narrative_Moments{
    string_id Name;
    struct Volume{
        struct tagBlock<Points> Points_ent;
        float height;
        float sink;
        struct point3D center_point;
        float trivial_cull_radius_squared;
        struct point3D aabbCenter;
        struct point3D aabbExtents;
        struct tagBlock<nativePoints2D> nativePoints2D_ent;
    };
    struct Volume Volume_ent;
    uint8_t flags_Flags_16;
    uint8_t generated_pad9bbf;
    uint16_t generated_pad9bbf_2;
    struct Blink_Location{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Blink_Location Blink_Location_ent;
    struct tagBlock<Control_Parameters> Control_Parameters_ent;
    struct tagBlock<Cage_Attachments> Cage_Attachments_ent;
    struct tagBlock<Persistence_Checks> Persistence_Checks_ent;
    struct tagBlock<Beats> Beats_ent;
    struct tagBlock<Runtime_Triangles> Runtime_Triangles_ent;
    struct tagBlock<Editor_Metadata> Editor_Metadata_ent;
    longBlockIndex Editor_Folder;
    string_id Module_ID;
    uint32_t Guid;
};


struct Example_Entities{
    string_id Name;
    struct vector3D Position;
    longBlockIndex editor_folder;
    string_id moduleId;
};


struct soft_ceilings{
    uint16_t flags_flags_29;
    uint16_t flags_runtime_flags;
    string_id name;
    uint16_t enum_type;
    uint16_t generated_paddf27;
};




struct player_starting_profile{
    char name[32];
    float starting_health_damage;
    float starting_shield_damage;
    struct tagReference primary_weapon;
    uint16_t primaryrounds_loaded;
    uint16_t primaryrounds_total;
    struct tagReference primary_weapon_configuration;
    string_id primary_weapon_variant_name;
    struct tagReference secondary_weapon;
    uint16_t secondaryrounds_loaded;
    uint16_t secondaryrounds_total;
    struct tagReference secondary_weapon_configuration;
    string_id secondary_weapon_variant_name;
    uint8_t starting_fragmentation_grenade_count;
    uint8_t starting_plasma_grenade_count;
    uint8_t starting_lightning_grenade_count;
    uint8_t starting_gravity_grenade_count;
    uint8_t starting_spike_grenade_count;
    uint8_t starting_pulse_grenade_count;
    uint8_t starting_grenade_type_7_count;
    uint8_t starting_grenade_type_8_count;
    struct tagReference starting_equipment;
    string_id starting_tactical_package;
    string_id starting_support_upgrade;
    shortBlockIndex editor_folder;
    uint16_t generated_padc11b;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};




struct player_starting_locations{
    struct point3D position;
    uint32_t _navMeshUIDOffaceref;
    uint32_t _packedKeyOffaceref;
    angle facing;
    angle pitch;
    string_id name;
    longBlockIndex editor_folder;
    string_id module_id;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};




struct ambient_action_points{
    string_id ambient_action_point_name;
    struct vector3D position;
    realEulerAngle2D yaw_pitch;
    struct tagReference asset;
    float max_distance_override;
    string_id debug_squad_override_only_used_for_debugging_compositions;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};


struct sector_points{
    struct point3D position;
};


struct runtime_triangles{
    realPlane3D plane_0;
    realPlane3D plane_1;
    realPlane3D plane_2;
    realPlane3D plane_3;
    realPlane3D plane_4;
    struct point2D vertex_0;
    struct point2D vertex_1;
    struct point2D vertex_2;
    uint64_t pad;
};






struct voxel_LODs{
    float voxel_size;
    float breakpoint;
};


struct inner_points{
    struct point3D position;
};


struct outer_points{
    struct point3D position;
};




struct acoustic_zones{
    uint32_t guid;
    string_id name;
    uint8_t flags_placement_flags_15;
    uint8_t flags_zone_config_flags;
    uint8_t enum_type;
    uint8_t generated_pada6e0;
    struct tagBlock<voxel_LODs> voxel_LODs_ent;
    float voxel_LOD_Z_ratio;
    float transition_speed;
    struct tagReference base_air_sound;
    struct tagReference base_air_sweetener_sound;
    uint32_t enum_environment_type;
    struct tagReference reverb_settings;
    string_id mix_state_group;
    string_id mix_state_value;
    struct point3D position;
    realEulerAngle3D rotation;
    struct point3D scale;
    struct Dumpling{
        struct tagBlock<inner_points> inner_points_ent;
        struct tagBlock<outer_points> outer_points_ent;
        float height;
        float sink;
        float inner_value;
        float outer_value;
        struct point3D center_point;
        float trivial_cull_radius_squared;
        float bound_volume;
    };
    struct Dumpling Dumpling_ent;
    uint16_t local_Priority;
    uint8_t kit_depth;
    uint8_t generated_padc0c1;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct BspMapRuntimeRefCounter{
        uint16_t Bsp_Ref_Count;
        uint16_t Layer_Ref_Count;
    };
    struct BspMapRuntimeRefCounter BspMapRuntimeRefCounter_ent;
};








struct acoustic_portals{
    uint32_t guid;
    string_id name;
    uint8_t enum_transmissivity_type;
    uint8_t generated_pad3408;
    uint16_t generated_pad3408_2;
    struct manual_zone_front{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct manual_zone_front manual_zone_front_ent;
    struct manual_zone_back{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct manual_zone_back manual_zone_back_ent;
    uint32_t detail;
    float tolerance;
    uint16_t flags_flags_31;
    uint16_t generated_pad4de9;
    float min_transmissivity;
    float max_transmissivity;
    float min_openness;
    float max_openness;
    struct vector3D door_center_offset;
    struct tagReference front_entry_sound;
    struct tagReference front_exit_sound;
    struct tagReference back_entry_sound;
    struct tagReference back_exit_sound;
    struct point3D position;
    realEulerAngle3D rotation;
    struct vector2D shearX;
    struct vector2D shearY;
    struct vector2D shearZ;
    struct point3D extents;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct BspMapRuntimeRefCounter{
        uint16_t Bsp_Ref_Count;
        uint16_t Layer_Ref_Count;
    };
    struct BspMapRuntimeRefCounter BspMapRuntimeRefCounter_ent;
};


struct recorded_animations{
    char name[32];
    uint8_t version;
    uint8_t raw_animation_data;
    uint8_t unit_control_data_version;
    uint8_t generated_pade32d;
    uint16_t length_of_animation;
    uint16_t generated_padc94c;
    struct dataReference recorded_animation_event_stream;
};






struct decals{
    struct tagReference asset;
    uint8_t flags_flags_32;
    uint8_t generated_pad9ec6;
    uint16_t generated_pad9ec6_2;
    struct manual_bsp_flags{
        struct tagBlock<references> references_ent;
        struct dataReference flags;
        uint32_t bsp_index;
    };
    struct manual_bsp_flags manual_bsp_flags_ent;
    realEulerAngle3D orientation;
    struct point3D position;
    float scale_x;
    float scale_y;
    float cull_angle;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};




struct area_generators{
    char name[32];
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct point3D position;
    realEulerAngle3D orientation;
    float radius;
    float vertical_radius;
    float area_min_radius;
    float area_max_radius;
    float area_height;
    float area_spacing;
    float area_point_count;
};




struct squad_groups{
    char name[32];
    shortBlockIndex parent;
    shortBlockIndex initial_objective;
    longBlockIndex editor_folder;
    string_id module_id;
    struct warzone_objective_definition_membership{
        shortBlockIndex warzone_objective_definition;
        char warzone_objective_label[32];
    };
    struct warzone_objective_definition_membership warzone_objective_definition_membership_ent;
    uint16_t generated_pad5300;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};




struct points{
    customShortBlockIndex point;
    uint16_t flags_flags_34;
    float delay;
    float angle;
    string_id activity_name;
    string_id command_script;
};


struct spawn_formations{
    struct place_on{
        uint16_t flags_difficulty_flags;
        uint16_t pad0;
    };
    struct place_on place_on_ent;
    string_id name;
    struct point3D position;
    uint32_t _navMeshUIDOffaceref;
    uint32_t _packedKeyOffaceref;
    realEulerAngle2D facing_yaw_pitch;
    float roll;
    string_id formation;
    float initial_movement_distance;
    uint16_t enum_initial_movement_mode;
    uint16_t generated_padee0b;
    string_id placement_script;
    string_id activity_name;
    string_id movement_set;
    customShortBlockIndex point_set;
    uint16_t enum_patrol_mode;
    struct tagBlock<points> points_ent;
    uint8_t flags_flags_35;
    uint8_t generated_pada156;
    uint16_t generated_pada156_2;
};




struct spawn_points{
    struct place_on{
        uint16_t flags_difficulty_flags_2;
        uint16_t pad0;
    };
    struct place_on place_on_ent;
    string_id name;
    customShortBlockIndex cell;
    uint16_t generated_pad6f52;
    struct point3D position;
    uint32_t _navMeshUIDOffaceref;
    uint32_t _packedKeyOffaceref;
    realEulerAngle2D facing_yaw_pitch;
    float roll;
    uint16_t flags_flags_36;
    uint16_t generated_padbc07;
    struct tagReference character;
    struct tagReference primary_weapon;
    struct tagReference secondary_weapon;
    struct tagReference equipment;
    struct tagReference vehicle;
    struct tagReference vehicle_configuration;
    uint16_t enum_seat_type;
    uint8_t enum_grenade_type;
    uint8_t generated_pad08bc;
    uint16_t swarm_count;
    uint16_t generated_pad5571;
    string_id actor_variant_name;
    string_id vehicle_variant_name;
    string_id voice_designator;
    float initial_movement_distance;
    uint16_t enum_initial_movement_mode;
    shortBlockIndex emitter_vehicle;
    shortBlockIndex giant_body;
    shortBlockIndex biped_body;
    string_id placement_script;
    string_id activity_name;
    string_id movement_set;
    customShortBlockIndex point_set;
    uint16_t enum_patrol_mode;
    struct tagBlock<points> points_ent;
    shortBlockIndex vehicle_body;
    uint16_t generated_pada226;
};


struct character{
    struct place_on{
        uint16_t flags_difficulty_flags_4;
        uint16_t pad0;
    };
    struct place_on place_on_ent;
    struct tagReference character_type;
    uint16_t chance;
    uint16_t generated_padc8d2;
};


struct primary_weapon{
    struct place_on{
        uint16_t flags_difficulty_flags_5;
        uint16_t pad0;
    };
    struct place_on place_on_ent;
    struct tagReference weapon_type;
    uint16_t chance;
    uint16_t generated_pada3bd;
};


struct secondary_weapon{
    struct place_on{
        uint16_t flags_difficulty_flags_6;
        uint16_t pad0;
    };
    struct place_on place_on_ent;
    struct tagReference weapon_type;
    uint16_t chance;
    uint16_t generated_pada3bd;
};






struct cells{
    // EXPLANATION: Character_Build
    string_id name;
    struct place_on{
        uint16_t flags_difficulty_flags_3;
        uint16_t pad0;
    };
    struct place_on place_on_ent;
    uint16_t normal_diff_count;
    uint16_t enum_major_upgrade;
    struct tagBlock<character> character_ent;
    struct tagBlock<primary_weapon> primary_weapon_ent;
    struct tagBlock<secondary_weapon> secondary_weapon_ent;
    struct tagBlock<equipment> equipment_ent;
    uint8_t enum_grenade_type;
    uint8_t generated_pad6c56;
    uint16_t generated_pad6c56_2;
    struct tagReference vehicle;
    string_id vehicle_variant;
    string_id Placement_script;
    string_id activity_name;
    string_id movement_set;
    customShortBlockIndex point_set;
    uint16_t enum_patrol_mode;
    struct tagBlock<points> points_ent;
};
















struct squads{
    char name[32];
    uint32_t flags_flags_33;
    uint16_t enum_team;
    shortBlockIndex parent;
    struct bsp_flags{
        struct tagBlock<references> references_ent;
        struct dataReference flags;
        uint32_t bsp_index;
    };
    struct bsp_flags bsp_flags_ent;
    shortBlockIndex initial_zone;
    shortBlockIndex initial_objective;
    customShortBlockIndex initial_task;
    uint16_t generated_pad8aa2;
    longBlockIndex editor_folder;
    struct tagBlock<spawn_formations> spawn_formations_ent;
    struct tagBlock<spawn_points> spawn_points_ent;
    string_id module_id;
    string_id template_field;
    uint32_t squad_template_index;
    struct designer{
        struct tagBlock<cells> cells_ent;
    };
    struct designer designer_ent;
    struct templated{
        struct tagBlock<cells> cells_ent;
    };
    struct templated templated_ent;
    struct warzone_objective_definition_membership{
        shortBlockIndex warzone_objective_definition;
        char warzone_objective_label[32];
    };
    struct warzone_objective_definition_membership warzone_objective_definition_membership_ent;
    uint8_t enum_bsp_policy;
    uint8_t generated_padd757;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};


struct attachments{
    uint32_t navMeshUID;
};




struct areas{
    char name[32];
    uint32_t flags_area_flags;
    struct point3D runtime_relative_mean_point;
    uint32_t _navMeshUIDOffaceref;
    uint32_t _packedKeyOffaceref;
    float runtime_standard_deviation;
    struct Nav_Mesh_Attachments{
        struct tagBlock<attachments> attachments_ent;
    };
    struct Nav_Mesh_Attachments Nav_Mesh_Attachments_ent;
    struct tagBlock<points> points_ent;
    // EXPLANATION: Generation_Properties
    uint32_t flags_flags_41;
    float extrusion;
    float sink;
    float air_firing_point_density;
};








struct zones{
    char name[32];
    uint16_t flags_flags_40;
    uint16_t generated_pad0eda;
    longBlockIndex editor_folder_index;
    struct tagBlock<areas> areas_ent;
    struct Nav_Mesh_Attachments{
        struct tagBlock<attachments> attachments_ent;
    };
    struct Nav_Mesh_Attachments Nav_Mesh_Attachments_ent;
    struct disallowed_attachment_bsps{
        struct tagBlock<references> references_ent;
        struct dataReference flags;
        uint32_t bsp_index;
    };
    struct disallowed_attachment_bsps disallowed_attachment_bsps_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};




struct nav_links{
    uint16_t enum_link_type;
    shortBlockIndex Squad_group_filter;
    uint32_t hint_data_0;
    uint16_t hint_data_1;
    uint8_t hint_data_2;
    uint8_t pad1;
    string_id name;
    uint16_t flags_Flags_41;
    uint16_t enum_force_jump_height;
    uint16_t flags_control_flags;
    uint16_t generated_pad04d0;
    struct geometry{
        struct point3D Point_0;
        struct point3D Point_1;
        struct point3D Point_2;
        struct point3D Point_3;
        uint16_t flags_invalid_points;
        uint16_t generated_pad733f;
    };
    struct geometry geometry_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};




struct pointsObjectIds{
    struct object_ID{
        uint32_t unique_id;
        uint16_t origin_bsp_index;
        uint8_t enum_type;
        uint8_t enum_source;
    };
    struct object_ID object_ID_ent;
};




struct cookie_cutters{
    string_id name;
    struct tagBlock<points> points_ent;
    struct tagBlock<pointsObjectIds> pointsObjectIds_ent;
    float z_height;
    float z_sink;
    uint16_t enum_type;
    uint16_t pad;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    uint8_t invalid;
    uint8_t generated_pad8e8a;
    uint16_t generated_pad8e8a_2;
};






struct navmesh_areas{
    struct tagBlock<points> points_ent;
    string_id name;
    float z_height;
    float z_sink;
    uint32_t enum_type;
    uint8_t isValid;
    uint8_t generated_pad7d37;
    uint16_t generated_pad7d37_2;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};


struct NavSeedPoints{
    string_id Name;
    struct point3D Position;
};




struct Tasks{
    shortBlockIndex Objective;
    customShortBlockIndex Task;
};




struct ai_opportunity_areas{
    struct tagBlock<points> points_ent;
    float z_height;
    float z_sink;
    string_id Name;
    struct point3D Mean_Position;
    float Std_Deviation;
    // Skip with length 24
    uint32_t Area_Bounds[6];
    struct tagBlock<Tasks> Tasks_ent;
    uint32_t Priority;
    float Distribution_Range;
    float Distribution_Probability;
    uint8_t enum_Distribution_Type;
    uint8_t Max_Uses;
    uint8_t User_Limit;
    uint8_t generated_padc2c0;
    struct tagReference Character_Filter_Tag;
    struct tagReference Weapon_Filter_Tag;
    uint8_t enum_Combat_Effect;
    uint8_t generated_paddca1;
    uint16_t generated_paddca1_2;
    string_id Stimulus;
    string_id Script;
    uint8_t isValid;
    uint8_t generated_pad2956;
    uint16_t generated_pad2956_2;
    // EXPLANATION: Attraction_Area
    // CUSTOM: attraction_area
    struct point3D position;
    uint32_t _navMeshUIDOffaceref;
    uint32_t _packedKeyOffaceref;
    float attraction_radius;
    // CUSTOM: unnamed_field_1003
    uint8_t enum_Opportunity_Type;
    uint8_t generated_pad4337;
    uint16_t generated_pad4337_2;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};


struct ai_recording_references{
    char recording_name[32];
};






struct point_sets{
    char name[32];
    struct tagBlock<points> points_ent;
    shortBlockIndex bsp_index;
    uint16_t generated_pad901e;
    uint32_t flags_flags_42;
    uint32_t flags_traversal_flags;
    longBlockIndex editor_folder;
    string_id module_id;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct warzone_objective_definition_membership{
        shortBlockIndex warzone_objective_definition;
        char warzone_objective_label[32];
    };
    struct warzone_objective_definition_membership warzone_objective_definition_membership_ent;
    uint16_t generated_paddcd3;
};




struct cutscene_flags{
    string_id name;
    struct point3D position;
    realEulerAngle3D facing;
    string_id module_id;
    longBlockIndex editor_folder;
    shortBlockIndex source_bsp;
    uint16_t generated_padce64;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    uint32_t Guid;
};




struct cutscene_camera_points{
    uint16_t flags_flags_43;
    uint16_t enum_type;
    char name[32];
    // CUSTOM: unnamed_field_1014
    struct point3D position;
    realEulerAngle3D orientation;
    shortBlockIndex zone_set;
    uint16_t generated_pad2c94;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};




struct cutscene_titles{
    string_id name;
    uint32_t guid;
    string_id objective_title;
    string_id objective_description;
    realFractionBounds text_bounds_X;
    realFractionBounds text_bounds_Y;
    uint16_t enum_justification;
    uint16_t enum_vertical_justification;
    uint16_t enum_font;
    uint16_t generated_pad7734;
    rgbColor text_color;
    rgbColor shadow_color;
    float fade_in_time_seconds;
    float up_time_seconds;
    float fade_out_time_seconds;
    float letter_print_time;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};






struct Flock_Sources{
    string_id name;
    uint32_t flags_source_flags;
    struct vector3D position;
    realEulerAngle2D starting_yaw_pitch;
    float radius;
    float weight;
    uint16_t bsp_index;
    uint16_t cluster_index;
    shortBlockIndex source_volume;
    shortBlockIndex initial_destination;
};


struct Flock_Destinations{
    string_id name;
    uint8_t enum_type;
    uint8_t generated_pad2d54;
    uint16_t generated_pad2d54_2;
    struct vector3D position;
    float radius;
    float max_destination_volume_penetration;
    shortBlockIndex destination_volume;
    shortBlockIndex next_destination;
};


struct flocks{
    string_id Flock_Name;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct point3D Position;
    struct tagReference Flock_Asset;
    struct active_BSPs{
        struct tagBlock<references> references_ent;
        struct dataReference flags;
        uint32_t bsp_index;
    };
    struct active_BSPs active_BSPs_ent;
    shortBlockIndex bounding_volume;
    uint16_t generated_pad2fe7;
    struct tagBlock<Flock_Sources> Flock_Sources_ent;
    // EXPLANATION: Destination_System
    uint8_t enum_Destination_System_Type;
    uint8_t flags_Looped_Path;
    uint16_t flags_Placement_Flags;
    struct tagReference Creature_Asset;
    string_id Creature_Variant_Name;
    uint32_t Boid_Count;
    uint8_t enum_Initial_Behavior;
    uint8_t enum_Second_Behavior;
    uint8_t enum_Reaction_Behavior;
    uint8_t enum_Reaction_Navigation_Behavior;
    uint8_t enum_Second_Reaction_Behavior;
    uint8_t enum_Second_Reaction_Navigation_Behavior;
    uint8_t enum_Despawn_Reaction_Behavior;
    uint8_t enum_Despawn_Reaction_Navigation_Behavior;
    uint8_t flags_General_Override_Flags;
    uint8_t generated_pad7bfc;
    uint16_t generated_pad7bfc_2;
    float Torus_Inner_Radius;
    float Torus_Cross_Section_Radius;
    uint8_t enum_Circling_Direction;
    uint8_t generated_padf423;
    uint16_t generated_padf423_2;
    float Leveling_Coefficient;
    uint8_t flags_Circling_Override_Flags;
    uint8_t generated_padf6f9;
    uint16_t generated_padf6f9_2;
    float Spawn_Cylinder_Radius;
    float Spawn_Cylinder_Height;
    uint8_t flags_Perching_Wandering_Override_Flags;
    uint8_t generated_padeb3d;
    uint16_t generated_padeb3d_2;
    realBounds Wandering_Time;
    realBounds Grazing_Time;
    float Change_of_Direction_Time;
    uint8_t flags_Flags_42;
    uint8_t flags_Wandering_to_same_source_point_is_allowed;
    uint16_t generated_pad094b;
    uint8_t flags_Wandering_Override_Flags;
    uint8_t generated_pad7a11;
    uint16_t generated_pad7a11_2;
    uint8_t flags_Spawn_Flags;
    uint8_t flags_Generate_Spawn_Point_for_Each_Boid;
    uint16_t generated_padd75d;
    uint32_t Number_of_Spawn_Points;
    float Distance_of_Importance;
    float Despawn_Distance;
    float Spawn_Distance;
    float Minimum_Respawn_Delay;
    realBounds Time_Before_Dehydration_Hide_is_Forced;
    float Distance_Enough_for_Dehydration_Hide;
    uint8_t enum_Spawn_Priority;
    uint8_t flags_Disable_Backward_Flock_Relevancy_Reduce;
    uint16_t generated_padbd7c;
    realBounds Production_Frequency_Bounds;
    float High_LOD_Distance;
    uint8_t flags_Spawn_Override_Flags;
    uint8_t flags_Not_Initially_Spawned;
    shortBlockIndex Spawn_trigger_volume;
    uint8_t flags_Procedural_Spawn_In_Player_Visibility;
    uint8_t generated_padd74b;
    uint16_t generated_padd74b_2;
    realBounds Procedural_Spawn_Delay_Bounds;
    float ecology_margin;
    float source_scale_to_0_radius;
    float sink_scale_to_0_radius;
    float flock_destroy_duration;
    longBlockIndex enemy_flock;
    float enemy_flock_max_target_distance;
    float constant_throttle_override;
    longBlockIndex editor_folder;
    string_id module_id;
    struct tagBlock<Flock_Destinations> Flock_Destinations_ent;
};
















struct editor_folders{
    longBlockIndex parent_folder;
    string_id name;
    struct tagReference prototype_script;
    struct scriptable_properties{
        struct tagBlock<bool_properties> bool_properties_ent;
        struct tagBlock<numeric_properties> numeric_properties_ent;
        struct tagBlock<string_properties> string_properties_ent;
        struct tagBlock<tag_properties> tag_properties_ent;
        struct tagBlock<color_properties> color_properties_ent;
        struct tagBlock<vector_properties> vector_properties_ent;
    };
    struct scriptable_properties scriptable_properties_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    uint8_t flags_flags_44;
    uint8_t generated_pad9b2d;
    uint16_t generated_pad9b2d_2;
};


struct opposing_objectives{
    shortBlockIndex objective;
};




struct activation_script{
    uint32_t script_name;
    char script_source[256];
};




struct direction{
    struct tagBlock<points> points_ent;
};


struct tasks{
    uint16_t flags_flags_45;
    uint16_t flags_inhibit_groups;
    uint16_t flags_inhibit_on_difficulty;
    uint16_t enum_movement;
    uint16_t enum_follow;
    shortBlockIndex follow_squad;
    float follow_radius;
    uint16_t flags_follow_players;
    uint16_t generated_pad4a13;
    struct tagBlock<areas> areas_ent;
    float maximum_duration;
    float exhaustion_delay;
    string_id Entry_Script;
    string_id Command_Script;
    string_id Exhaustion_Script;
    shortBlockIndex Squad_group_filter;
    uint16_t enum_dialogue_type;
    uint16_t flags_runtime_flags_2;
    uint16_t Kungfu_count;
    // EXPLANATION: UI_Controlled
    char name[32];
    uint16_t priority;
    shortBlockIndex first_child;
    shortBlockIndex next_sibling;
    shortBlockIndex parent;
    struct tagBlock<activation_script> activation_script_ent;
    uint32_t script_crc;
    uint16_t lifetime_count;
    uint16_t flags_filter_flags;
    uint16_t enum_filter;
    shortBounds capacity;
    uint16_t max_body_count;
    uint16_t enum_attitude;
    uint16_t generated_padfd5e;
    float min_strength;
    struct tagBlock<direction> direction_ent;
};




struct ai_objectives{
    char name[32];
    struct tagBlock<opposing_objectives> opposing_objectives_ent;
    uint16_t flags_objective_flags;
    shortBlockIndex zone_index;
    shortBlockIndex first_task_index;
    shortBlockIndex editor_folder;
    struct tagBlock<tasks> tasks_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};


struct neuticles{
    shortBlockIndex palette_index;
    uint16_t generated_pad3d05;
    struct point3D position;
    realEulerAngle3D rotation;
};








struct Puppets{
    string_id Puppet_Name;
    struct Subject{
        string_id Object_Name;
        struct dataReference Raw_Object_Name;
        struct Object{
            struct tagBlock<path> path_ent;
            uint32_t guid;
        };
        struct Object Object_ent;
        uint8_t enum_Object_Resolution_Type;
        uint8_t generated_padc9c6;
        uint16_t generated_padc9c6_2;
    };
    struct Subject Subject_ent;
};










struct Composer_Shows{
    struct tagReference Composition;
    string_id Instance_Name;
    struct point3D position;
    realEulerAngle3D orientation;
    string_id Zone_Set_Name;
    struct Streaming_Reference_Override{
        struct tagBlock<path> path_ent;
        uint32_t guid;
    };
    struct Streaming_Reference_Override Streaming_Reference_Override_ent;
    uint8_t enum_bsp_policy;
    uint8_t generated_pad8015;
    uint16_t generated_pad8015_2;
    struct Manual_Bsp_Flags{
        struct tagBlock<references> references_ent;
        struct dataReference flags;
        uint32_t bsp_index;
    };
    struct Manual_Bsp_Flags Manual_Bsp_Flags_ent;
    struct tagBlock<Puppets> Puppets_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    longBlockIndex editor_folder;
    string_id module_id;
    uint32_t flags_Composer_Show_Stage_Flags;
    struct Stage_Volume{
        struct tagBlock<Points> Points_ent;
        float height;
        float sink;
        struct point3D center_point;
        float trivial_cull_radius_squared;
        struct point3D aabbCenter;
        struct point3D aabbExtents;
        struct tagBlock<nativePoints2D> nativePoints2D_ent;
    };
    struct Stage_Volume Stage_Volume_ent;
    uint32_t flags_Stage_Volume_Flags;
    uint8_t flags_Streaming_Flags;
    uint8_t generated_pad6634;
    uint16_t generated_pad6634_2;
    // CUSTOM: Streaming_Range_Overrides
    float Stream_Composition_Resources_Radius_Override;
    float Stream_Pinned_Resources_Radius_Override;
    // CUSTOM: unnamed_field_1056
    uint32_t Guid;
    struct Parent_Kits{
        struct tagBlock<path> path_ent;
    };
    struct Parent_Kits Parent_Kits_ent;
};


struct decal_triangles{
    struct vertex_0{
        struct vector3D position;
        float position_w_component;
        uint32_t texcoord;
        uint32_t normal;
        uint8_t tangent_x;
        uint8_t tangent_y;
        uint8_t tangent_z;
        uint8_t array_index;
        uint32_t rayIndex;
    };
    struct vertex_0 vertex_0_ent;
    struct vertex_1{
        struct vector3D position;
        float position_w_component;
        uint32_t texcoord;
        uint32_t normal;
        uint8_t tangent_x;
        uint8_t tangent_y;
        uint8_t tangent_z;
        uint8_t array_index;
        uint32_t rayIndex;
    };
    struct vertex_1 vertex_1_ent;
    struct vertex_2{
        struct vector3D position;
        float position_w_component;
        uint32_t texcoord;
        uint32_t normal;
        uint8_t tangent_x;
        uint8_t tangent_y;
        uint8_t tangent_z;
        uint8_t array_index;
        uint32_t rayIndex;
    };
    struct vertex_2 vertex_2_ent;
};


struct decal_system{
    struct tagReference definition_ref;
    uint32_t component_index;
    struct tagBlock<decal_triangles> decal_triangles_ent;
    uint32_t generated_pad29ea;
    uint64_t runtimeVertexBuffer;
};


struct static_decal_cache{
    uint32_t bsp_number;
    struct tagBlock<decal_system> decal_system_ent;
};


struct unit_recording_references{
    struct tagReference recording;
};


struct instance_material_overrides{
    struct tagReference Original_material_ref;
    struct tagReference Override_material_ref;
};


struct material_overrides{
    struct tagReference Original_material_ref;
    struct tagReference Override_material_ref;
};




struct prefab_placements{
    string_id name;
    uint32_t guid;
    struct tagReference prefab_reference;
    string_id variant_name;
    struct point3D position;
    realEulerAngle3D rotation;
    struct vector3D scale;
    uint16_t flags_flags_47;
    uint8_t enum_cinema_only;
    uint8_t enum_exclude_from_cinema;
    uint8_t enum_remove_from_dynamic_shadow_map;
    uint8_t enum_exclude_from_intel_map;
    uint16_t generated_pad651e;
    string_id in_game_maps_material;
    uint8_t enum_ignore_cubemap_volume;
    uint8_t enum_Exclude_from_broadphase_calculation;
    uint8_t enum_pathfinding_policy;
    uint8_t enum_lightmapping_policy;
    uint8_t enum_collision_decals_policy;
    uint8_t generated_padb1d3;
    uint16_t generated_padb1d3_2;
    struct vector3D probe_grid_capture_offset;
    float override_lightmap_resolution_scale;
    float decorator_generator_density;
    float LOD_distance_override_1;
    float LOD_distance_override_2;
    float LOD_distance_override_3;
    float LOD_distance_override_4;
    float LOD_distance_override_5;
    float LOD_distance_override_6;
    float LOD_distance_override_7;
    float LOD_distance_override_8;
    float LOD_distance_override_9;
    float LOD_distance_override_10;
    float LOD_distance_override_11;
    float LOD_distance_override_12;
    float LOD_distance_override_13;
    float LOD_distance_override_14;
    float LOD_distance_override_15;
    float LOD_distance_override_16;
    float LOD_fade_after_override;
    struct tagBlock<instance_material_overrides> instance_material_overrides_ent;
    struct tagBlock<material_overrides> material_overrides_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct tagReference owner_bsp;
    uint8_t enum_Trigger_Volume_Callback;
    uint8_t generated_padfe88;
    uint16_t generated_padfe88_2;
    // EXPLANATION: bullet_collision_layer_override
    string_id bullet_collision_layer_override;
    // EXPLANATION: play_collision_layer_override
    string_id play_collision_layer_override;
};








struct asset_collection_placements{
    string_id name;
    uint32_t guid;
    struct tagReference prefab_reference;
    string_id variant_name;
    struct point3D position;
    realEulerAngle3D rotation;
    struct vector3D scale;
    uint16_t flags_flags_48;
    uint8_t enum_cinema_only;
    uint8_t enum_exclude_from_cinema;
    uint8_t enum_remove_from_dynamic_shadow_map;
    uint8_t enum_exclude_from_intel_map;
    uint16_t generated_pad651e;
    string_id in_game_maps_material;
    uint8_t enum_ignore_cubemap_volume;
    uint8_t enum_Exclude_from_broadphase_calculation;
    uint8_t enum_pathfinding_policy;
    uint8_t enum_lightmapping_policy;
    uint8_t enum_collision_decals_policy;
    uint8_t generated_padb1d3;
    uint16_t generated_padb1d3_2;
    struct vector3D probe_grid_capture_offset;
    float override_lightmap_resolution_scale;
    float decorator_generator_density;
    float LOD_distance_override_1;
    float LOD_distance_override_2;
    float LOD_distance_override_3;
    float LOD_distance_override_4;
    float LOD_distance_override_5;
    float LOD_distance_override_6;
    float LOD_distance_override_7;
    float LOD_distance_override_8;
    float LOD_distance_override_9;
    float LOD_distance_override_10;
    float LOD_distance_override_11;
    float LOD_distance_override_12;
    float LOD_distance_override_13;
    float LOD_distance_override_14;
    float LOD_distance_override_15;
    float LOD_distance_override_16;
    float LOD_fade_after_override;
    struct tagBlock<instance_material_overrides> instance_material_overrides_ent;
    struct tagBlock<material_overrides> material_overrides_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct tagReference owner_bsp;
    uint8_t enum_Trigger_Volume_Callback;
    uint8_t generated_padfe88;
    uint16_t generated_padfe88_2;
    // EXPLANATION: bullet_collision_layer_override
    string_id bullet_collision_layer_override;
    // EXPLANATION: play_collision_layer_override
    string_id play_collision_layer_override;
    struct tagReference asset_collection;
};








struct foliage_placements{
    string_id name;
    uint32_t guid;
    struct tagReference prefab_reference;
    string_id variant_name;
    struct point3D position;
    realEulerAngle3D rotation;
    struct vector3D scale;
    uint16_t flags_flags_49;
    uint8_t enum_cinema_only;
    uint8_t enum_exclude_from_cinema;
    uint8_t enum_remove_from_dynamic_shadow_map;
    uint8_t enum_exclude_from_intel_map;
    uint16_t generated_pad651e;
    string_id in_game_maps_material;
    uint8_t enum_ignore_cubemap_volume;
    uint8_t enum_Exclude_from_broadphase_calculation;
    uint8_t enum_pathfinding_policy;
    uint8_t enum_lightmapping_policy;
    uint8_t enum_collision_decals_policy;
    uint8_t generated_padb1d3;
    uint16_t generated_padb1d3_2;
    struct vector3D probe_grid_capture_offset;
    float override_lightmap_resolution_scale;
    float decorator_generator_density;
    float LOD_distance_override_1;
    float LOD_distance_override_2;
    float LOD_distance_override_3;
    float LOD_distance_override_4;
    float LOD_distance_override_5;
    float LOD_distance_override_6;
    float LOD_distance_override_7;
    float LOD_distance_override_8;
    float LOD_distance_override_9;
    float LOD_distance_override_10;
    float LOD_distance_override_11;
    float LOD_distance_override_12;
    float LOD_distance_override_13;
    float LOD_distance_override_14;
    float LOD_distance_override_15;
    float LOD_distance_override_16;
    float LOD_fade_after_override;
    struct tagBlock<instance_material_overrides> instance_material_overrides_ent;
    struct tagBlock<material_overrides> material_overrides_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct tagReference owner_bsp;
    uint8_t enum_Trigger_Volume_Callback;
    uint8_t generated_padfe88;
    uint16_t generated_padfe88_2;
    // EXPLANATION: bullet_collision_layer_override
    string_id bullet_collision_layer_override;
    // EXPLANATION: play_collision_layer_override
    string_id play_collision_layer_override;
    struct tagReference foliage_asset;
};


struct placements{
    struct vector2D position;
    float bottom;
    float top;
    uint8_t flags_hidden_sides;
    uint8_t generated_pad5e99;
    uint16_t generated_pad5e99_2;
};


struct hex_placements{
    struct tagBlock<placements> placements_ent;
    struct tagReference hex_grid_asset;
    struct tagReference generatedModel;
    struct tagReference generatedCollisionModel;
    struct tagReference generatedMaterialPalette;
};




struct quadtree{
    struct vector3D aabb_min;
    uint32_t start_index;
    struct vector3D aabb_max;
    uint32_t count;
};


struct hex_runtime_data{
    struct tagReference runtime_geo;
    struct tagReference material_palette;
    struct tagBlock<placements> placements_ent;
    struct tagBlock<quadtree> quadtree_ent;
    uint64_t hex_runtime;
    uint32_t m_maximumVisibleSides;
    uint32_t m_maximumVisibleCaps;
};




struct generic_light_definitions{
    uint32_t guid;
    struct point3D position;
    realEulerAngle3D facing;
    uint8_t enum_Active;
    uint8_t generated_pad2288;
    uint16_t generated_pad2288_2;
    struct Midnight_Light_Parameters{
        // EXPLANATION: Dynamic_Static_Shared_Light_Parameters
        string_id haloLightNode;
        uint32_t enum_Type;
        realRGBColor Color;
        float Source_Energy;
        float Baked_Indirect_Intensity_Scalar;
        float Dimmer;
        float Far_Attenuation;
        float Near_Begin;
        uint8_t enum_Properties_Override_Source;
        uint8_t generated_pade39f;
        uint16_t generated_pade39f_2;
        float Override_Source_Intensity_Multiplier;
        struct Intensity_Function{
            string_id Input_Variable;
            string_id Range_Variable;
            uint16_t enum_Output_Modifier;
            uint16_t generated_padc7e0;
            string_id Output_Modifier_Input;
            // CUSTOM: Mapping
            struct Mapping{
                // CUSTOM: unnamed_field_1085
                struct dataReference data;
                // CUSTOM: unnamed_field_1087
            };
            struct Mapping Mapping_ent;
        };
        struct Intensity_Function Intensity_Function_ent;
        struct tagReference Light_Group;
        struct Dimmer_Function{
            string_id Input_Variable;
            string_id Range_Variable;
            uint16_t enum_Output_Modifier;
            uint16_t generated_padc7e0;
            string_id Output_Modifier_Input;
            // CUSTOM: Mapping
            struct Mapping{
                // CUSTOM: unnamed_field_1091
                struct dataReference data;
                // CUSTOM: unnamed_field_1093
            };
            struct Mapping Mapping_ent;
        };
        struct Dimmer_Function Dimmer_Function_ent;
        float Near_Attenuation;
        struct Outer_Attenuation_Function{
            string_id Input_Variable;
            string_id Range_Variable;
            uint16_t enum_Output_Modifier;
            uint16_t generated_padc7e0;
            string_id Output_Modifier_Input;
            // CUSTOM: Mapping
            struct Mapping{
                // CUSTOM: unnamed_field_1097
                struct dataReference data;
                // CUSTOM: unnamed_field_1099
            };
            struct Mapping Mapping_ent;
        };
        struct Outer_Attenuation_Function Outer_Attenuation_Function_ent;
        float Far_Begin;
        float Base_position_modifier_for_fading;
        float Camera_Near_Distance_Fade_End;
        float Camera_Near_Distance_Fade_Start;
        float Camera_Distance_Fade_Start;
        float Camera_Distance_Fade_End;
        float Light_Screen_Size_Fade_Start;
        float Light_Screen_Size_Fade_End;
        float Fog_Intensity;
        float Particle_Intensity;
        float Minimum_Roughness;
        // EXPLANATION: Area_Lights_Parameters
        float Planar_Light_Width;
        float Planar_Light_Height;
        float Area_Light_Radius;
        float Area_Light_Length;
        // EXPLANATION: Shared_Spot_Parameters
        float Inner_Cone_Angle;
        float Outer_Cone_Angle;
        struct Outer_Cone_Angle_Function{
            string_id Input_Variable;
            string_id Range_Variable;
            uint16_t enum_Output_Modifier;
            uint16_t generated_padc7e0;
            string_id Output_Modifier_Input;
            // CUSTOM: Mapping
            struct Mapping{
                // CUSTOM: unnamed_field_1103
                struct dataReference data;
                // CUSTOM: unnamed_field_1105
            };
            struct Mapping Mapping_ent;
        };
        struct Outer_Cone_Angle_Function Outer_Cone_Angle_Function_ent;
        uint32_t enum_Cone_Projection_Shape;
        // EXPLANATION: Dynamic_Only_Parameters
        uint8_t enum_Static_Shadows;
        uint8_t enum_Dynamic_Shadows;
        uint16_t Static_Shadow_Resolution;
        uint16_t Dynamic_Shadow_Resolution;
        uint16_t Minimum_Static_Shadow_Resolution;
        uint16_t Minimum_Dynamic_Shadow_Resolution;
        uint8_t enum_Enable_Static_Shadow_Caching;
        uint8_t enum_Enable_Dynamic_Objects_Shadow_Caching;
        uint8_t enum_Composer_Shadows;
        uint8_t enum_Contact_Shadows_for_CVW;
        uint8_t enum_Contact_Shadows_for_First_Person;
        uint8_t enum_Contact_Shadows_for_Environment;
        float Shadow_Resolution_Distance_Scaler;
        float Camera_Distance_Static_Shadow_plus_Gobo_Fade_Start;
        float Camera_Distance_Static_Shadow_plus_Gobo_Fade_End;
        float Camera_Distance_DO_Shadow_Fade_Start;
        float Camera_Distance_DO_Shadow_Fade_End;
        float Inner_DO_Shadow_Cone_Angle_percent;
        float Outer_DO_Shadow_Cone_Angle_percent;
        float DO_Shadow_Far_Attenuation_Start_percent;
        float DO_Shadow_Far_Attenuation_End_percent;
        float Static_Object_Shadow_LOD_Scaler;
        float Dynamic_Object_Shadow_LOD_Scaler;
        float Shadow_Near_Clip_Plane;
        float Shadow_Far_Clip_Plane;
        uint8_t enum_Enable_light_OBB;
        uint8_t generated_pad96ea;
        uint16_t generated_pad96ea_2;
        struct vector3D OBB_Center_Offset;
        struct vector3D OBB_Scale_Factor;
        struct vector3D OBB_Orientation_Adjust;
        float Shadow_Bias_Offset;
        float Shadow_Filter_Width;
        float Minimum_Shadow_Filter_Width;
        float PCSS_Light_Size;
        float PCSS_Min_Filter_Size;
        float PCSS_Max_Filter_Size;
        uint8_t enum_Force_Forward_Lighting;
        uint8_t enum_Ignore_Dynamic_Objects;
        uint8_t flags_Attenuation_flags;
        uint8_t enum_Specular_Contribution;
        uint8_t enum_Diffuse_Contribution;
        uint8_t generated_pad4a35;
        uint16_t Minimum_Gobo_Resolution;
        // EXPLANATION: Dynamic_Gobo
        struct tagReference Gobos;
        realRGBColor Target_Color;
        float destroy_light_after;
        // EXPLANATION: Color_Change
        struct Interpolation_Function{
            string_id Input_Variable;
            string_id Range_Variable;
            uint16_t enum_Output_Modifier;
            uint16_t generated_pad8f6d;
            string_id Output_Modifier_Input;
            // CUSTOM: Mapping
            struct Mapping{
                // CUSTOM: unnamed_field_1109
                struct dataReference data;
                // CUSTOM: unnamed_field_1111
            };
            struct Mapping Mapping_ent;
        };
        struct Interpolation_Function Interpolation_Function_ent;
        // EXPLANATION: Bungie_Parameters
        uint32_t flags_flags_50;
        struct tagReference Lens_Flare;
        uint32_t Light_Shadow_Priority;
        uint8_t needs_update_state;
        uint8_t needs_update_bounding_sphere;
        uint16_t generated_pad6328;
        uint32_t tick_of_last_state_update;
        uint32_t tick_of_last_bounding_sphere_update;
    };
    struct Midnight_Light_Parameters Midnight_Light_Parameters_ent;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct tagReference owner_bsp;
    string_id owner_variant;
    uint16_t runtime_bsp_index;
    uint16_t runtime_variant_index;
    longBlockIndex editor_folder;
    string_id module_id;
};








struct Air_Probe_Region_Volumes{
    string_id Name;
    // CUSTOM: Volume_settings
    struct Volume{
        struct tagBlock<Points> Points_ent;
        float height;
        float sink;
        struct point3D center_point;
        float trivial_cull_radius_squared;
        struct point3D aabbCenter;
        struct point3D aabbExtents;
        struct tagBlock<nativePoints2D> nativePoints2D_ent;
    };
    struct Volume Volume_ent;
    // CUSTOM: unnamed_field_1121
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct tagReference owner_bsp;
    string_id owner_variant;
    uint16_t runtime_bsp_index;
    uint16_t runtime_variant_index;
    float Probe_XY_spacing;
    float Probe_Z_spacing;
    uint32_t Volume_priority;
    float Blend_radius_XY;
    float Blend_radius_Z;
    uint16_t flags_Flags_43;
    uint16_t generated_pad0802;
    float Probe_offset_above_ground;
    uint32_t Number_of_Z_layers;
};








struct Cubemap_Volumes{
    string_id Name;
    uint32_t Guid;
    uint32_t flags_Flags_44;
    struct Dumpling{
        struct tagBlock<inner_points> inner_points_ent;
        struct tagBlock<outer_points> outer_points_ent;
        float height;
        float sink;
        float inner_value;
        float outer_value;
        struct point3D center_point;
        float trivial_cull_radius_squared;
        float bound_volume;
    };
    struct Dumpling Dumpling_ent;
    struct tagReference Cubemap_Bitmap;
    uint16_t enum_Enable_Parallax_Correction;
    uint16_t Cubemap_Volume_Priority;
    struct point3D Cubemap_Origin;
    struct vector3D Depth_Positive;
    struct vector3D Depth_Negative;
    uint16_t enum_Active_Volume;
    uint16_t enum_Maximum_cubemap_size;
    struct point3D Intensity;
    float Self_illum_Scale_Down;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
    struct tagReference owner_bsp;
    string_id owner_variant;
    uint16_t runtime_bsp_index;
    uint16_t runtime_variant_index;
    float Blend_Distance;
    uint32_t enum_Cubemap_Volume_Type;
    float Orientation;
    struct tagReference Cubemap_Depth_Bitmap;
    float Depth_Blend_Range;
    float Intensity_Scale;
    uint16_t enum_Tintable;
    uint16_t enum_Runtime_Force_Add_Inactive;
    float Relevancy_Radius;
};








struct Terrains{
    struct Terrain_Definition{
        struct tagReference terrain_system;
        struct Volume{
            struct tagBlock<Points> Points_ent;
            float height;
            float sink;
            struct point3D center_point;
            float trivial_cull_radius_squared;
            struct point3D aabbCenter;
            struct point3D aabbExtents;
            struct tagBlock<nativePoints2D> nativePoints2D_ent;
        };
        struct Volume Volume_ent;
    };
    struct Terrain_Definition Terrain_Definition_ent;
    struct tagReference runtime_terrain;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};








struct Terrain_Volumes{
    string_id Name;
    struct Terrain_Definition{
        struct tagReference terrain_system;
        struct Volume{
            struct tagBlock<Points> Points_ent;
            float height;
            float sink;
            struct point3D center_point;
            float trivial_cull_radius_squared;
            struct point3D aabbCenter;
            struct point3D aabbExtents;
            struct tagBlock<nativePoints2D> nativePoints2D_ent;
        };
        struct Volume Volume_ent;
    };
    struct Terrain_Definition Terrain_Definition_ent;
    uint32_t Volume_Composition_Order;
    struct tagBlock<EditorMetadata> EditorMetadata_ent;
};


struct child_scenarios{
    struct tagReference tag;
    char Editor_Display_Name[256];
    uint8_t flags_Layer_Usage_Flags;
    uint8_t generated_pad26e0;
    uint16_t generated_pad26e0_2;
};


struct default_player_start_indices{
    uint32_t index;
};


struct Intro_Compositions{
    struct tagReference Composition_Reference;
};


struct multiplayer_intro_cinematics{
    string_id Name;
    struct tagBlock<Intro_Compositions> Intro_Compositions_ent;
};


struct Light_Indices{
    uint16_t index;
};


struct Region_Volume_Indices{
    uint16_t index;
};


struct Cubemap_Volume_Indices{
    uint16_t index;
};


struct structure_lighting_info_variants{
    string_id variant_name;
    struct tagReference structure_lightmap;
    struct tagReference lighting_settings;
    struct tagBlock<Light_Indices> Light_Indices_ent;
    struct tagBlock<Region_Volume_Indices> Region_Volume_Indices_ent;
    struct tagBlock<Cubemap_Volume_Indices> Cubemap_Volume_Indices_ent;
    shortBlockIndex sky_reference;
    uint16_t generated_pad17c3;
};


struct layers{
    struct tagReference tag;
    char Editor_Display_Name[256];
    uint8_t flags_Layer_Usage_Flags_2;
    uint8_t generated_pad26e0;
    uint16_t generated_pad26e0_2;
};


struct structure_bsps{
    struct tagReference structure_bsp;
    struct tagReference structure_metadata;
    string_id load_variant_name;
    float streaming_distance_expansion;
    uint16_t flags_flags_52;
    uint16_t generated_pad5da6;
    struct point3D aabbBoundsMin;
    struct point3D aabbBoundsMax;
    float custom_gravity_scale;
    struct tagBlock<structure_lighting_info_variants> structure_lighting_info_variants_ent;
    struct tagReference Auto_Generated_HLODs_settings_override;
    struct tagBlock<layers> layers_ent;
    struct tagReference hexGridCollisionRef;
    struct tagReference hexGridMaterialPaletteRef;
};


struct structure_designs{
    struct tagReference structure_design;
};


struct skies{
    struct tagReference sky;
    shortBlockIndex name;
    uint16_t generated_pad4092;
    string_id sky_name;
// Array "active on bsps" with 32 elements
    uint32_t flag_data[32];
};


struct root_clusters{
    uint16_t bsp_index;
    uint16_t cluster_index;
};


struct attached_clusters{
    uint16_t bsp_index;
    uint16_t cluster_index;
};


struct connected_clusters{
    uint16_t bsp_index;
    uint16_t cluster_index;
};


struct bsp_cluster_mapings{
    struct tagBlock<root_clusters> root_clusters_ent;
    struct tagBlock<attached_clusters> attached_clusters_ent;
    struct tagBlock<connected_clusters> connected_clusters_ent;
};


struct structure_bsp_pvs{
    struct tagBlock<bsp_cluster_mapings> bsp_cluster_mapings_ent;
};


struct zone_set_pvs{
// Array "structure bsp mask" with 32 elements
    uint32_t flag_data[32];
    struct tagBlock<structure_bsp_pvs> structure_bsp_pvs_ent;
};


struct encoded_door_pas{
    uint32_t encoded_data;
};


struct room_door_portal_encoded_pas{
    uint32_t encoded_data;
};


struct ai_deafening_pas{
    uint32_t encoded_data;
};


struct room_distances{
    uint8_t encoded_data;
};


struct game_portal_to_door_occluder_mapping{
    uint32_t first_door_occluder_index;
    uint32_t door_occluder_count;
};


struct bsp_cluster_to_room_bounds{
    uint32_t first_room_index;
    uint32_t room_index_count;
};


struct bsp_cluster_to_room_indices{
    uint16_t room_index;
};


struct zone_set_audibility{
    uint32_t door_portal_count;
    uint32_t room_count;
    realBounds room_distance_bounds;
    struct tagBlock<encoded_door_pas> encoded_door_pas_ent;
    struct tagBlock<room_door_portal_encoded_pas> room_door_portal_encoded_pas_ent;
    struct tagBlock<ai_deafening_pas> ai_deafening_pas_ent;
    struct tagBlock<room_distances> room_distances_ent;
    struct tagBlock<game_portal_to_door_occluder_mapping> game_portal_to_door_occluder_mapping_ent;
    struct tagBlock<bsp_cluster_to_room_bounds> bsp_cluster_to_room_bounds_ent;
    struct tagBlock<bsp_cluster_to_room_indices> bsp_cluster_to_room_indices_ent;
};








struct budget_overrides{
    uint32_t env_bitmap;
    uint32_t env_object_bitmap;
    uint32_t env_geometry;
    uint32_t env_object_geometry;
};


struct lipsync_sounds{
    struct tagReference dummy;
};


struct zone_sets{
    string_id name;
    char name_string[256];
    longBlockIndex pvs_index;
    uint32_t flags_flags_53;
    struct bsp_zone_flags{
        // CUSTOM: bsp_flags
        struct tagBlock<references> references_ent;
// Array "flags" with 32 elements
        uint32_t flag_data[32];
    };
    struct bsp_zone_flags bsp_zone_flags_ent;
    struct streaming_bsp_zone_flags{
        // CUSTOM: bsp_flags
        struct tagBlock<references> references_ent;
// Array "flags" with 32 elements
        uint32_t flag_data[32];
    };
    struct streaming_bsp_zone_flags streaming_bsp_zone_flags_ent;
    struct structure_design_zone_flags{
        struct tagBlock<references> references_ent;
// Array "flags" with 32 elements
        uint32_t flag_data[32];
    };
    struct structure_design_zone_flags structure_design_zone_flags_ent;
// Array "runtime bsp zone flags" with 32 elements
    uint32_t flag_data[32];
// Array "runtime structure design zone flags" with 32 elements
    uint32_t flag_data_2[32];
    uint32_t parent_zoneset;
    longBlockIndex audibility_index;
    struct tagBlock<budget_overrides> budget_overrides_ent;
    struct tagBlock<lipsync_sounds> lipsync_sounds_ent;
    struct tagReference cinematic_soundbank;
    realRGBColor sky_clear_color;
    struct tagReference baked_pvs_reference_tag;
    struct point3D aabbBoundsMin;
    struct point3D aabbBoundsMax;
    string_id load_variant_name;
};


struct bsp_lighting_order_override{
    shortBlockIndex bsp_reference;
};


struct cluster_centroids{
    struct point3D centroid;
};


struct super_node_parent_mappings{
    uint16_t parent_super_node_index;
    uint8_t parent_internal_node_index;
    uint8_t flags_flags_54;
    uint32_t has_traversal_geometry_mask;
    shortBlockIndex first_traversal_geometry_index;
    shortBlockIndex first_aabb_index;
    uint32_t aabb_mask;
    shortBlockIndex non_terminal_traversal_geometry_index;
    uint16_t generated_pad5df5;
};


struct super_node_recursable_masks{
    uint16_t mask;
};


struct portal_indices{
    uint16_t index;
};


struct seam_indices{
    uint16_t index;
};


struct structure_super_node_traversal_geometry_block{
    struct tagBlock<portal_indices> portal_indices_ent;
    struct tagBlock<seam_indices> seam_indices_ent;
};


struct hash_data{
    uint32_t node_index;
    uint32_t key_a;
    uint32_t key_b;
    uint32_t key_c;
};


struct hash_entry_count{
    uint16_t index;
};


struct original_hash_entry_count{
    uint16_t index;
};


struct render_only_headers{
    uint16_t flags_cull_flags;
    uint16_t instance_index;
    uint32_t instance_index_dword_mask;
    uint16_t bsp_index;
    uint16_t generated_padc681;
// Array "bsp mask" with 32 elements
    uint32_t flag_data[32];
};


struct collidable_headers{
    uint16_t flags_cull_flags_2;
    uint16_t instance_index;
    uint32_t instance_index_dword_mask;
    uint16_t bsp_index;
    uint16_t generated_padc681;
// Array "bsp mask" with 32 elements
    uint32_t flag_data[32];
};


struct nodes{
    struct tagBlock<render_only_headers> render_only_headers_ent;
    struct tagBlock<collidable_headers> collidable_headers_ent;
    shortBlockIndex child_below;
    shortBlockIndex child_above;
    shortBlockIndex parent;
    uint16_t cluster_index;
};


struct in_use_masks{
    uint32_t mask;
};


struct super_node_mappings{
// Array "indices" with 31 elements
    shortBlockIndex index[31];
};


struct cluster_table{
    struct tagBlock<super_node_mappings> super_node_mappings_ent;
};


struct Legacy_Bsp_KD_Tree{
    struct tagBlock<super_node_parent_mappings> super_node_parent_mappings_ent;
    struct tagBlock<super_node_recursable_masks> super_node_recursable_masks_ent;
    struct tagBlock<structure_super_node_traversal_geometry_block> structure_super_node_traversal_geometry_block_ent;
    struct instance_kd_hierarchy{
        uint32_t hash_total_count;
        struct tagBlock<hash_data> hash_data_ent;
        struct tagBlock<hash_entry_count> hash_entry_count_ent;
        struct tagBlock<original_hash_entry_count> original_hash_entry_count_ent;
        struct tagBlock<nodes> nodes_ent;
        struct tagBlock<in_use_masks> in_use_masks_ent;
        struct tagBlock<cluster_table> cluster_table_ent;
    };
    struct instance_kd_hierarchy instance_kd_hierarchy_ent;
};


struct scenario_cluster_data{
    struct tagReference bsp;
    uint32_t bsp_checksum;
    struct tagBlock<cluster_centroids> cluster_centroids_ent;
    struct externalResource<Legacy_Bsp_KD_Tree> Legacy_Bsp_KD_Tree_res;
};


struct scenario_kill_triggers{
    uint16_t trigger_volume;
    uint8_t flags_flags_55;
    uint8_t generated_pad4499;
};


struct scenario_safe_zone_triggers{
    uint16_t trigger_volume;
    uint8_t flags_flags_56;
    uint8_t generated_pad0479;
};


struct scenario_location_name_triggers{
    uint16_t trigger_volume;
    char name[32];
    uint16_t generated_padd416;
    string_id name_identifier;
};


struct scenario_unsafe_spawn_trigger_volumes{
    uint16_t trigger_volume;
};


struct zone_set_switch_trigger_volumes{
    uint16_t flags_flags_57;
    uint16_t begin_zone_set;
    uint16_t trigger_volume;
    uint16_t commit_zone_set;
};


struct script_strings{
    string_id id;
    char text[256];
};


struct runtime_layers{
    struct tagReference tag;
    char Editor_Display_Name[256];
};


struct Blocks{
    uint32_t Begin;
    uint32_t End;
};


struct Component_Table{
    uint64_t Hash;
    uint16_t HS_Type;
    uint16_t generated_paddf9f;
    uint32_t Compressed_Placement_Handle;
    uint32_t Block_Id;
    uint32_t generated_pad92ea;
};


struct internal_runtime_layers{
    string_id Name;
    string_id LayerTagName;
    uint32_t flags_Flags_45;
    struct tagBlock<Blocks> Blocks_ent;
    uint32_t Parent;
    string_id LoadVariant;
// Array "bsps" with 32 elements
    uint32_t flag_data[32];
    struct Module_Component_Lookup_table{
        struct tagBlock<Component_Table> Component_Table_ent;
    };
    struct Module_Component_Lookup_table Module_Component_Lookup_table_ent;
};


struct PlacementIndex{
    uint32_t compressedHandle;
};


struct block_offsets{
    uint32_t BlockByteOffset;
    struct tagBlock<PlacementIndex> PlacementIndex_ent;
};


struct inherited_region_layers{
    struct tagReference tag;
    char Editor_Display_Name[256];
    uint8_t flags_Layer_Usage_Flags_3;
    uint8_t generated_pad26e0;
    uint16_t generated_pad26e0_2;
};


struct level_region_data{
    string_id ZoneSetName;
    struct point3D RegionMin;
    struct point3D RegionMax;
    struct tagBlock<inherited_region_layers> inherited_region_layers_ent;
};


struct decorator_palettes{
    struct tagReference tag;
};


struct tag_graph_float_params{
    string_id name;
    float value;
};


struct tag_graph_bool_params{
    string_id name;
    uint8_t flags_value_2;
    uint8_t generated_pad0473;
    uint16_t generated_pad0473_2;
};












struct acoustics_zone_placements{
    uint32_t acoustic_zone_placement_reference;
};


struct acoustics_portal_placements{
    uint32_t acoustic_portal_placement_reference;
};


struct Placement_Bsp_Map{
    struct tagBlock<sound_placements> sound_placements_ent;
    struct tagBlock<object_node_graph_placements> object_node_graph_placements_ent;
    struct tagBlock<effect_placements> effect_placements_ent;
    struct tagBlock<acoustics_zone_placements> acoustics_zone_placements_ent;
    struct tagBlock<acoustics_portal_placements> acoustics_portal_placements_ent;
};


struct Preimported_Animation_Node_Graphs{
    struct tagReference Reference;
};


struct Sorted_Module_Lookup_Table{
    uint64_t Hash;
    longBlockIndex Index;
    uint32_t generated_padceef;
};


struct Lua_User_Libraries{
    struct tagReference lua_library;
};


// Root Block

struct levl{
    struct LevelObjects{
        struct AnyTag{
            uint64_t vtable_space;
            struct internal_struct{
                uint32_t global_tag_ID;
                uint32_t local_tag_handle;
            };
            struct internal_struct internal_struct_ent;
        };
        struct AnyTag AnyTag_ent;
        // CUSTOM: decorators
        struct decorators{
            struct tagBlock<sets> sets_ent;
        };
        struct decorators decorators_ent;
        // CUSTOM: unnamed_field_6
        struct tagBlock<comments> comments_ent;
        struct tagBlock<editor_annotations> editor_annotations_ent;
        struct tagBlock<object_names> object_names_ent;
        struct tagBlock<scenery> scenery_ent;
        struct tagBlock<bipeds> bipeds_ent;
        struct tagBlock<vehicles> vehicles_ent;
        struct tagBlock<equipment> equipment_ent;
        struct tagBlock<weapons> weapons_ent;
        struct tagBlock<device_groups> device_groups_ent;
        struct tagBlock<machines> machines_ent;
        struct tagBlock<terminals> terminals_ent;
        struct tagBlock<controls> controls_ent;
        struct tagBlock<dispensers> dispensers_ent;
        struct tagBlock<giants> giants_ent;
        struct tagBlock<effect_scenery> effect_scenery_ent;
        struct tagBlock<crates> crates_ent;
        struct tagBlock<creatures> creatures_ent;
        struct tagBlock<object_node_graph_placements> object_node_graph_placements_ent;
        struct tagBlock<splines> splines_ent;
        struct tagBlock<warzone_objective_definitions> warzone_objective_definitions_ent;
        struct tagBlock<scenario_attached_lens_flares> scenario_attached_lens_flares_ent;
        struct tagBlock<scenario_attached_light_cones> scenario_attached_light_cones_ent;
        struct tagBlock<sound_placements> sound_placements_ent;
        struct tagBlock<effect_placements> effect_placements_ent;
        struct tagBlock<Global_Forces> Global_Forces_ent;
        struct tagBlock<HLOD_Volumes> HLOD_Volumes_ent;
        struct tagBlock<Wind_Influencer_Volumes> Wind_Influencer_Volumes_ent;
        struct tagBlock<Physics_Volumes> Physics_Volumes_ent;
        struct tagBlock<Pruning_Volumes> Pruning_Volumes_ent;
        struct tagBlock<AI_Markup_Volumes> AI_Markup_Volumes_ent;
        struct tagBlock<AI_Markup_Points> AI_Markup_Points_ent;
        struct tagBlock<Bot_Markup_Points> Bot_Markup_Points_ent;
        struct tagBlock<Encounter_Zones> Encounter_Zones_ent;
        struct tagBlock<Encounter_Tree_Nodes> Encounter_Tree_Nodes_ent;
        struct tagBlock<Encounter_Behavior_Trees> Encounter_Behavior_Trees_ent;
        struct tagBlock<Placed_Orders> Placed_Orders_ent;
        struct tagBlock<Squad_Spawners> Squad_Spawners_ent;
        struct tagBlock<Reinforcement_Points> Reinforcement_Points_ent;
        struct tagBlock<Activatable_Regions> Activatable_Regions_ent;
        struct tagBlock<Activation_Volumes> Activation_Volumes_ent;
        struct tagBlock<Narrative_Moments> Narrative_Moments_ent;
        struct tagBlock<Example_Entities> Example_Entities_ent;
        struct tagBlock<soft_ceilings> soft_ceilings_ent;
        struct tagBlock<player_starting_profile> player_starting_profile_ent;
        struct tagBlock<player_starting_locations> player_starting_locations_ent;
        struct tagBlock<ambient_action_points> ambient_action_points_ent;
        struct tagBlock<trigger_volumes> trigger_volumes_ent;
        struct tagBlock<acoustic_zones> acoustic_zones_ent;
        struct tagBlock<acoustic_portals> acoustic_portals_ent;
        struct tagBlock<recorded_animations> recorded_animations_ent;
        // EXPLANATION: RENDER_FLUFF
        struct tagBlock<decals> decals_ent;
        struct tagBlock<area_generators> area_generators_ent;
        struct tagBlock<squad_groups> squad_groups_ent;
        struct tagBlock<squads> squads_ent;
        struct tagBlock<zones> zones_ent;
        struct tagBlock<nav_links> nav_links_ent;
        struct tagBlock<cookie_cutters> cookie_cutters_ent;
        struct tagBlock<navmesh_areas> navmesh_areas_ent;
        struct tagBlock<NavSeedPoints> NavSeedPoints_ent;
        struct tagBlock<ai_opportunity_areas> ai_opportunity_areas_ent;
        struct tagBlock<ai_recording_references> ai_recording_references_ent;
        struct tagBlock<point_sets> point_sets_ent;
        struct tagBlock<cutscene_flags> cutscene_flags_ent;
        struct tagBlock<cutscene_camera_points> cutscene_camera_points_ent;
        struct tagBlock<cutscene_titles> cutscene_titles_ent;
        struct tagBlock<flocks> flocks_ent;
        struct tagBlock<editor_folders> editor_folders_ent;
        struct tagBlock<ai_objectives> ai_objectives_ent;
        struct tagBlock<neuticles> neuticles_ent;
        struct tagBlock<Composer_Shows> Composer_Shows_ent;
        struct tagBlock<static_decal_cache> static_decal_cache_ent;
        struct tagBlock<unit_recording_references> unit_recording_references_ent;
        struct tagBlock<prefab_placements> prefab_placements_ent;
        struct tagBlock<asset_collection_placements> asset_collection_placements_ent;
        struct tagBlock<foliage_placements> foliage_placements_ent;
        struct tagBlock<hex_placements> hex_placements_ent;
        struct tagBlock<hex_runtime_data> hex_runtime_data_ent;
        struct tagBlock<generic_light_definitions> generic_light_definitions_ent;
        struct tagBlock<Air_Probe_Region_Volumes> Air_Probe_Region_Volumes_ent;
        struct tagBlock<Cubemap_Volumes> Cubemap_Volumes_ent;
        struct tagBlock<Terrains> Terrains_ent;
        struct tagBlock<Terrain_Volumes> Terrain_Volumes_ent;
        uint32_t generated_pad5914;
    };
    struct LevelObjects LevelObjects_ent;
    struct tagBlock<child_scenarios> child_scenarios_ent;
    uint16_t enum_type;
    uint16_t enum_mission;
    uint32_t flags_flags_51;
    uint32_t flags_runtime_trigger_volume_flags;
    uint32_t campaign_id;
    uint32_t map_id;
    string_id map_name;
    struct tagBlock<default_player_start_indices> default_player_start_indices_ent;
    struct tagReference Sound_Constants;
    struct tagReference Musketeer_TOE;
    uint32_t conversion_version;
    angle local_north;
    float local_sea_level;
    float altitude_cap;
    struct vector2D grid_world_anchor_point;
    uint16_t grid_cell_size;
    struct shortPoint2D grid_size;
    uint16_t generated_pad226a;
    struct tagBlock<multiplayer_intro_cinematics> multiplayer_intro_cinematics_ent;
    struct tagReference multiplayer_outro_cinematic;
    struct tagReference multiplayer_outro_cinematic_fallback;
    struct tagReference game_performance_throttles;
    struct tagReference asset_category_globals_override;
    struct tagBlock<structure_bsps> structure_bsps_ent;
    struct tagBlock<structure_designs> structure_designs_ent;
    struct tagReference structure_seams;
    struct tagBlock<skies> skies_ent;
    struct tagBlock<zone_set_pvs> zone_set_pvs_ent;
    struct tagBlock<zone_set_audibility> zone_set_audibility_ent;
    struct tagBlock<zone_sets> zone_sets_ent;
    struct tagBlock<bsp_lighting_order_override> bsp_lighting_order_override_ent;
    struct tagBlock<scenario_cluster_data> scenario_cluster_data_ent;
    struct tagReference multiplayer_object_types;
    // EXPLANATION: SPAWN_INFLUENCE_OVERRIDES
    struct tagReference Spawn_Settings;
    struct tagReference wind;
    struct tagReference scenario_render_data;
    struct tagReference ai_pathfinding_data;
    struct tagBlock<scenario_kill_triggers> scenario_kill_triggers_ent;
    struct tagBlock<scenario_safe_zone_triggers> scenario_safe_zone_triggers_ent;
    struct tagBlock<scenario_location_name_triggers> scenario_location_name_triggers_ent;
    struct tagBlock<scenario_unsafe_spawn_trigger_volumes> scenario_unsafe_spawn_trigger_volumes_ent;
    struct tagBlock<zone_set_switch_trigger_volumes> zone_set_switch_trigger_volumes_ent;
    struct tagReference level_scripts;
    struct tagReference interpolators;
    struct tagReference global_screen_effect;
    struct tagReference performance_throttles;
    struct tagReference location_name_globals;
    struct tagReference hud_screen_reference;
    struct tagReference required_resources;
    // EXPLANATION: garbage_collection
    struct garbage_collection{
        // EXPLANATION: Garbage_Times
        float Dropped_item;
        float Dropped_special_item;
        float Dropped_item_in_multiplayer;
        float Dead_unit;
        float Dead_player;
        float Dead_MP_Player;
        float Dead_MP_Player_overloaded;
        uint32_t Max_dead_body_count_;
    };
    struct garbage_collection garbage_collection_ent;
    struct tagBlock<script_strings> script_strings_ent;
    struct tagBlock<runtime_layers> runtime_layers_ent;
    struct tagBlock<internal_runtime_layers> internal_runtime_layers_ent;
    struct tagBlock<block_offsets> block_offsets_ent;
    struct tagReference source_level;
    struct tagBlock<level_region_data> level_region_data_ent;
    struct tagBlock<decorator_palettes> decorator_palettes_ent;
    struct tagReference dynamic_world_state_globals;
    struct tagReference tag_graph_output;
    string_id output_node_name;
    struct tagBlock<tag_graph_float_params> tag_graph_float_params_ent;
    struct tagBlock<tag_graph_bool_params> tag_graph_bool_params_ent;
    struct tagBlock<taggraph_instance_variables___strings> taggraph_instance_variables___strings_ent;
    struct tagBlock<taggraph_instance_variables___tag_references> taggraph_instance_variables___tag_references_ent;
    uint16_t flags_dynamic_world_state_flags;
    uint16_t generated_pad6f1f;
    uint32_t dynamic_world_state_lens_flare_guid;
    struct tagReference static_world;
    struct tagReference texture_group_table;
    // CUSTOM: HLODs
    struct tagReference HLODs;
    // CUSTOM: HLODs_Switch_Distance_Multipliers
    struct HLODs_Switch_Distance_Multipliers{
        float Low;
        float Medium;
        float High;
        float Ultra;
        float num2_Player_Splitscreen;
        float num3_Player_Splitscreen;
        float num4_Player_Splitscreen;
    };
    struct HLODs_Switch_Distance_Multipliers HLODs_Switch_Distance_Multipliers_ent;
    // CUSTOM: unnamed_field_1218
    struct tagReference Auto_Generated_HLODs_settings;
    // CUSTOM: unnamed_field_1219
    uint8_t flags_Dynamic_Wind;
    uint8_t flags_Push_bending;
    uint16_t generated_padbbd4;
    struct tagBlock<Placement_Bsp_Map> Placement_Bsp_Map_ent;
    string_id Audio_level_state_id;
    struct point3D Safe_Region_Extents_Override_Min;
    struct point3D Safe_Region_Extents_Override_Max;
    struct tagBlock<Preimported_Animation_Node_Graphs> Preimported_Animation_Node_Graphs_ent;
    struct tagBlock<Sorted_Module_Lookup_Table> Sorted_Module_Lookup_Table_ent;
    // EXPLANATION: Lua_User_Libraries
    struct tagBlock<Lua_User_Libraries> Lua_User_Libraries_ent;
    uint32_t flags_Decorators_Enabled_Low_Spec;
    uint32_t flags_Decorators_Enabled_Medium_Spec;
    uint32_t flags_Decorators_Enabled_High_Spec;
    uint32_t flags_Decorators_Enabled_Ultra_Spec;
};


#ifdef LEVL_STRUCTURE_IMPL
// Tag Structure (used by the loader)

uint8_t levl_structure[] {0x38,0x38,0x7,0x38,0x6,0x34,0x34,0x34,0x34,0x3B,0x3B,0x37,0x38,0x40,0x41,0x40,0x17,0x3C,0x3C,0x3C,0xF,0x1A,0x14,0x17,0x17,0x17,0x6,0x3D,0x3D,0x3B,0x41,0x3B,0x3B,0x37,0x40,0x17,0xC,0x0,0x1,0x3B,0x40,0x2,0x17,0x1,0x42,0x0,0xB,0x34,0x34,0x40,0x1,0x17,0x3B,0x3B,0x40,0x2,0x5,0x5,0x6,0x3B,0x40,0x6,0x2,0x41,0x38,0x37,0xD,0x17,0x1C,0x14,0x14,0xF,0xA,0xF,0x34,0x38,0x40,0x1,0x3C,0x3B,0x40,0x1,0x14,0x3B,0x40,0x1,0x1,0x3B,0x40,0x1,0x41,0x2,0x3B,0x40,0x1,0x20,0x3B,0x40,0x1,0x19,0x3B,0x3B,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0xE,0xA,0xF,0x30,0x38,0x6,0x5,0xA,0xA,0x3B,0x34,0x34,0x34,0x34,0x2,0x38,0x6,0x2,0x2,0x37,0x2,0x3B,0x2,0x14,0x41,0x40,0x17,0x14,0x6,0x3B,0x40,0x36,0xF,0xA,0xA,0x37,0xA,0x37,0x2,0x37,0x2,0x2,0x14,0x37,0x36,0x14,0x37,0x41,0x41,0x41,0x37,0x3B,0xF,0x34,0x34,0x34,0x40,0xE,0x34,0x34,0x6,0x2,0x2,0x37,0x2,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x38,0x2,0xF,0x34,0x34,0x34,0x2,0x12,0x12,0x12,0x12,0x3B,0x38,0x37,0xB,0x5,0x2E,0x3B,0x34,0x34,0x40,0x36,0x2,0x2,0x2,0x2,0xA,0xA,0xA,0x34,0xE,0xA,0xF,0xA,0x34,0x34,0x34,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0xA,0x34,0x34,0x34,0x5,0x5,0x5,0x34,0x34,0x2,0x40,0x17,0x1C,0x14,0x3B,0x40,0xF,0x3B,0x14,0x38,0x2E,0x0,0x3B,0x3C,0xF,0x41,0x41,0x14,0x40,0x41,0x6,0x3B,0xF,0xF,0x34,0x34,0x3B,0x3B,0x40,0x6,0x2,0x41,0x38,0x37,0xD,0x17,0x1C,0x14,0x14,0xF,0xA,0xF,0x34,0x38,0x40,0x1,0x3C,0x3B,0x40,0x1,0x14,0x3B,0x40,0x1,0x1,0x3B,0x40,0x1,0x41,0x2,0x3B,0x40,0x1,0x20,0x3B,0x40,0x1,0x19,0x3B,0x3B,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0xE,0xA,0xF,0x30,0x38,0x6,0x5,0xA,0xA,0x3B,0x34,0x34,0x34,0x34,0x2,0x38,0x6,0x2,0x2,0x37,0x2,0x3B,0x2,0x14,0x41,0x40,0x17,0x14,0x6,0x3B,0x40,0x36,0xF,0xA,0xA,0x37,0xA,0x37,0x2,0x37,0x2,0x2,0x14,0x37,0x36,0x14,0x37,0x41,0x41,0x41,0x37,0x3B,0xF,0x34,0x34,0x34,0x40,0xE,0x34,0x34,0x6,0x2,0x2,0x37,0x2,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x38,0x2,0xF,0x34,0x34,0x34,0x2,0x12,0x12,0x12,0x12,0x3B,0x38,0x14,0xD,0x3B,0x40,0x36,0x2,0x2,0x2,0x2,0xA,0xA,0xA,0x34,0xE,0xA,0xF,0xA,0x34,0x34,0x34,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0xA,0x34,0x34,0x34,0x5,0x5,0x5,0x34,0x34,0x2,0x40,0x17,0x1C,0x14,0x3B,0x40,0xF,0x3B,0x14,0x38,0x2E,0x0,0x3B,0x3C,0xF,0x41,0x41,0x14,0x40,0x41,0x6,0x3B,0xF,0xF,0x34,0x34,0x3B,0x3B,0x40,0x6,0x2,0x41,0x38,0x37,0xD,0x17,0x1C,0x14,0x14,0xF,0xA,0xF,0x34,0x38,0x40,0x1,0x3C,0x3B,0x40,0x1,0x14,0x3B,0x40,0x1,0x1,0x3B,0x40,0x1,0x41,0x2,0x3B,0x40,0x1,0x20,0x3B,0x40,0x1,0x19,0x3B,0x3B,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0xE,0xA,0xF,0x30,0x38,0x6,0x5,0xA,0xA,0x3B,0x34,0x34,0x34,0x34,0x2,0x38,0x6,0x2,0x2,0x37,0x2,0x3B,0x2,0x14,0x41,0x40,0x17,0x14,0x6,0x3B,0x40,0x36,0xF,0xA,0xA,0x37,0xA,0x37,0x2,0x37,0x2,0x2,0x14,0x37,0x36,0x14,0x37,0x41,0x41,0x41,0x37,0x3B,0xF,0x34,0x34,0x34,0x40,0xE,0x34,0x34,0x6,0x2,0x2,0x37,0x2,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x38,0x2,0xF,0x34,0x34,0x34,0x2,0x12,0x12,0x12,0x12,0x3B,0x38,0x14,0xD,0x3B,0x40,0x36,0x2,0x2,0x2,0x2,0xA,0xA,0xA,0x34,0xE,0xA,0xF,0xA,0x34,0x34,0x34,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0xA,0x34,0x34,0x34,0x5,0x5,0x5,0x34,0x34,0x2,0x40,0x17,0x1C,0x14,0x3B,0x40,0xF,0x3B,0x14,0x38,0x2E,0x0,0x3B,0x3C,0xF,0x41,0x41,0x14,0x40,0x41,0x6,0x3B,0xF,0xF,0x34,0x34,0x3B,0x38,0xB,0x34,0x34,0x41,0x3B,0x3B,0x40,0x6,0x2,0x41,0x38,0x37,0xD,0x17,0x1C,0x14,0x14,0xF,0xA,0xF,0x34,0x38,0x40,0x1,0x3C,0x3B,0x40,0x1,0x14,0x3B,0x40,0x1,0x1,0x3B,0x40,0x1,0x41,0x2,0x3B,0x40,0x1,0x20,0x3B,0x40,0x1,0x19,0x3B,0x3B,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0xE,0xA,0xF,0x30,0x38,0x6,0x5,0xA,0xA,0x3B,0x34,0x34,0x34,0x34,0x2,0x38,0x6,0x2,0x2,0x37,0x2,0x3B,0x2,0x14,0x41,0x40,0x17,0x14,0x6,0x3B,0x40,0x36,0xF,0xA,0xA,0x37,0xA,0x37,0x2,0x37,0x2,0x2,0x14,0x37,0x36,0x14,0x37,0x41,0x41,0x41,0x37,0x3B,0xF,0x34,0x34,0x34,0x40,0xE,0x34,0x34,0x6,0x2,0x2,0x37,0x2,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x38,0xD,0x3B,0x40,0x36,0x2,0x2,0x2,0x2,0xA,0xA,0xA,0x34,0xE,0xA,0xF,0xA,0x34,0x34,0x34,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0xA,0x34,0x34,0x34,0x5,0x5,0x5,0x34,0x34,0x2,0x40,0x17,0x1C,0x14,0x3B,0x40,0xF,0x3B,0x14,0x38,0x2E,0x0,0x3B,0x3C,0xF,0x41,0x41,0x14,0x40,0x41,0x6,0x3B,0xF,0xF,0x34,0x34,0x3B,0x3B,0x40,0x6,0x2,0x41,0x38,0x37,0xD,0x17,0x1C,0x14,0x14,0xF,0xA,0xF,0x34,0x38,0x40,0x1,0x3C,0x3B,0x40,0x1,0x14,0x3B,0x40,0x1,0x1,0x3B,0x40,0x1,0x41,0x2,0x3B,0x40,0x1,0x20,0x3B,0x40,0x1,0x19,0x3B,0x3B,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0xE,0xA,0xF,0x30,0x38,0x6,0x5,0xA,0xA,0x3B,0x34,0x34,0x34,0x34,0x2,0x38,0x6,0x2,0x2,0x37,0x2,0x3B,0x2,0x14,0x41,0x40,0x17,0x14,0x6,0x3B,0x40,0x36,0xF,0xA,0xA,0x37,0xA,0x37,0x2,0x37,0x2,0x2,0x14,0x37,0x36,0x14,0x37,0x41,0x41,0x41,0x37,0x3B,0xF,0x34,0x34,0x34,0x40,0xE,0x34,0x34,0x6,0x2,0x2,0x37,0x2,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x38,0x2,0xF,0x34,0x34,0x34,0x2,0x12,0x12,0x12,0x12,0x3B,0x38,0x5,0x5,0xB,0x34,0x34,0x41,0x3B,0x40,0x36,0x2,0x2,0x2,0x2,0xA,0xA,0xA,0x34,0xE,0xA,0xF,0xA,0x34,0x34,0x34,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0xA,0x34,0x34,0x34,0x5,0x5,0x5,0x34,0x34,0x2,0x40,0x17,0x1C,0x14,0x3B,0x40,0xF,0x3B,0x14,0x38,0x2E,0x0,0x3B,0x3C,0xF,0x41,0x41,0x14,0x40,0x41,0x6,0x3B,0xF,0xF,0x34,0x34,0x3B,0x3B,0x40,0x0,0x14,0xD,0x2,0x40,0x1,0x17,0x3B,0x30,0x3B,0x40,0x6,0x2,0x41,0x38,0x37,0xD,0x17,0x1C,0x14,0x14,0xF,0xA,0xF,0x34,0x38,0x40,0x1,0x3C,0x3B,0x40,0x1,0x14,0x3B,0x40,0x1,0x1,0x3B,0x40,0x1,0x41,0x2,0x3B,0x40,0x1,0x20,0x3B,0x40,0x1,0x19,0x3B,0x3B,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0xE,0xA,0xF,0x30,0x38,0x6,0x5,0xA,0xA,0x3B,0x34,0x34,0x34,0x34,0x2,0x38,0x6,0x2,0x2,0x37,0x2,0x3B,0x2,0x14,0x41,0x40,0x17,0x14,0x6,0x3B,0x40,0x36,0xF,0xA,0xA,0x37,0xA,0x37,0x2,0x37,0x2,0x2,0x14,0x37,0x36,0x14,0x37,0x41,0x41,0x41,0x37,0x3B,0xF,0x34,0x34,0x34,0x40,0xE,0x34,0x34,0x6,0x2,0x2,0x37,0x2,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x38,0x2,0xF,0x34,0x34,0x34,0x2,0x12,0x12,0x12,0x12,0x3B,0x38,0x2E,0x2E,0x15,0xD,0x3B,0x38,0xD,0xB,0x34,0x34,0x3B,0x40,0x36,0x2,0x2,0x2,0x2,0xA,0xA,0xA,0x34,0xE,0xA,0xF,0xA,0x34,0x34,0x34,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0xA,0x34,0x34,0x34,0x5,0x5,0x5,0x34,0x34,0x2,0x40,0x17,0x1C,0x14,0x3B,0x40,0xF,0x3B,0x14,0x38,0x2E,0x0,0x3B,0x3C,0xF,0x41,0x41,0x14,0x40,0x41,0x6,0x3B,0xF,0xF,0x34,0x34,0x3B,0x3B,0x40,0x6,0x2,0x41,0x38,0x37,0xD,0x17,0x1C,0x14,0x14,0xF,0xA,0xF,0x34,0x38,0x40,0x1,0x3C,0x3B,0x40,0x1,0x14,0x3B,0x40,0x1,0x1,0x3B,0x40,0x1,0x41,0x2,0x3B,0x40,0x1,0x20,0x3B,0x40,0x1,0x19,0x3B,0x3B,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0xE,0xA,0xF,0x30,0x38,0x6,0x5,0xA,0xA,0x3B,0x34,0x34,0x34,0x34,0x2,0x38,0x6,0x2,0x2,0x37,0x2,0x3B,0x2,0x14,0x41,0x40,0x17,0x14,0x6,0x3B,0x40,0x36,0xF,0xA,0xA,0x37,0xA,0x37,0x2,0x37,0x2,0x2,0x14,0x37,0x36,0x14,0x37,0x41,0x41,0x41,0x37,0x3B,0xF,0x34,0x34,0x34,0x40,0xE,0x34,0x34,0x6,0x2,0x2,0x37,0x2,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x38,0x2,0xF,0x34,0x34,0x34,0x2,0x12,0x12,0x12,0x12,0x3B,0x38,0x2E,0x2E,0x15,0xD,0x3B,0x38,0x6,0x3B,0x3B,0x40,0x6,0x2,0x41,0x38,0x37,0xD,0x17,0x1C,0x14,0x14,0xF,0xA,0xF,0x34,0x38,0x40,0x1,0x3C,0x3B,0x40,0x1,0x14,0x3B,0x40,0x1,0x1,0x3B,0x40,0x1,0x41,0x2,0x3B,0x40,0x1,0x20,0x3B,0x40,0x1,0x19,0x3B,0x3B,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0xE,0xA,0xF,0x30,0x38,0x6,0x5,0xA,0xA,0x3B,0x34,0x34,0x34,0x34,0x2,0x38,0x6,0x2,0x2,0x37,0x2,0x3B,0x2,0x14,0x41,0x40,0x17,0x14,0x6,0x3B,0x40,0x36,0xF,0xA,0xA,0x37,0xA,0x37,0x2,0x37,0x2,0x2,0x14,0x37,0x36,0x14,0x37,0x41,0x41,0x41,0x37,0x3B,0xF,0x34,0x34,0x34,0x40,0xE,0x34,0x34,0x6,0x2,0x2,0x37,0x2,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x38,0x2,0xF,0x34,0x34,0x34,0x2,0x12,0x12,0x12,0x12,0x3B,0x38,0x2E,0x2E,0x15,0xD,0x3B,0x38,0xD,0x5,0x5,0xB,0x34,0x34,0x3B,0x40,0x36,0x2,0x2,0x2,0x2,0xA,0xA,0xA,0x34,0xE,0xA,0xF,0xA,0x34,0x34,0x34,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0xA,0x34,0x34,0x34,0x5,0x5,0x5,0x34,0x34,0x2,0x40,0x17,0x1C,0x14,0x3B,0x40,0xF,0x3B,0x14,0x38,0x2E,0x0,0x3B,0x3C,0xF,0x41,0x41,0x14,0x40,0x41,0x6,0x3B,0xF,0xF,0x34,0x34,0x3B,0x3B,0x40,0x6,0x2,0x41,0x38,0x37,0xD,0x17,0x1C,0x14,0x14,0xF,0xA,0xF,0x34,0x38,0x40,0x1,0x3C,0x3B,0x40,0x1,0x14,0x3B,0x40,0x1,0x1,0x3B,0x40,0x1,0x41,0x2,0x3B,0x40,0x1,0x20,0x3B,0x40,0x1,0x19,0x3B,0x3B,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0xE,0xA,0xF,0x30,0x38,0x6,0x5,0xA,0xA,0x3B,0x34,0x34,0x34,0x34,0x2,0x38,0x6,0x2,0x2,0x37,0x2,0x3B,0x2,0x14,0x41,0x40,0x17,0x14,0x6,0x3B,0x40,0x36,0xF,0xA,0xA,0x37,0xA,0x37,0x2,0x37,0x2,0x2,0x14,0x37,0x36,0x14,0x37,0x41,0x41,0x41,0x37,0x3B,0xF,0x34,0x34,0x34,0x40,0xE,0x34,0x34,0x6,0x2,0x2,0x37,0x2,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x38,0x2,0xF,0x34,0x34,0x34,0x2,0x12,0x12,0x12,0x12,0x3B,0x38,0x2E,0x2E,0x15,0xD,0x3B,0x38,0xF,0x3B,0x34,0x34,0x34,0x40,0x36,0x2,0x2,0x2,0x2,0xA,0xA,0xA,0x34,0xE,0xA,0xF,0xA,0x34,0x34,0x34,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0xA,0x34,0x34,0x34,0x5,0x5,0x5,0x34,0x34,0x2,0x40,0x17,0x1C,0x14,0x3B,0x40,0xF,0x3B,0x14,0x38,0x2E,0x0,0x3B,0x3C,0xF,0x41,0x41,0x14,0x40,0x41,0x6,0x3B,0xF,0xF,0x34,0x34,0x3B,0x3B,0x40,0x6,0x2,0x41,0x38,0x37,0xD,0x17,0x1C,0x14,0x14,0xF,0xA,0xF,0x34,0x38,0x40,0x1,0x3C,0x3B,0x40,0x1,0x14,0x3B,0x40,0x1,0x1,0x3B,0x40,0x1,0x41,0x2,0x3B,0x40,0x1,0x20,0x3B,0x40,0x1,0x19,0x3B,0x3B,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0xE,0xA,0xF,0x30,0x38,0x6,0x5,0xA,0xA,0x3B,0x34,0x34,0x34,0x34,0x2,0x38,0x6,0x2,0x2,0x37,0x2,0x3B,0x2,0x14,0x41,0x40,0x17,0x14,0x6,0x3B,0x40,0x36,0xF,0xA,0xA,0x37,0xA,0x37,0x2,0x37,0x2,0x2,0x14,0x37,0x36,0x14,0x37,0x41,0x41,0x41,0x37,0x3B,0xF,0x34,0x34,0x34,0x40,0xE,0x34,0x34,0x6,0x2,0x2,0x37,0x2,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x38,0x2,0xF,0x34,0x34,0x34,0x2,0x12,0x12,0x12,0x12,0x3B,0x38,0x14,0xD,0x3B,0x38,0xB,0x3B,0x34,0x34,0x3B,0x40,0x6,0x2,0x41,0x38,0x37,0xD,0x17,0x1C,0x14,0x14,0xF,0xA,0xF,0x34,0x38,0x40,0x1,0x3C,0x3B,0x40,0x1,0x14,0x3B,0x40,0x1,0x1,0x3B,0x40,0x1,0x41,0x2,0x3B,0x40,0x1,0x20,0x3B,0x40,0x1,0x19,0x3B,0x3B,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0xE,0xA,0xF,0x30,0x38,0x6,0x5,0xA,0xA,0x3B,0x34,0x34,0x34,0x34,0x2,0x38,0x6,0x2,0x2,0x37,0x2,0x3B,0x2,0x14,0x41,0x40,0x17,0x14,0x6,0x3B,0x40,0x36,0xF,0xA,0xA,0x37,0xA,0x37,0x2,0x37,0x2,0x2,0x14,0x37,0x36,0x14,0x37,0x41,0x41,0x41,0x37,0x3B,0xF,0x34,0x34,0x34,0x40,0xE,0x34,0x34,0x6,0x2,0x2,0x37,0x2,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x38,0x14,0x3B,0x40,0x36,0x2,0x2,0x2,0x2,0xA,0xA,0xA,0x34,0xE,0xA,0xF,0xA,0x34,0x34,0x34,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0xA,0x34,0x34,0x34,0x5,0x5,0x5,0x34,0x34,0x2,0x40,0x17,0x1C,0x14,0x3B,0x40,0xF,0x3B,0x14,0x38,0x2E,0x0,0x3B,0x3C,0xF,0x41,0x41,0x14,0x40,0x41,0x6,0x3B,0xF,0xF,0x34,0x34,0x3B,0x3B,0x40,0x6,0x2,0x41,0x38,0x37,0xD,0x17,0x1C,0x14,0x14,0xF,0xA,0xF,0x34,0x38,0x40,0x1,0x3C,0x3B,0x40,0x1,0x14,0x3B,0x40,0x1,0x1,0x3B,0x40,0x1,0x41,0x2,0x3B,0x40,0x1,0x20,0x3B,0x40,0x1,0x19,0x3B,0x3B,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0xE,0xA,0xF,0x30,0x38,0x6,0x5,0xA,0xA,0x3B,0x34,0x34,0x34,0x34,0x2,0x38,0x6,0x2,0x2,0x37,0x2,0x3B,0x2,0x14,0x41,0x40,0x17,0x14,0x6,0x3B,0x40,0x36,0xF,0xA,0xA,0x37,0xA,0x37,0x2,0x37,0x2,0x2,0x14,0x37,0x36,0x14,0x37,0x41,0x41,0x41,0x37,0x3B,0xF,0x34,0x34,0x34,0x40,0xE,0x34,0x34,0x6,0x2,0x2,0x37,0x2,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x38,0x2,0xF,0x34,0x34,0x34,0x2,0x12,0x12,0x12,0x12,0x3B,0x38,0xB,0x3B,0x34,0x34,0x40,0x36,0x2,0x2,0x2,0x2,0xA,0xA,0xA,0x34,0xE,0xA,0xF,0xA,0x34,0x34,0x34,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0xA,0x34,0x34,0x34,0x5,0x5,0x5,0x34,0x34,0x2,0x40,0x17,0x1C,0x14,0x3B,0x40,0xF,0x3B,0x14,0x38,0x2E,0x0,0x3B,0x3C,0xF,0x41,0x41,0x14,0x40,0x41,0x6,0x3B,0xF,0xF,0x34,0x34,0x3B,0x3B,0x40,0x6,0x2,0x41,0x38,0x37,0xD,0x17,0x1C,0x14,0x14,0xF,0xA,0xF,0x34,0x38,0x40,0x1,0x3C,0x3B,0x40,0x1,0x14,0x3B,0x40,0x1,0x1,0x3B,0x40,0x1,0x41,0x2,0x3B,0x40,0x1,0x20,0x3B,0x40,0x1,0x19,0x3B,0x3B,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0xE,0xA,0xF,0x30,0x38,0x6,0x5,0xA,0xA,0x3B,0x34,0x34,0x34,0x34,0x2,0x38,0x6,0x2,0x2,0x37,0x2,0x3B,0x2,0x14,0x41,0x40,0x17,0x14,0x6,0x3B,0x40,0x36,0xF,0xA,0xA,0x37,0xA,0x37,0x2,0x37,0x2,0x2,0x14,0x37,0x36,0x14,0x37,0x41,0x41,0x41,0x37,0x3B,0xF,0x34,0x34,0x34,0x40,0xE,0x34,0x34,0x6,0x2,0x2,0x37,0x2,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x3B,0x40,0x2,0x41,0x17,0xD,0x40,0x1,0x17,0x3B,0x38,0x5,0x5,0x3B,0x3B,0x40,0x2,0x38,0x40,0x19,0x19,0x19,0x14,0xA,0xA,0xA,0xA,0xA,0xA,0x34,0x34,0x40,0x40,0x14,0x14,0x14,0x14,0x14,0x3B,0x40,0x40,0x41,0x3B,0x18,0x18,0x14,0x14,0x14,0x14,0x14,0x14,0x6,0x3B,0x40,0x14,0x3B,0x3B,0x3B,0x3B,0x40,0x40,0x14,0x14,0x14,0x14,0x14,0x5,0x34,0x34,0x40,0x40,0x41,0x3B,0x18,0x18,0x14,0x14,0x14,0x14,0x14,0x14,0x6,0x3B,0x41,0x3B,0x40,0x15,0x3C,0x34,0x34,0x34,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x6,0x3B,0x40,0x2,0x0,0x0,0xA,0x34,0x34,0x34,0x40,0x0,0x2E,0x3B,0x40,0x1,0x17,0x3B,0x3B,0x40,0x2,0x6,0x2,0x17,0x1C,0xF,0xA,0x34,0x34,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0x41,0x40,0x1,0x17,0x3B,0x3B,0x40,0x2,0x6,0x2,0x17,0x1C,0x34,0x34,0xA,0x34,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0x41,0x40,0x1,0x17,0x3B,0x20,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0xF,0x34,0x34,0x34,0x30,0x2,0x3B,0x40,0x2,0x6,0x19,0x1C,0xF,0xF,0x34,0x34,0x30,0x41,0x40,0x14,0x3B,0x40,0x19,0x3B,0x40,0x1,0x17,0x3B,0x2,0x2,0x14,0x14,0x38,0x5,0x5,0x3B,0x3B,0x40,0x2,0x6,0x2,0x17,0x1C,0x14,0xE,0xA,0x34,0x30,0x14,0x14,0x41,0x41,0x2,0x40,0x2,0x14,0x3B,0x40,0x2,0xF,0x34,0x34,0x34,0x3B,0x40,0x2,0x2,0x3B,0x40,0x2,0x41,0x3B,0x6,0x40,0x1,0x17,0x3B,0x2,0x38,0x5,0x5,0x3B,0x3B,0x40,0x6,0x2,0x6,0x17,0x1C,0x14,0x41,0x30,0x2,0x3B,0x40,0x6,0x2,0x41,0x40,0x1,0x17,0x3B,0x38,0x40,0x17,0x3B,0x14,0x14,0x17,0x14,0x17,0x17,0x40,0x16,0x3B,0x3B,0x14,0xB,0x34,0x34,0x2,0x38,0x41,0x2,0x3B,0xF,0x34,0x37,0xB,0x38,0x3E,0x14,0x14,0x14,0x3B,0x37,0xA,0x34,0x34,0x34,0x41,0x41,0x41,0x41,0x6,0x3B,0x40,0x2,0xC,0x18,0x14,0x14,0xD,0xD,0x38,0x37,0x38,0x37,0x42,0x37,0x3B,0x3B,0x38,0x37,0x38,0x37,0x42,0x37,0x3B,0x3B,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x6,0xC,0x40,0x1,0x17,0x3B,0x30,0x2,0x6,0x38,0x40,0x17,0x3B,0x14,0x14,0x17,0x14,0x17,0x17,0x40,0x16,0x3B,0x3B,0x6,0x3B,0x40,0x2,0xC,0x37,0x38,0x40,0x17,0x3B,0x14,0x14,0x17,0x14,0x17,0x17,0x40,0x16,0x3B,0x3B,0x37,0x2,0x40,0x1,0x17,0x3B,0x41,0x41,0x3B,0x40,0x2,0x38,0x40,0x17,0x3B,0x14,0x14,0x17,0x14,0x17,0x17,0x40,0x16,0x3B,0x3B,0xE,0x34,0x34,0x40,0x1,0x17,0x3B,0x3B,0x40,0x2,0x38,0x40,0x17,0x3B,0x14,0x14,0x17,0x14,0x17,0x17,0x40,0x16,0x3B,0x3B,0x8,0xA,0x34,0x34,0x34,0x2,0xE,0x34,0x34,0x40,0xB,0x3B,0x40,0xB,0x3B,0x40,0xB,0x3B,0x40,0xB,0x3B,0x40,0xB,0xB,0xB,0x3B,0x40,0xB,0x3B,0xA,0x34,0x34,0x34,0x14,0x5,0x34,0x34,0x40,0x1,0x17,0x3B,0xE,0x34,0x34,0x30,0x2,0x6,0xE,0x34,0x34,0x3B,0x40,0x2,0x17,0x1C,0x40,0x1,0x17,0x3B,0xA,0xA,0x34,0x34,0x14,0x14,0x5,0xB,0x2F,0x34,0x34,0x14,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x3B,0xA,0x34,0x34,0x34,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x3B,0x40,0xB,0x3B,0x30,0x2,0x6,0xF,0x34,0x34,0x34,0x2,0x3B,0x40,0x2,0x17,0x1C,0xA,0x34,0x34,0x34,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x3B,0x0,0x0,0x0,0x0,0xA,0x34,0x34,0x34,0x40,0x1,0x17,0x3B,0x2,0x30,0x6,0xF,0x34,0x34,0x34,0x3B,0x40,0x2,0x38,0x40,0x17,0x3B,0x14,0x14,0x17,0x14,0x17,0x17,0x40,0x16,0x3B,0x3B,0xA,0x34,0x34,0x34,0x30,0x2,0x40,0x1,0x17,0x3B,0x6,0xE,0x34,0x34,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x3B,0x40,0xA,0x34,0xE,0x6,0xA,0x34,0x34,0x34,0x6,0xA,0x34,0xB,0x2,0x6,0xE,0x34,0x34,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x2,0xA,0x34,0x34,0x34,0x3B,0xA,0x34,0x34,0x34,0x14,0x3B,0x40,0x2,0x17,0x1C,0xA,0xA,0xE,0xA,0x34,0x34,0x34,0x6,0xA,0x34,0x34,0x34,0x6,0xA,0x34,0xB,0x2,0x6,0xE,0x34,0x34,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x2,0xA,0x34,0x34,0x34,0x30,0x2,0x40,0x1,0x17,0x3B,0x40,0x6,0x3B,0x6,0x6,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x3B,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x6,0xE,0x34,0x34,0x3B,0x40,0x2,0x17,0x1C,0x30,0x2,0x40,0x1,0x17,0x3B,0x41,0x40,0x2,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x3B,0x40,0xA,0x34,0xE,0x6,0xA,0x34,0x34,0x34,0x6,0xA,0x34,0xB,0x2,0x6,0xE,0x34,0x34,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x2,0xA,0x34,0x34,0x34,0x3B,0x6,0xE,0x34,0x34,0x3B,0x40,0x2,0x38,0x40,0x17,0x3B,0x14,0x14,0x17,0x14,0x17,0x17,0x40,0x16,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x3B,0x40,0x2,0x17,0x1C,0x41,0xA,0x34,0x34,0x34,0x14,0x14,0x14,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x6,0xA,0x34,0x34,0x34,0x14,0x14,0x14,0x3B,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x6,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0xA,0xA,0xA,0x34,0x14,0x14,0x41,0x25,0x41,0x41,0x38,0x41,0x41,0x41,0xA,0x34,0x34,0x34,0x14,0x14,0x14,0xF,0x34,0x34,0x34,0x38,0xA,0x34,0x34,0x34,0x38,0xA,0x34,0x34,0x34,0x14,0x3B,0xA,0xF,0x34,0x34,0x41,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x3B,0x3B,0x38,0xA,0x34,0x34,0x34,0x38,0xA,0x34,0x34,0x34,0x14,0x3B,0xA,0xF,0x34,0x34,0x41,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x3B,0x3B,0x3B,0x2,0xA,0x34,0x34,0x34,0x40,0x2,0x3B,0x30,0x2,0x6,0xE,0x34,0x34,0x3B,0x40,0xE,0x34,0x34,0x2,0x17,0x1C,0xA,0xA,0xA,0x34,0x40,0x41,0x3B,0xA,0x34,0x34,0x34,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x30,0x2,0x6,0x3B,0x40,0x2,0x19,0x40,0x1,0x17,0x3B,0xA,0x34,0x34,0x34,0x14,0xA,0x34,0x34,0x34,0x30,0x2,0x3B,0x40,0x2,0x38,0x40,0x17,0x3B,0x14,0x14,0x17,0x14,0x17,0x17,0x40,0x16,0x3B,0x3B,0xF,0xA,0x34,0x34,0x14,0x14,0x14,0x40,0x1E,0x1E,0x1E,0x1E,0x1E,0x16,0x16,0x16,0x34,0x34,0x34,0x34,0x34,0x34,0x34,0x34,0x3B,0x40,0x1,0x17,0x3B,0x30,0x2,0x3B,0x40,0x2,0x38,0x40,0x17,0x3B,0x14,0x14,0x17,0x14,0x17,0x17,0x40,0x16,0x3B,0x3B,0xF,0x34,0x34,0x34,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x40,0x2,0x3B,0x40,0x2,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x40,0x2,0xA,0x34,0x34,0x34,0x6,0x3B,0x40,0x2,0x37,0x38,0xF,0x34,0x34,0x34,0x30,0x2,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x2,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x3B,0x40,0xF,0x34,0x34,0x34,0x30,0x2,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x2,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x3B,0x37,0x37,0x38,0xF,0x34,0x34,0x34,0x30,0x2,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x2,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x30,0x30,0x30,0x30,0x14,0x30,0x30,0x30,0x3B,0x40,0xF,0x34,0x34,0x34,0x30,0x2,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x2,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x30,0x30,0x30,0x30,0x14,0x30,0x30,0x30,0x3B,0x37,0xF,0x34,0x34,0x34,0x40,0xF,0x34,0x34,0x34,0x38,0xF,0x34,0x34,0x34,0x38,0x3C,0x34,0x34,0x34,0x14,0x3C,0x34,0x34,0x34,0x14,0x3B,0x38,0x30,0x2,0x3B,0x38,0x14,0x8,0x8,0x8,0x18,0x18,0x18,0x3C,0x34,0x34,0x34,0x14,0x37,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x37,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x14,0x37,0x30,0x2,0x37,0x3B,0x3B,0x38,0x38,0x3C,0x34,0x34,0x34,0x14,0x3C,0x34,0x34,0x34,0x14,0x3B,0x37,0x19,0x19,0x18,0x19,0x19,0x18,0x37,0x37,0x19,0x1C,0x18,0x19,0x19,0x18,0x37,0x3B,0x37,0x38,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x30,0x6,0x2,0x2,0x3B,0x37,0x3B,0x37,0x14,0x14,0x14,0x6,0x14,0x14,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x37,0x38,0x41,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x14,0x14,0x3B,0x37,0x37,0x38,0x41,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x14,0x14,0x3B,0x37,0x37,0x38,0xF,0x34,0x34,0x34,0x14,0x14,0x14,0x6,0x41,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x14,0x14,0x14,0x37,0x30,0x2,0x37,0x37,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x30,0x2,0x37,0x3B,0x37,0x37,0x40,0xF,0x34,0x34,0x34,0x38,0x3C,0x34,0x34,0x34,0x14,0x3C,0x34,0x34,0x34,0x14,0x3B,0x38,0x30,0x2,0x3B,0x38,0x14,0x8,0x8,0x8,0x18,0x18,0x18,0x3C,0x34,0x34,0x34,0x14,0x37,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x37,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x14,0x37,0x30,0x2,0x37,0x3B,0x3B,0x38,0x38,0x3C,0x34,0x34,0x34,0x14,0x3C,0x34,0x34,0x34,0x14,0x3B,0x37,0x19,0x19,0x18,0x19,0x19,0x18,0x37,0x37,0x19,0x1C,0x18,0x19,0x19,0x18,0x37,0x3B,0x37,0x38,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x30,0x6,0x2,0x2,0x3B,0x37,0x3B,0x37,0x37,0x40,0x41,0x38,0xA,0x34,0x34,0x34,0x2,0x3C,0x34,0x34,0x34,0x14,0x3B,0x38,0xA,0x34,0x34,0x34,0x2,0x3C,0x34,0x34,0x34,0x14,0x3B,0x3B,0x37,0x3B,0x40,0x38,0xE,0x34,0x34,0x14,0x3C,0x34,0x34,0x34,0x14,0x3C,0x34,0x34,0x34,0x14,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x38,0x30,0x2,0x3B,0x38,0x14,0x8,0x8,0x8,0x18,0x18,0x18,0x3C,0x34,0x34,0x34,0x14,0x37,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x37,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x14,0x37,0x30,0x2,0x37,0x3B,0x3B,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x14,0x14,0x14,0x3B,0x40,0x38,0x30,0x2,0x3B,0x38,0x30,0x2,0x3B,0x38,0xE,0x34,0x34,0x14,0x3C,0x34,0x34,0x34,0x14,0x3C,0x34,0x34,0x34,0x14,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x38,0x30,0x2,0x3B,0x38,0x14,0x8,0x8,0x8,0x18,0x18,0x18,0x3C,0x34,0x34,0x34,0x14,0x37,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x37,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x14,0x37,0x30,0x2,0x37,0x3B,0x3B,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x14,0x14,0x14,0x3B,0xF,0x34,0x34,0x34,0x14,0x14,0x3B,0x38,0xE,0x34,0x34,0x14,0x3C,0x34,0x34,0x34,0x14,0x3C,0x34,0x34,0x34,0x14,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x38,0x30,0x2,0x3B,0x38,0x14,0x8,0x8,0x8,0x18,0x18,0x18,0x3C,0x34,0x34,0x34,0x14,0x37,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x37,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x14,0x37,0x30,0x2,0x37,0x3B,0x3B,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x14,0x14,0x14,0x3B,0x38,0xE,0x34,0x34,0x14,0x3C,0x34,0x34,0x34,0x14,0x3C,0x34,0x34,0x34,0x14,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x38,0x30,0x2,0x3B,0x38,0x14,0x8,0x8,0x8,0x18,0x18,0x18,0x3C,0x34,0x34,0x34,0x14,0x37,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x37,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x14,0x37,0x30,0x2,0x37,0x3B,0x3B,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x14,0x14,0x14,0x3B,0x3B,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x41,0x38,0x30,0x2,0x3B,0xF,0x34,0x34,0x34,0x14,0x14,0x3B,0x40,0x1,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x3B,0x3B,0x40,0xF,0x3B,0x40,0x40,0x41,0x3B,0x40,0x41,0x2,0x2,0x3B,0x40,0x41,0x2,0x2,0x3B,0x37,0x2,0x40,0x41,0x2,0x2,0x3B,0x37,0x37,0xA,0x34,0x34,0x34,0x14,0x14,0x40,0x41,0x2,0x2,0x3B,0x37,0x40,0xF,0x34,0x34,0x34,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x14,0x8,0x14,0x14,0x8,0x30,0x6,0x2,0x40,0x41,0x2,0x2,0x3B,0x3B,0x3B,0x40,0xD,0x2,0x37,0xA,0x34,0x34,0x34,0x14,0x14,0x37,0x3C,0x34,0x34,0x34,0x14,0x3C,0x34,0x34,0x34,0x40,0xF,0x34,0x34,0x34,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x14,0x8,0x14,0x14,0x8,0x30,0x6,0x2,0x3B,0x3B,0x40,0xD,0x2,0x14,0x2,0x14,0x3B,0x40,0x40,0xA,0x34,0x34,0x34,0x2,0x6,0x3B,0x40,0xA,0x34,0x34,0x34,0x2,0x6,0x3B,0x3B,0x40,0x41,0x38,0xF,0x34,0x34,0x34,0x38,0x3C,0x34,0x34,0x34,0x14,0x3C,0x34,0x34,0x34,0x14,0x3B,0x38,0x30,0x2,0x3B,0x38,0x14,0x8,0x8,0x8,0x18,0x18,0x18,0x3C,0x34,0x34,0x34,0x14,0x37,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x37,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x14,0x37,0x30,0x2,0x37,0x3B,0x3B,0x3B,0x38,0x41,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x14,0x3B,0x38,0xF,0x34,0x34,0x34,0x41,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x14,0x14,0x14,0x37,0x30,0x2,0x37,0x37,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x30,0x2,0x37,0x3B,0x40,0xF,0x34,0x34,0x34,0x38,0x3C,0x34,0x34,0x34,0x14,0x3C,0x34,0x34,0x34,0x14,0x3B,0x38,0x30,0x2,0x3B,0x38,0x14,0x8,0x8,0x8,0x18,0x18,0x18,0x3C,0x34,0x34,0x34,0x14,0x37,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x37,0x38,0xA,0x34,0x34,0x34,0x41,0x2,0x3B,0x37,0x40,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x14,0x37,0x30,0x2,0x37,0x3B,0x3B,0x3B,0x3B,0x40,0x30,0x30,0x30,0x30,0x3B,0x40,0xD,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x18,0x18,0x14,0x18,0x18,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x2,0x2,0xA,0xA,0x34,0x34,0x3B,0x3B,0x40,0x1E,0x1E,0x1E,0x1E,0x1E,0x16,0x16,0x16,0x34,0x34,0x34,0x34,0x34,0x34,0x34,0x34,0x3B,0x40,0x1,0x17,0x3B,0x30,0x2,0x6,0x3B,0x40,0x2,0x19,0x30,0x2,0x3B,0x40,0xE,0xE,0x2,0xB,0x34,0x34,0x3B,0x40,0x0,0x15,0x15,0x41,0x5,0x5,0x41,0x2,0x41,0x5,0x5,0x41,0x2,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x41,0x2,0x2,0x2E,0x34,0x34,0x40,0x1,0x17,0x3B,0x3B,0x40,0x17,0x6,0x6,0x8,0x8,0x2,0x30,0x2,0x40,0x1,0x17,0x3B,0x3B,0x40,0x2,0x19,0x1B,0x41,0x14,0x2,0x40,0x1,0x17,0x3B,0x3B,0x40,0x2,0x2,0x6,0x5,0x34,0x34,0x2,0xB,0xA,0xF,0x2,0x2,0x19,0x19,0x1C,0x17,0x6,0x6,0x17,0x14,0x14,0x40,0x17,0x3B,0x40,0x1E,0x1E,0x1E,0x1E,0x1E,0x16,0x16,0x16,0x34,0x34,0x34,0x34,0x34,0x34,0x34,0x34,0x3B,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x5,0x34,0x34,0x30,0x40,0x1,0x17,0x3B,0x6,0x3B,0x40,0x6,0x2,0xF,0xF,0xA,0x34,0x40,0x14,0x14,0x3B,0x14,0x14,0x41,0x41,0xC,0x41,0x2,0x2,0x17,0x1C,0x17,0x38,0x40,0x17,0x3B,0x40,0x17,0x3B,0x14,0x14,0x14,0x14,0x17,0x14,0x14,0x3B,0x5,0x3C,0x34,0x40,0x1,0x17,0x3B,0x38,0x5,0x5,0x3B,0x3B,0x40,0x6,0x2,0xA,0x34,0x34,0x34,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0x6,0x14,0xE,0x34,0x34,0x14,0x14,0x14,0x14,0x19,0x41,0x41,0x41,0x41,0x17,0x1C,0x18,0x18,0x18,0x17,0x40,0x1,0x17,0x3B,0x38,0x5,0x5,0x3B,0x3B,0x40,0x0,0x4,0x4,0x4,0x34,0x5,0x34,0x34,0x42,0x3B,0x36,0x40,0x41,0xF,0x34,0x34,0x34,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0x1C,0x17,0x14,0x14,0x14,0x40,0x1,0x17,0x3B,0x3B,0x40,0x0,0x40,0x1,0x17,0x3B,0x17,0x1C,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x3B,0x40,0x0,0x2E,0x2E,0x30,0x2,0x38,0x2E,0x0,0x3B,0x34,0x34,0x40,0x1,0x17,0x3B,0x3B,0x40,0x0,0xD,0xB,0x2E,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0x2E,0x2E,0x2F,0x34,0x34,0x30,0x40,0x38,0xE,0x34,0x34,0x3B,0x2,0x17,0x6,0x6,0x1B,0x14,0x2,0x14,0xB,0x34,0x34,0x2,0x2,0x2,0x2F,0xB,0x40,0x2F,0xE,0x14,0x14,0x2,0x2,0x3B,0xF,0x34,0x34,0x34,0x3B,0x40,0x38,0xE,0x34,0x34,0x3B,0x2,0x2F,0x34,0x34,0x17,0x6,0x6,0x1B,0x14,0xE,0x34,0x34,0x41,0x41,0x41,0x41,0x41,0x41,0xB,0xA,0x34,0x5,0x34,0x34,0x2,0x2,0x2,0x14,0xB,0x2E,0x2E,0x2E,0x2,0x2,0x2,0x2F,0xB,0x40,0x2F,0xE,0x14,0x14,0x2,0x2,0x3B,0x2E,0x34,0x34,0x3B,0x2,0x2,0x6,0x38,0x40,0x36,0x2,0x38,0xE,0x34,0x34,0x3B,0x5,0xB,0x40,0x38,0xE,0x34,0x34,0x3B,0x41,0x5,0x34,0x34,0x3B,0x40,0x38,0xE,0x34,0x34,0x3B,0x41,0x5,0x34,0x34,0x3B,0x40,0x38,0xE,0x34,0x34,0x3B,0x41,0x5,0x34,0x34,0x3B,0x40,0x38,0xE,0x34,0x34,0x3B,0x41,0x5,0x34,0x34,0x3B,0xA,0x34,0x34,0x34,0x41,0x2,0x2,0x2,0x2,0x2F,0xB,0x40,0x2F,0xE,0x14,0x14,0x2,0x2,0x3B,0x3B,0x3B,0x38,0x40,0x36,0x2,0x38,0xE,0x34,0x34,0x3B,0x5,0xB,0x40,0x38,0xE,0x34,0x34,0x3B,0x41,0x5,0x34,0x34,0x3B,0x40,0x38,0xE,0x34,0x34,0x3B,0x41,0x5,0x34,0x34,0x3B,0x40,0x38,0xE,0x34,0x34,0x3B,0x41,0x5,0x34,0x34,0x3B,0x40,0x38,0xE,0x34,0x34,0x3B,0x41,0x5,0x34,0x34,0x3B,0xA,0x34,0x34,0x34,0x41,0x2,0x2,0x2,0x2,0x2F,0xB,0x40,0x2F,0xE,0x14,0x14,0x2,0x2,0x3B,0x3B,0x3B,0x38,0x2E,0x0,0x3B,0xA,0x34,0x40,0x1,0x17,0x3B,0x3B,0x40,0x0,0xE,0x34,0x34,0x30,0x40,0x0,0xD,0x17,0x6,0x6,0x14,0x38,0x40,0x3E,0x3B,0x3B,0x40,0x17,0x6,0x6,0x3B,0x36,0xD,0x14,0x14,0x14,0x3B,0x38,0x40,0x3E,0x3B,0x3B,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0x40,0x1,0x17,0x3B,0x3B,0x40,0xB,0x2E,0x6,0x5,0x3C,0x3C,0x2,0xE,0xB,0xE,0x34,0x34,0x38,0x17,0x17,0x17,0x17,0xE,0x34,0x34,0x3B,0x40,0x1,0x17,0x3B,0x3B,0x40,0x2,0x40,0x17,0x6,0x6,0x3B,0x40,0x38,0x6,0x5,0xA,0xA,0x3B,0x3B,0x14,0x14,0xB,0x5,0x40,0x1,0x17,0x3B,0x4,0x34,0x34,0x34,0x3B,0x40,0x40,0x17,0x6,0x6,0x3B,0x2,0x14,0x14,0xC,0x3C,0x34,0x34,0x34,0x40,0x1,0x17,0x3B,0x3B,0x40,0x2,0x17,0x3B,0x40,0x40,0x17,0x6,0x6,0x3B,0x14,0x14,0x2,0x17,0x14,0x35,0x40,0x2E,0x2F,0x3B,0x6,0x14,0x14,0xA,0x4,0x4,0x34,0x41,0x41,0xA,0x34,0x34,0x34,0x2,0x2,0x4,0x34,0x34,0x34,0x36,0x37,0x17,0x6,0x6,0x14,0x37,0xA,0x34,0x34,0x34,0x40,0x1,0x17,0x3B,0x3B,0x40,0x0,0x3B,0x40,0x0,0x40,0x0,0x2,0x17,0x6,0x6,0x1B,0x14,0x14,0x3B,0x2E,0x34,0x34,0xD,0xD,0x30,0x2,0x40,0x1,0x17,0x3B,0x38,0x2E,0x0,0x3B,0x34,0x34,0x3B,0x40,0x2,0x17,0x1C,0x2,0x30,0x2E,0x34,0x34,0x40,0x1,0x17,0x3B,0x6,0x3B,0x40,0xE,0xB,0x0,0x37,0x17,0x1C,0x2E,0x34,0x34,0x40,0x1,0x17,0x3B,0x3B,0x40,0x2,0x6,0x2,0x2,0x26,0x26,0xB,0xB,0xB,0x34,0x34,0x12,0x12,0x14,0x14,0x14,0x14,0x40,0x1,0x17,0x3B,0x3B,0x40,0x2,0x40,0x1,0x17,0x3B,0x17,0x41,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0x2E,0x34,0x34,0x40,0x2,0xD,0x19,0x1B,0x14,0x14,0x5,0x5,0x2E,0x2E,0x3B,0x36,0xA,0xF,0xE,0x41,0x2,0x6,0xA,0xA,0xA,0xA,0xA,0xA,0xA,0xA,0xF,0x34,0x34,0x34,0x14,0x14,0xA,0x34,0x34,0x34,0x14,0xF,0x34,0x34,0x34,0x14,0x14,0xF,0x34,0x34,0x34,0x25,0x25,0x14,0xF,0xF,0x34,0x34,0xF,0x34,0x34,0x34,0xF,0xF,0x34,0x34,0x6,0x14,0x14,0x14,0x14,0x25,0x14,0xA,0xF,0x34,0x34,0x25,0x14,0xF,0xF,0x2E,0xF,0x34,0x34,0x34,0x25,0x14,0x14,0x14,0x14,0x30,0x14,0x14,0x30,0x2,0x40,0x2,0xA,0x34,0x34,0x34,0x19,0x14,0x14,0x2E,0x2E,0x3B,0x3B,0x40,0x30,0x2,0x41,0x38,0x40,0x1,0x3C,0x3B,0x40,0x1,0x14,0x3B,0x40,0x1,0x1,0x3B,0x40,0x1,0x41,0x2,0x3B,0x40,0x1,0x20,0x3B,0x40,0x1,0x19,0x3B,0x3B,0x40,0x1,0x17,0x3B,0xF,0x34,0x34,0x34,0x3B,0x40,0x0,0x40,0x2E,0x3B,0xE,0x2E,0x2E,0x2E,0x40,0xE,0xE,0xE,0xB,0xB,0x2E,0x14,0xE,0x34,0x34,0x40,0xB,0xF,0x34,0x2E,0x2F,0x8,0x6,0x6,0x6,0x6,0x3B,0x14,0x14,0x2,0x2,0x2,0x2E,0xB,0xE,0x5,0x36,0x0,0x5,0x2E,0x2E,0x2E,0x40,0x6,0x1,0x3B,0x3E,0x5,0xE,0xB,0x23,0x5,0xB,0x34,0x34,0x14,0x40,0x40,0x17,0x6,0x6,0x3B,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x3B,0x40,0x2E,0x34,0x34,0x17,0x1C,0x3B,0x40,0x41,0x2,0x17,0x1C,0x2,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0xA,0x34,0x34,0x34,0x38,0x40,0x41,0x3B,0x42,0x6,0x3B,0x40,0x2,0x38,0x2,0x42,0x38,0x40,0x6,0x2,0x3B,0x6,0x3B,0xA,0x34,0x34,0x34,0x3B,0x3B,0x40,0x1,0x17,0x3B,0x30,0x2,0xD,0x38,0x40,0x17,0x3B,0x14,0x14,0x17,0x14,0x17,0x17,0x40,0x16,0x3B,0x3B,0xD,0xF,0x34,0x34,0x34,0x37,0x14,0x14,0x37,0x6,0x38,0x40,0x6,0x2,0x3B,0x3B,0x3B,0x40,0x6,0x40,0x41,0x6,0x40,0x38,0x19,0x14,0x6,0x6,0x4,0x4,0x4,0x4,0x3E,0x3B,0x38,0x19,0x14,0x6,0x6,0x4,0x4,0x4,0x4,0x3E,0x3B,0x38,0x19,0x14,0x6,0x6,0x4,0x4,0x4,0x4,0x3E,0x3B,0x3B,0x34,0x34,0x34,0x34,0x7,0x3B,0x3B,0x40,0x41,0x3B,0x40,0x2,0x6,0x41,0x2,0x17,0x1C,0x19,0xE,0xA,0xA,0xA,0xA,0x34,0x34,0x2,0xA,0xA,0xA,0xA,0xA,0x34,0x34,0x34,0x19,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x40,0x41,0x41,0x3B,0x40,0x41,0x41,0x3B,0x40,0x1,0x17,0x3B,0x41,0xA,0x34,0x34,0x34,0x36,0x2,0x36,0x2,0x3B,0x40,0x2,0x6,0x41,0x2,0x17,0x1C,0x19,0xE,0xA,0xA,0xA,0xA,0x34,0x34,0x2,0xA,0xA,0xA,0xA,0xA,0x34,0x34,0x34,0x19,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x40,0x41,0x41,0x3B,0x40,0x41,0x41,0x3B,0x40,0x1,0x17,0x3B,0x41,0xA,0x34,0x34,0x34,0x36,0x2,0x36,0x2,0x41,0x3B,0x40,0x2,0x6,0x41,0x2,0x17,0x1C,0x19,0xE,0xA,0xA,0xA,0xA,0x34,0x34,0x2,0xA,0xA,0xA,0xA,0xA,0x34,0x34,0x34,0x19,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x40,0x41,0x41,0x3B,0x40,0x41,0x41,0x3B,0x40,0x1,0x17,0x3B,0x41,0xA,0x34,0x34,0x34,0x36,0x2,0x36,0x2,0x41,0x3B,0x40,0x40,0x18,0x14,0x14,0xF,0x34,0x34,0x34,0x3B,0x41,0x41,0x41,0x41,0x3B,0x40,0x41,0x41,0x40,0x19,0x3D,0x3D,0x3B,0x40,0x19,0x3E,0x19,0x3E,0x3B,0x7,0x6,0x6,0x3B,0x40,0x6,0x17,0x1C,0xA,0x34,0x34,0x34,0x38,0x36,0x2,0xC,0x1F,0x14,0x14,0x14,0x14,0x14,0xA,0x34,0x34,0x34,0x14,0x38,0x2,0x2,0xB,0x34,0x34,0x2,0x37,0x38,0x37,0x42,0x37,0x3B,0x3B,0x41,0x38,0x2,0x2,0xB,0x34,0x34,0x2,0x37,0x38,0x37,0x42,0x37,0x3B,0x3B,0x14,0x38,0x2,0x2,0xB,0x34,0x34,0x2,0x37,0x38,0x37,0x42,0x37,0x3B,0x3B,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x36,0x14,0x14,0x14,0x14,0x36,0x14,0x14,0x38,0x2,0x2,0xB,0x34,0x34,0x2,0x37,0x38,0x37,0x42,0x37,0x3B,0x3B,0xC,0x36,0xA,0xA,0x5,0x5,0x5,0x5,0xA,0xA,0xA,0xA,0xA,0xA,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0xA,0x34,0x34,0x34,0x19,0x19,0x19,0x14,0x14,0x14,0x14,0x14,0x14,0xA,0xA,0xF,0xA,0xA,0x34,0x5,0x36,0x41,0x1F,0x14,0x36,0x38,0x2,0x2,0xB,0x34,0x34,0x2,0x37,0x38,0x37,0x42,0x37,0x3B,0x3B,0x36,0xD,0x41,0x6,0x4,0x4,0x34,0x34,0x6,0x6,0x3B,0x40,0x1,0x17,0x3B,0x41,0x2,0x5,0x5,0x30,0x2,0x3B,0x40,0x2,0x37,0x38,0x40,0x17,0x3B,0x14,0x14,0x17,0x14,0x17,0x17,0x40,0x16,0x3B,0x3B,0x37,0x40,0x1,0x17,0x3B,0x41,0x2,0x5,0x5,0x14,0x14,0x6,0x14,0x14,0xE,0x34,0x34,0x14,0x6,0x3B,0x40,0x2,0x6,0xD,0x38,0x40,0x17,0x3B,0x40,0x17,0x3B,0x14,0x14,0x14,0x14,0x17,0x14,0x14,0x3B,0x41,0xB,0x5,0x17,0x19,0x19,0xB,0xB,0x17,0x14,0x40,0x1,0x17,0x3B,0x41,0x2,0x5,0x5,0x14,0xC,0x14,0x41,0x14,0x14,0xB,0xB,0x14,0x3B,0x40,0x38,0x41,0x38,0x40,0x17,0x3B,0x14,0x14,0x17,0x14,0x17,0x17,0x40,0x16,0x3B,0x3B,0x3B,0x41,0x40,0x1,0x17,0x3B,0x3B,0x40,0x2,0x38,0x41,0x38,0x40,0x17,0x3B,0x14,0x14,0x17,0x14,0x17,0x17,0x40,0x16,0x3B,0x3B,0x3B,0x6,0x40,0x1,0x17,0x3B,0x3B,0x34,0x34,0x34,0x34,0x3B,0x40,0x41,0x1,0xF,0x34,0x34,0x34,0x3B,0xB,0xB,0xD,0xD,0x6,0x6,0x2,0x40,0x6,0x3B,0x41,0x41,0x6,0x8,0x14,0x14,0x18,0x5,0x10,0x34,0x34,0x40,0x2,0x40,0x41,0x3B,0x3B,0x41,0x41,0x41,0x41,0x40,0x41,0x41,0x2,0x14,0xE,0x34,0x34,0x17,0x17,0x14,0x40,0x2,0x41,0x41,0x40,0x5,0x3B,0x40,0x5,0x3B,0x40,0x5,0x3B,0x2E,0x34,0x34,0x3B,0x41,0x40,0x41,0x1,0xF,0x34,0x34,0x34,0x3B,0x41,0x41,0x3B,0x40,0x41,0x3B,0x41,0x40,0x41,0x2E,0x34,0x34,0x2,0x39,0x0020,0x3E,0x3B,0x40,0x39,0x0020,0x3E,0x40,0x40,0x40,0x5,0x5,0x3B,0x40,0x5,0x5,0x3B,0x40,0x5,0x5,0x3B,0x3B,0x3B,0x3B,0x40,0x6,0x6,0x25,0x40,0x6,0x3B,0x40,0x6,0x3B,0x40,0x6,0x3B,0x40,0x4,0x3B,0x40,0x6,0x6,0x3B,0x40,0x6,0x6,0x3B,0x40,0x5,0x3B,0x3B,0x40,0x2,0x1,0x30,0xD,0x38,0x37,0x40,0x41,0x3B,0x39,0x0020,0x3E,0x3B,0x38,0x37,0x40,0x41,0x3B,0x39,0x0020,0x3E,0x3B,0x38,0x40,0x41,0x3B,0x39,0x0020,0x3E,0x3B,0x39,0x0020,0x3E,0x39,0x0020,0x3E,0x6,0x30,0x40,0x6,0x6,0x6,0x6,0x3B,0x40,0x41,0x3B,0x41,0x1F,0x41,0x17,0x17,0x2,0x3B,0x40,0x2E,0x3B,0x40,0x41,0x6,0x40,0x17,0x3B,0x43,0x40,0x5,0x4,0xF,0x6,0x2E,0x2E,0x6,0x2E,0x34,0x34,0x3B,0x40,0x3D,0x3B,0x40,0x40,0x5,0x3B,0x40,0x5,0x3B,0x3B,0x38,0x6,0x40,0x6,0x6,0x6,0x6,0x3B,0x40,0x5,0x3B,0x40,0x5,0x3B,0x40,0x40,0xE,0x5,0x6,0x5,0x34,0x34,0x39,0x0020,0x3E,0x3B,0x40,0xE,0x5,0x6,0x5,0x34,0x34,0x39,0x0020,0x3E,0x3B,0x2E,0x2E,0x2E,0x5,0x3B,0x40,0x6,0x3B,0x40,0x40,0x39,0x001f,0x2E,0x3B,0x3B,0x3B,0x3B,0x3B,0x41,0x36,0x41,0x41,0x41,0x41,0x40,0x5,0xF,0x34,0x3B,0x40,0x5,0xF,0x34,0x3B,0x40,0x5,0x0,0x34,0x34,0x2,0x3B,0x40,0x5,0x3B,0x40,0xE,0x5,0x5,0x5,0x3B,0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x36,0x38,0x36,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x6,0x3B,0x40,0x2,0x1,0x3B,0x40,0x41,0x1,0x3B,0x40,0x2,0x2,0xD,0x40,0x3E,0x3E,0x3B,0x6,0x2,0x39,0x0020,0x3E,0x38,0x40,0x3F,0x3D,0x34,0x34,0x3E,0x3E,0x34,0x34,0x34,0x34,0x3B,0x3B,0x3B,0x40,0x3E,0x40,0x3E,0x3B,0x3B,0x41,0x40,0x2,0x17,0x17,0x40,0x41,0x1,0xF,0x34,0x34,0x34,0x3B,0x3B,0x40,0x41,0x3B,0x41,0x41,0x2,0x40,0x2,0x14,0x3B,0x40,0x2,0xF,0x34,0x34,0x34,0x3B,0x40,0x2,0x2,0x3B,0x40,0x2,0x41,0x3B,0xE,0x34,0x34,0x6,0x41,0x41,0x37,0x41,0x37,0x38,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x3B,0x37,0x41,0x37,0xF,0xF,0x34,0x34,0x40,0x40,0x6,0x3B,0x40,0x6,0x3B,0x40,0x6,0x3B,0x40,0x6,0x3B,0x40,0x6,0x3B,0x3B,0x2,0x17,0x17,0x40,0x41,0x3B,0x40,0x3F,0x30,0x34,0x34,0x34,0x34,0x3B,0x36,0x40,0x41,0x3B,0xD,0xD,0xD,0xD,0x3B};


#else
extern uint8_t levl_structure[7114];
#endif


#pragma pack(pop)

